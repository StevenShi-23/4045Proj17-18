9733638|<t>Post</t> <t>JSON</t> <t>using</t> <t>Python</t> <t>Requests</t>|"<t>I</t> <t>need</t> <t>to</t> <t>POST</t> <t>a</t> <t>JSON</t> <t>from</t> <t>a</t> <t>client</t> <t>to</t> <t>a</t> <t>server</t>. <t>I'm</t> <t>using</t> <t>Python</t> <t>2.7.1</t> <t>and</t> <t>simplejson</t>. <t>The</t> <t>client</t> <t>is</t> <t>using</t> <t>Requests</t>. <t>The</t> <t>server</t> <t>is</t> <t>CherryPy</t>. <t>I</t> <t>can</t> <t>GET</t> <t>a</t> <t>hard-coded</t> <t>JSON</t> <t>from</t> <t>the</t> <t>server</t> (<t>code</t> <t>not</t> <t>shown</t>), <t>but</t> <t>when</t> <t>I</t> <t>try</t> <t>to</t> <t>POST</t> <t>a</t> <t>JSON</t> <t>to</t> <t>the</t> <t>server</t>, <t>I</t> <t>get</t> ""<t>400</t> <t>Bad</t> <t>Request</t>"".

<t>Here</t> <t>is</t> <t>my</t> <t>client</t> <t>code</t>:

<code><c>data</c> <c>=</c> {'<c>sender</c>':   '<c>Alice</c>',
    '<c>receiver</c>'<c>:</c> '<c>Bob</c>',
    '<c>message</c>'<c>:</c>  '<c>We</c> <c>did</c> <c>it</c><c>!</c>'}
<c>data_json</c> <c>=</c> <c>simplejson</c><c>.</c><c>dumps</c>(<c>data</c>)
<c>payload</c> <c>=</c> {'<c>json_payload</c>'<c>:</c> <c>data_json</c>}
<c>r</c> <c>=</c> <c>requests</c><c>.</c><c>post(</c>""<c>htt</c><c>p://localhost:8080</c>"", <c>data</c><c>=</c><c>payload</c>)
</code>

<t>Here</t> <t>is</t> <t>the</t> <t>server</t> <t>code</t>.

<code><c>class</c> <c>Root(</c><c>object</c>)<c>:</c>

    <c>def</c> <c>__init__(</c><c>self</c>, <c>content</c>)<c>:</c>
        <c>self</c><c>.</c><c>content</c> <c>=</c> <c>content</c>
        <c>print</c> <c>self</c><c>.</c><c>content</c>  <c>#</c> <c>this</c> <c>works</c>

    <c>exposed</c> <c>=</c> <c>True</c>

    <c>def</c> <c>GET(</c><c>self</c>)<c>:</c>
        <c>cherrypy</c><c>.</c><c>response</c><c>.</c><c>headers</c>['<c>Content-Type</c>'] <c>=</c> '<c>application</c><c>/json</c>'
        <c>return</c> <c>simplejson</c><c>.</c><c>dumps(</c><c>self</c><c>.</c><c>content</c>)

    <c>def</c> <c>POST(</c><c>self</c>)<c>:</c>
        <c>self</c><c>.</c><c>content</c> <c>=</c> <c>simplejson</c><c>.</c><c>loads(</c><c>cherrypy</c><c>.</c><c>request</c><c>.</c><c>body</c><c>.</c><c>read(</c>))
</code>

<t>Any</t> <t>ideas</t>?
"
2915471|<t>Install</t> <t>a</t> <t>Python</t> <t>package</t> <t>into</t> <t>a</t> <t>different</t> <t>directory</t> <t>using</t> <t>pip</t>?|"<t>I</t> <t>know</t> <t>the</t> <t>obvious</t> <t>answer</t> <t>is</t> <t>to</t> <t>use</t> <t>virtualenv</t> <t>and</t> <t>virtualenvwrapper</t>, <t>but</t> <t>for</t> <t>various</t> <t>reasons</t> <t>I</t> <t>can't/don't</t> <t>want</t> <t>to</t> <t>do</t> <t>that</t>.

<t>So</t> <t>how</t> <t>do</t> <t>I</t> <t>modify</t> <t>the</t> <t>command</t>

<code><c>pip</c> <c>install</c> <c>package_name</c>
</code>

<t>to</t> <t>make</t> <code><c>pip</c></code> <t>install</t> <t>the</t> <t>package</t> <t>somewhere</t> <t>other</t> <t>than</t> <t>the</t> <t>default</t> <code><c>site-packages</c></code>?
"
960733|<t>Python</t> <t>creating</t> <t>a</t> <t>dictionary</t> <t>of</t> <t>lists</t>|"<t>I</t> <t>want</t> <t>to</t> <t>create</t> <t>a</t> <t>dictionary</t> <t>whose</t> <t>values</t> <t>are</t> <t>lists</t>.  <t>For</t> <t>example</t>: 

<code>{
  <c>1</c><c>:</c> ['<c>1</c>'],
  <c>2</c><c>:</c> ['<c>1</c>','<c>2</c>'],
  <c>3</c><c>:</c> ['<c>2</c>']
}
</code>

<t>If</t> <t>I</t> <t>do</t>:

<code><c>d</c> <c>=</c> <c>dict(</c>)
<c>a</c> <c>=</c> ['<c>1</c>', '<c>2</c>']
<c>for</c> <c>i</c> <c>in</c> <c>a</c><c>:</c>
    <c>for</c> <c>j</c> <c>in</c> <c>range(</c><c>int(</c><c>i</c>), <c>int(</c><c>i</c>) <c>+</c> <c>2</c>)<c>:</c> 
        <c>d</c>[<c>j</c>]<c>.</c><c>append(</c><c>i</c>)
</code>

<t>I</t> <t>get</t> <t>a</t> <t>KeyError</t>, <t>because</t> <t>d[...]</t> <t>isn't</t> <t>a</t> <t>list</t>.  <t>In</t> <t>this</t> <t>case</t>, <t>I</t> <t>can</t> <t>add</t> <t>the</t> <t>following</t> <t>code</t> <t>after</t> <t>the</t> <t>assignment</t> <t>of</t> <t>a</t> <t>to</t> <t>initialize</t> <t>the</t> <t>dictionary</t>. 

<code><c>for</c> <c>x</c> <c>in</c> <c>range(</c><c>1</c>, <c>4</c>)<c>:</c>
    <c>d</c>[<c>x</c>] <c>=</c> <c>list(</c>)
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>better</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>?  <t>Lets</t> <t>say</t> <t>I</t> <t>don't</t> <t>know</t> <t>the</t> <t>keys</t> <t>I</t> <t>am</t> <t>going</t> <t>to</t> <t>need</t> <t>until</t> <t>I</t> <t>am</t> <t>in</t> <t>the</t> <t>second</t> <code><c>for</c></code> <t>loop</t>.  <t>For</t> <t>example</t>:

<code><c>class</c> <c>relation</c><c>:</c>
    <c>scope_list</c> <c>=</c> <c>list(</c>)
...
<c>d</c> <c>=</c> <c>dict(</c>)
<c>for</c> <c>relation</c> <c>in</c> <c>relation_list</c><c>:</c>
    <c>for</c> <c>scope_item</c> <c>in</c> <c>relation</c><c>.</c><c>scope_list</c><c>:</c>
        <c>d</c>[<c>scope_item</c>]<c>.</c><c>append(</c><c>relation</c>)
</code>

<t>An</t> <t>alternative</t> <t>would</t> <t>then</t> <t>be</t> <t>replacing</t> 

<code><c>d</c>[<c>scope_item</c>]<c>.</c><c>append(</c><c>relation</c>)
</code>

<t>with</t> 

<code><c>if</c> <c>d</c><c>.</c><c>has_key(</c><c>scope_item</c>)<c>:</c>
    <c>d</c>[<c>scope_item</c>]<c>.</c><c>append(</c><c>relation</c>)
<c>else</c><c>:</c>
    <c>d</c>[<c>scope_item</c>] <c>=</c> [<c>relation</c>,]
</code>

<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>handle</t> <t>this</t>?  <t>Ideally</t>, <t>appending</t> <t>would</t> ""<t>just</t> <t>work</t>"".  <t>Is</t> <t>there</t> <t>some</t> <t>way</t> <t>to</t> <t>express</t> <t>that</t> <t>I</t> <t>want</t> <t>a</t> <t>dictionary</t> <t>of</t> <t>empty</t> <t>lists</t>, <t>even</t> <t>if</t> <t>I</t> <t>don't</t> <t>know</t> <t>every</t> <t>key</t> <t>when</t> <t>I</t> <t>first</t> <t>create</t> <t>the</t> <t>list</t>?
"
159720|<t>What</t> <t>is</t> <t>the</t> <t>naming</t> <t>convention</t> <t>in</t> <t>Python</t> <t>for</t> <t>variable</t> <t>and</t> <t>function</t> <t>names</t>?|"<t>Coming</t> <t>from</t> <t>a</t> <t>C#</t> <t>background</t> <t>the</t> <t>naming</t> <t>convention</t> <t>for</t> <t>variables</t> <t>and</t> <t>method</t> <t>names</t> <t>are</t> <t>usually</t> <t>either</t> <t>CamelCase</t> <t>or</t> <t>Pascal</t> <t>Case</t>:

<code><c>//</c> <c>C</c># <c>example</c>
<c>string</c> <c>thisIsMyVariable</c> <c>=</c> ""<c>a</c>""
<c>public</c> <c>void</c> <c>ThisIsMyMethod(</c>)
</code>

<t>In</t> <t>Python</t>, <t>I</t> <t>have</t> <t>seen</t> <t>the</t> <t>above</t> <t>but</t> <t>I</t> <t>have</t> <t>also</t> <t>seen</t> <t>underscores</t> <t>being</t> <t>used</t>:

<code># <c>python</c> <c>example</c>
<c>this_is_my_variable</c> <c>=</c> '<c>a</c>'
<c>def</c> <c>this_is_my_function(</c>)<c>:</c>
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>more</t> <t>preferable</t>, <t>definitive</t> <t>coding</t> <t>style</t> <t>for</t> <t>Python</t>?
"
4426663|<t>How</t> <t>do</t> <t>I</t> <t>remove</t> <t>the</t> <t>first</t> <t>Item</t> <t>from</t> <t>a</t> <t>Python</t> <t>list</t>?|"<t>I</t> <t>have</t> <t>the</t> <t>list</t> <code>[<c>0</c>, <c>1</c>, <c>2</c>, <c>3</c>, <c>4</c>]</code> <t>I'd</t> <t>like</t> <t>to</t> <t>make</t> <t>it</t> <t>into</t> <code>[<c>1</c>, <c>2</c>, <c>3</c>, <c>4</c>]</code>. <t>How</t> <t>do</t> <t>I</t> <t>go</t> <t>about</t> <t>this</t>? 
"
122327|<t>How</t> <t>do</t> <t>I</t> <t>find</t> <t>the</t> <t>location</t> <t>of</t> <t>my</t> <t>Python</t> <t>site-packages</t> <t>directory</t>?|"<t>How</t> <t>do</t> <t>I</t> <t>find</t> <t>the</t> <t>location</t> <t>of</t> <t>my</t> <t>site-packages</t> <t>directory</t>?
"
89228|<t>Calling</t> <t>an</t> <t>external</t> <t>command</t> <t>in</t> <t>Python</t>|"<t>How</t> <t>can</t> <t>I</t> <t>call</t> <t>an</t> <t>external</t> <t>command</t> (<t>as</t> <t>if</t> <t>I'd</t> <t>typed</t> <t>it</t> <t>at</t> <t>the</t> <t>Unix</t> <t>shell</t> <t>or</t> <t>Windows</t> <t>command</t> <t>prompt</t>) <t>from</t> <t>within</t> <t>a</t> <t>Python</t> <t>script</t>?
"
172439|<t>How</t> <t>do</t> <t>I</t> <t>split</t> <t>a</t> <t>multi-line</t> <t>string</t> <t>into</t> <t>multiple</t> <t>lines</t>?|"<t>I</t> <t>have</t> <t>a</t> <t>multi-line</t> <t>string</t> <t>literal</t> <t>that</t> <t>I</t> <t>want</t> <t>to</t> <t>do</t> <t>an</t> <t>operation</t> <t>on</t> <t>each</t> <t>line</t>, <t>like</t> <t>so</t>:

<code><c>inputString</c> <c>=</c> """"""<c>Line</c> <c>1</c>
<c>Line</c> <c>2</c>
<c>Line</c> <c>3</c>""""""
</code>

<t>I</t> <t>want</t> <t>to</t> <t>do</t> <t>something</t> <t>like</t> <t>the</t> <t>following</t>:

<code><c>for</c> <c>line</c> <c>in</c> <c>inputString</c><c>:</c>
    <c>doStuff(</c>)
</code>
"
23708898|'<t>pip</t>' <t>is</t> <t>not</t> <t>recognized</t> <t>as</t> <t>an</t> <t>internal</t> <t>or</t> <t>external</t> <t>command</t>|"<t>I'm</t> <t>running</t> <t>into</t> <t>a</t> <t>weird</t> <t>error</t> <t>trying</t> <t>to</t> <t>install</t> <t>Django</t> <t>on</t> <t>my</t> <t>computer</t>.

<t>This</t> <t>is</t> <t>the</t> <t>sequence</t> <t>that</t> <t>I've</t> <t>typed</t> <t>into</t> <t>my</t> <t>command</t> <t>line</t>:

<code><c>C:\Python34&gt;</c><c>python</c> <c>get-pip</c><c>.</c><c>py</c>
<c>Requirement</c> <c>already</c> <c>up-to-date</c><c>:</c> <c>pip</c> <c>in</c> <c>c:\python34\lib\site-packages
Cleaning</c> <c>up</c>...

<c>C:\Python34&gt;</c><c>pip</c> <c>install</c> <c>Django</c>
'<c>pip</c>' <c>is</c> <c>not</c> <c>recognized</c> <c>as</c> <c>an</c> <c>internal</c> <c>or</c> <c>external</c> <c>command</c>,
<c>operable</c> <c>program</c> <c>or</c> <c>batch</c> <c>file</c><c>.</c>

<c>C:\Python34&gt;</c><c>lib\site-packages\pip</c> <c>install</c> <c>Django</c>
'<c>lib</c><c>\site-packages\pip</c>' <c>is</c> <c>not</c> <c>recognized</c> <c>as</c> <c>an</c> <c>internal</c> <c>or</c> <c>external</c> <c>command</c>,
<c>operable</c> <c>program</c> <c>or</c> <c>batch</c> <c>file</c><c>.</c> 
</code>

<t>What</t> <t>could</t> <t>be</t> <t>causing</t> <t>this</t>?

<t>EDIT</t> <t>___________________</t>

<t>As</t> <t>requested</t> <t>this</t> <t>is</t> <t>what</t> <t>I</t> <t>get</t> <t>when</t> <t>I</t> <t>type</t> <t>in</t> <t>echo</t> <t>%PATH%</t>

<code><c>C:\Python34&gt;</c><c>echo</c> <c>%</c><c>PATH</c><c>%</c>
<c>C:\Program Files\ImageMagick-6.8.8-Q16</c>;<c>C:\Program Files (x86)\Intel\iCLS Client\</c>
;<c>C:\Program Files\Intel\iCLS Client\</c>;<c>C:\Windows\system32</c>;<c>C:\Windows</c>;<c>C:\Windows\S
ystem32\Wbem</c>;<c>C:\Windows\System32\WindowsPowerShell\v1.0\</c>;<c>C:\Program Files (x86)\
Windows Live\Shared</c>;<c>C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86</c>;<c>C:\Progr
am Files (x86)\Intel\OpenCL SDK\2.0\bin\x64</c>;<c>C:\Program Files\Intel\Intel(R) Management Engine Components\DAL</c>;<c>C:\Program Files\Intel\Intel(R) Management Engine Components\IPT</c>;<c>C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL</c>;<c>C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT</c>;<c>C:\P
rogram Files (x86)\nodejs\</c>;<c>C:\Program Files (x86)\Heroku\bin</c>;<c>C:\Program Files (x
86)\git\cmd</c>;<c>C:\RailsInstaller\Ruby2.0.0\bin</c>;<c>C:\RailsInstaller\Git\cmd</c>;<c>C:\RailsIn
staller\Ruby1.9.3\bin</c>;<c>C:\Users\Javi\AppData\Roaming\npm
</c></code>
"
3249524|<t>Print</t> <t>in</t> <t>one</t> <t>line</t> <t>dynamically</t>|"<t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>make</t> <t>several</t> <t>statements</t> <t>that</t> <t>give</t> <t>standard</t> <t>output</t> <t>without</t> <t>seeing</t> <t>newlines</t> <t>in</t> <t>between</t> <t>statements</t>.

<t>Specifically</t>, <t>suppose</t> <t>I</t> <t>have</t>:

<code><c>for</c> <c>item</c> <c>in</c> <c>range(</c><c>1</c>,<c>100</c>)<c>:</c>
    <c>print</c> <c>item</c>
</code>

<t>The</t> <t>result</t> <t>is</t>:

<code><c>1</c>
<c>2</c>
<c>3</c>
<c>4</c>
<c>.</c>
<c>.</c>
<c>.</c>
</code>

<t>How</t> <t>get</t> <t>this</t> <t>to</t> <t>instead</t> <t>look</t> <t>like</t>:

<code><c>1</c> <c>2</c> <c>3</c> <c>4</c> <c>5</c> ...
</code>

<t>Even</t> <t>better</t>, <t>is</t> <t>it</t> <t>possible</t> <t>to</t> <t>print</t> <t>the</t> <t>single</t> <t>number</t> <t>over</t> <t>the</t> <t>last</t> <t>number</t>, <t>so</t> <t>only</t> <t>one</t> <t>number</t> <t>is</t> <t>on</t> <t>the</t> <t>screen</t> <t>at</t> <t>a</t> <t>time</t>?
"
1485841|<t>Behaviour</t> <t>of</t> <t>increment</t> <t>and</t> <t>decrement</t> <t>operators</t> <t>in</t> <t>Python</t>|"<t>I</t> <t>notice</t> <t>that</t> <t>a</t> <t>pre-increment/decrement</t> <t>operator</t> <t>can</t> <t>be</t> <t>applied</t> <t>on</t> <t>a</t> <t>variable</t> (<t>like</t> <code><c>+</c><c>+</c><c>count</c></code>). <t>It</t> <t>compiles</t>, <t>but</t> <t>it</t> <t>does</t> <t>not</t> <t>actually</t> <t>change</t> <t>the</t> <t>value</t> <t>of</t> <t>the</t> <t>variable</t>!

<t>What</t> <t>is</t> <t>the</t> <t>behavior</t> <t>of</t> <t>the</t> <t>pre-increment/decrement</t> <t>operators</t> (<t>++/--</t>) <t>in</t> <t>Python</t>? 

<t>Why</t> <t>does</t> <t>Python</t> <t>deviate</t> <t>from</t> <t>the</t> <t>behavior</t> <t>of</t> <t>these</t> <t>operators</t> <t>seen</t> <t>in</t> <t>C/C++</t>?
"
7818811|<t>Import Error</t>: <t>No</t> <t>module</t> <t>named</t> <t>numpy</t>|"<t>I</t> <t>have</t> <t>a</t> <t>very</t> <t>similar</t> <t>question</t> <t>to</t> <t>this</t> <t>question</t>, <t>but</t> <t>still</t> <t>1</t> <t>step</t> <t>behind</t>. 
<t>I</t> <t>have</t> <t>only</t> <t>one</t> <t>version</t> <t>of</t> <t>python</t> <t>3</t> <t>installed</t> <t>on</t> <t>my</t> <t>Windows</t> <t>7(sorry</t>) <t>64-bit</t> <t>system</t>.
<t>I</t> <t>installed</t> <t>numpy</t> <t>following</t> <t>this</t> <t>link</t> <t>-</t> <t>as</t> <t>suggested</t> <t>in</t> <t>the</t> <t>question</t>. 
<t>The</t> <t>installation</t> <t>went</t> <t>fine</t> <t>but</t> <t>when</t> <t>I</t> <t>want</t> <t>to</t> <t>import</t>

<code><c>import</c> <c>numpy</c>

<c>Import</c> <c>error</c><c>:</c><c>No</c> <c>module</c> <c>named</c> <c>numpy</c>
</code>

<t>I</t> <t>know</t> <t>this</t> <t>is</t> <t>probably</t> <t>a</t> <t>super</t> <t>basic</t> <t>question</t>, <t>but</t> <t>I'm</t> <t>still</t> <t>learning...</t>
<t>Thanks</t>
"
5563089|<t>raw_input</t> <t>function</t> <t>in</t> <t>Python</t>|"<t>What</t> <t>is</t> <t>the</t> <code><c>raw_input</c></code> <t>function</t>? <t>Is</t> <t>it</t> <t>a</t> <t>user</t> <t>interface</t>? <t>When</t> <t>do</t> <t>we</t> <t>use</t> <t>it</t>?
"
20309456|<t>How</t> <t>to</t> <t>call</t> <t>a</t> <t>function</t> <t>from</t> <t>another</t> <t>file</t> <t>in</t> <t>Python</t>?|"<t>I've</t> <t>seen</t> <t>this</t> <t>topic</t> <t>here</t> <t>covered</t> <t>numerous</t> <t>times</t>, <t>but</t> <t>none</t> <t>of</t> <t>the</t> <t>answers</t> <t>I've</t> <t>seen</t> <t>seem</t> <t>to</t> <t>work</t> <t>for</t> <t>me</t>, <t>so</t> <t>I'll</t> <t>try</t> <t>to</t> <t>be</t> <t>as</t> <t>specific</t> <t>to</t> <t>my</t> <t>problem</t> <t>as</t> <t>possible</t>.

<t>Set_up</t>: <t>I</t> <t>have</t> <t>a</t> .<t>py</t> <t>file</t> <t>for</t> <t>each</t> <t>function</t> <t>I</t> <t>need</t> <t>to</t> <t>use</t> <t>in</t> <t>a</t> <t>program</t>. 

<t>In</t> <t>this</t> <t>program</t>, <t>I</t> <t>need</t> <t>to</t> <t>call</t> <t>the</t> <t>function</t> <t>from</t> <t>the</t> <t>external</t> <t>files</t>.  

<t>I've</t> <t>tried</t>:

<code><c>from</c> <c>file</c><c>.</c><c>py</c> <c>import</c> <c>function(</c><c>a</c>,<c>b</c>)
</code>

<t>but</t> <t>I</t> <t>get</t> <t>the</t> <t>error</t>: 

<code><c>ImportError</c><c>:</c> <c>No</c> <c>module</c> <c>named</c> '<c>file</c><c>.</c><c>py</c>'; <c>file</c> <c>is</c> <c>not</c> <c>a</c> <c>package</c>
</code>
"
1641219|<t>Does Python</t> <t>have</t> <t>“private”</t> <t>variables</t> <t>in</t> <t>classes</t>?|"<t>I'm</t> <t>coming</t> <t>from</t> <t>the</t> <t>Java</t> <t>world</t> <t>and</t> <t>reading</t> <t>Bruce Eckels'</t> <t>Python</t> <t>3</t> <t>Patterns</t>, <t>Recipes</t> <t>and</t> <t>Idioms</t>. 

<t>While</t> <t>reading</t> <t>about</t> <t>classes</t>, <t>it</t> <t>goes</t> <t>on</t> <t>to</t> <t>say</t> <t>that</t> <t>in</t> <t>Python</t> <t>there</t> <t>is</t> <t>no</t> <t>need</t> <t>to</t> <t>declare</t> <t>instance</t> <t>variables</t>. <t>You</t> <t>just</t> <t>use</t> <t>them</t> <t>in</t> <t>the</t> <t>constructor</t>, <t>and</t> <t>boom</t>, <t>they</t> <t>are</t> <t>there</t>. 

<t>So</t> <t>for</t> <t>example</t>:

<code><c>class</c> <c>Simple</c><c>:</c>
    <c>def</c> <c>__init__(</c><c>self1</c>, <c>str</c>)<c>:</c>
        <c>print(</c>""<c>inside</c> <c>the</c> <c>simple</c> <c>constructor</c>"")
        <c>self1</c><c>.</c><c>s</c> <c>=</c> <c>str</c>
    <c>def</c> <c>show(</c><c>self1</c>)<c>:</c>
        <c>print(</c><c>self1</c><c>.</c><c>s</c>)
    <c>def</c> <c>showMsg</c> (<c>self</c>, <c>msg</c>)<c>:</c>
        <c>print</c> (<c>msg</c> <c>+</c> '<c>:</c>', <c>self</c><c>.</c><c>show(</c>))
</code>

<t>If</t> <t>that’s</t> <t>true</t>, <t>then</t> <t>any</t> <t>object</t> <t>of</t> <t>class</t> <code><c>Simple</c></code> <t>can</t> <t>just</t> <t>change</t> <t>the</t> <t>value</t> <t>of</t> <t>variable</t> <code><c>s</c></code> <t>outside</t> <t>of</t> <t>the</t> <t>class</t>. 

<t>For</t> <t>example</t>: 

<code><c>if</c> <c>__name__</c> <c>==</c> ""<c>__main__</c>""<c>:</c>
    <c>x</c> <c>=</c> <c>Simple(</c>""<c>constructor</c> <c>argument</c>"")
    <c>x</c><c>.</c><c>s</c> <c>=</c> ""<c>test15</c>"" # <c>this</c> <c>changes</c> <c>the</c> <c>value</c>
    <c>x</c><c>.</c><c>show(</c>)
    <c>x</c><c>.</c><c>showMsg(</c>""<c>A</c> <c>message</c>"")
</code>

<t>In Java</t>, <t>we</t> <t>have</t> <t>been</t> <t>taught</t> <t>about</t> <t>public/private/protected</t> <t>variables</t>.  <t>Those</t> <t>keywords</t> <t>make</t> <t>sense</t> <t>because</t> <t>at</t> <t>times</t> <t>you</t> <t>want</t> <t>variables</t> <t>in</t> <t>a</t> <t>class</t> <t>to</t> <t>which</t> <t>no</t> <t>one</t> <t>outside</t> <t>the</t> <t>class</t> <t>has</t> <t>access</t> <t>to</t>. 

<t>Why</t> <t>is</t> <t>that</t> <t>not</t> <t>required</t> <t>in</t> <t>Python</t>?
"
2972212|<t>Creating</t> <t>an</t> <t>empty</t> <t>list</t> <t>in</t> <t>Python</t>|"<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>create</t> <t>a</t> <t>new</t> <t>empty</t> <t>list</t> <t>in</t> <t>Python</t>?

<code><c>l</c> <c>=</c> [] 
</code>

<t>or</t>

<code><c>l</c> <c>=</c> <c>list(</c>)
</code>

<t>I</t> <t>am</t> <t>asking</t> <t>this</t> <t>because</t> <t>of</t> <t>two</t> <t>reasons</t>:


<t>Technical</t> <t>reasons</t>, <t>as</t> <t>to</t> <t>which</t> <t>is</t> <t>faster</t>. (<t>creating</t> <t>a</t> <t>class</t> <t>causes</t> <t>overhead</t>?)
<t>Code</t> <t>readability</t> <t>-</t> <t>which</t> <t>one</t> <t>is</t> <t>the</t> <t>standard</t> <t>convention</t>.

"
4534438|<t>TypeError</t>: '<t>module</t>' <t>object</t> <t>is</t> <t>not</t> <t>callable</t>|"<code><c>File</c> ""<c>C:\Users\Administrator\Documents\Mibot\oops\blinkserv.py</c>"", <c>line</c> <c>82</c>, <c>in</c> <c>__init__</c>
    <c>self</c><c>.</c><c>serv</c> <c>=</c> <c>socket(</c><c>AF_INET</c>,<c>SOCK_STREAM</c>)
<c>TypeError</c><c>:</c> '<c>module</c>' <c>object</c> <c>is</c> <c>not</c> <c>callable</c>
</code>

<t>Why</t> <t>am</t> <t>I</t> <t>getting</t> <t>this</t> <t>error</t>?
<t>I'm</t> <t>confused</t>.

<t>What</t> <t>do</t> <t>you</t> <t>need</t> <t>to</t> <t>know</t> <t>to</t> <t>answer</t> <t>my</t> <t>question</t>?
"
610883|<t>How</t> <t>to</t> <t>know</t> <t>if</t> <t>an</t> <t>object</t> <t>has</t> <t>an</t> <t>attribute</t> <t>in</t> <t>Python</t>|"<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>in</t> <t>Python</t> <t>to</t> <t>determine</t> <t>if</t> <t>an</t> <t>object</t> <t>has</t> <t>some</t> <t>attribute</t>?  <t>For</t> <t>example</t>:

<code><c>&gt;&gt;&gt;</c> <c>a</c> <c>=</c> <c>SomeClass(</c>)
<c>&gt;&gt;&gt;</c> <c>a</c><c>.</c><c>someProperty</c> <c>=</c> <c>value</c>
<c>&gt;&gt;&gt;</c> <c>a</c><c>.</c><c>property</c>
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>)<c>:</c>
  <c>File</c> ""<c>&lt;</c><c>stdin</c><c>&gt;</c>"", <c>line</c> <c>1</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
<c>AttributeError</c><c>:</c> <c>SomeClass</c> <c>instance</c> <c>has</c> <c>no</c> <c>attribute</c> '<c>property</c>'
</code>

<t>How</t> <t>can</t> <t>you</t> <t>tell</t> <t>if</t> <code><c>a</c></code> <t>has</t> <t>the</t> <t>attribute</t> <code><c>property</c></code> <t>before</t> <t>using</t> <t>it</t>?
"
1093322|<t>How</t> <t>do</t> <t>I</t> <t>check</t> <t>what</t> <t>version</t> <t>of</t> <t>Python</t> <t>is</t> <t>running</t> <t>my</t> <t>script</t>?|"<t>How</t> <t>can</t> <t>I</t> <t>check</t> <t>what</t> <t>version</t> <t>of</t> <t>the</t> <t>Python Interpreter</t> <t>is</t> <t>interpreting</t> <t>my</t> <t>script</t>?
"
675442|<t>Comment</t> <t>out</t> <t>a</t> <t>Python</t> <t>code</t> <t>block</t>|"<t>Is</t> <t>there</t> <t>a</t> <t>mechanism</t> <t>to</t> <t>comment</t> <t>out</t> <t>large</t> <t>blocks</t> <t>of</t> <t>Python</t> <t>code</t>?

<t>Right</t> <t>now</t>, <t>the</t> <t>only</t> <t>ways</t> <t>I</t> <t>can</t> <t>see</t> <t>of</t> <t>commenting</t> <t>out</t> <t>code</t> <t>are</t> <t>to</t> <t>either</t> <t>start</t> <t>every</t> <t>line</t> <t>with</t> <t>a</t> <code>#</code>, <t>or</t> <t>to</t> <t>enclose</t> <t>the</t> <t>code</t> <t>in</t> <t>triple</t> <t>quotes</t>: <code>""""""</code>.

<t>The</t> <t>problem</t> <t>with</t> <t>these</t> <t>is</t> <t>that</t> <t>inserting</t> <code>#</code> <t>before</t> <t>every</t> <t>line</t> <t>is</t> <t>cumbersome</t> <t>and</t> <code>""""""</code> <t>makes</t> <t>the</t> <t>string</t> <t>I</t> <t>want</t> <t>to</t> <t>use</t> <t>as</t> <t>a</t> <t>comment</t> <t>show</t> <t>up</t> <t>in</t> <t>generated</t> <t>documentation</t>.

<t>After</t> <t>reading</t> <t>all</t> <t>comments</t>, <t>the</t> <t>answer</t> <t>seems</t> <t>to</t> <t>be</t> ""<t>No</t>"".
"
4990718|<t>Python</t>: <t>about</t> <t>catching</t> <t>ANY</t> <t>exception</t>|"<t>How</t> <t>can</t> <t>I</t> <t>write</t> <t>a</t> <code><c>try</c></code><t>/</t><code><c>except</c></code> <t>block</t> <t>that</t> <t>catches</t> <t>all</t> <t>exceptions</t>?
"
2257441|<t>Random</t> <t>string</t> <t>generation</t> <t>with</t> <t>upper</t> <t>case</t> <t>letters</t> <t>and</t> <t>digits</t> <t>in</t> <t>Python</t>|"<t>I</t> <t>want</t> <t>to</t> <t>generate</t> <t>a</t> <t>string</t> <t>of</t> <t>size</t> <t>N</t>.

<t>It</t> <t>should</t> <t>be</t> <t>made</t> <t>up</t> <t>of</t> <t>numbers</t> <t>and</t> <t>uppercase</t> <t>English</t> <t>letters</t> <t>such</t> <t>as</t>:


<t>6U1S75</t>
<t>4Z4UKK</t>
<t>U911K4</t>


<t>How</t> <t>can</t> <t>I</t> <t>achieve</t> <t>this</t> <t>in</t> <t>a</t> <t>pythonic</t> <t>way</t>?
"
1514553|<t>How</t> <t>to</t> <t>declare</t> <t>an</t> <t>array</t> <t>in</t> <t>Python</t>?|"<t>How</t> <t>do</t> <t>I</t> <t>declare</t> <t>an</t> <t>array</t> <t>in</t> <t>Python</t>?

<t>I</t> <t>can't</t> <t>find</t> <t>any</t> <t>reference</t> <t>to</t> <t>arrays</t> <t>in</t> <t>the</t> <t>documentation</t>. 
"
8885663|<t>How</t> <t>to</t> <t>format</t> <t>a</t> <t>floating</t> <t>number</t> <t>to</t> <t>fixed</t> <t>width</t> <t>in</t> <t>Python</t>|"<t>How</t> <t>do</t> <t>I</t> <t>format</t> <t>a</t> <t>floating</t> <t>number</t> <t>to</t> <t>a</t> <t>fixed</t> <t>width</t> <t>with</t> <t>the</t> <t>following</t> <t>requirements</t>:


<t>Leading</t> <t>zero</t> <t>if</t> <t>n</t> <t>&lt;</t> <t>1</t>
<t>Add</t> <t>trailing</t> <t>decimal</t> <t>zero(s</t>) <t>to</t> <t>fill</t> <t>up</t> <t>fixed</t> <t>width</t>
<t>Truncate</t> <t>decimal</t> <t>digits</t> <t>past</t> <t>fixed</t> <t>width</t>
<t>Align</t> <t>all</t> <t>decimal</t> <t>points</t>


<t>For</t> <t>example</t>:

<code><c>%</c> <c>formatter</c> <c>something</c> <c>like</c> '{<c>:</c><c>0</c><c>6</c>}'
<c>numbers</c> <c>=</c> [<c>23.23</c>, <c>0.123334987</c>, <c>1</c>, <c>4.223</c>, <c>9887.2</c>]

<c>for</c> <c>number</c> <c>in</c> <c>numbers</c><c>:</c>
    <c>print</c> <c>formatter</c><c>.</c><c>format(</c><c>number</c>)
</code>

<t>The</t> <t>output</t> <t>would</t> <t>be</t> <t>like</t>

<code>  <c>23.2300</c>
   <c>0.1233</c>
   <c>1.0000</c>
   <c>4.2230</c>
<c>9887.2000</c>
</code>
"
26053982|<t>error</t>: <t>Setup</t> <t>script</t> <t>exited</t> <t>with</t> <t>error</t>: <t>command</t> '<t>x86_64-linux-gnu-gcc</t>' <t>failed</t> <t>with</t> <t>exit</t> <t>status</t> <t>1</t>|"<t>When I</t> <t>try</t> <t>to</t> <t>install</t> <t>odoo-server</t> <t>I</t> <t>got</t> <t>the</t> <t>following</t> <t>error</t> <t>could</t> <t>anyone</t> <t>help</t> <t>me</t> <t>to</t> <t>resolve</t> <t>this</t>?

<code><c>error</c><c>:</c> <c>Setup</c> <c>script</c> <c>exited</c> <c>with</c> <c>error</c><c>:</c> <c>command</c> '<c>x86_64-linux-gnu-gcc</c>' <c>failed</c> <c>with</c> <c>exit</c> <c>status</c> <c>1</c>
</code>
"
