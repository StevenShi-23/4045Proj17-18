Id|Title|Body
3061|"<t>Calling</t> <t>a</t> <t>function</t> <t>of</t> <t>a</t> <t>module</t> <t>from</t> <t>a</t> <t>string</t> <t>with</t> <t>the</t> <t>function's</t> <t>name</t>"|"<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>go</t> <t>about</t> <t>calling</t> <t>a</t> <t>function</t> <t>given</t> <t>a</t> <t>string</t> <t>with</t> <t>the</t> <t>function's</t> <t>name</t> <t>in</t> <t>a</t> <t>Python</t> <t>program</t>.  <t>For</t> <t>example</t>, <t>let's</t> <t>say</t> <t>that</t> <t>I</t> <t>have</t> <t>a</t> <t>module</t> <code><c>foo</c></code>, <t>and</t> <t>I</t> <t>have</t> <t>a</t> <t>string</t> <t>whose</t> <t>contents</t> <t>are</t> <code>""<c>bar</c>""</code>. <t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>go</t> <t>about</t> <t>calling</t> <code><c>foo</c><c>.</c><c>bar(</c>)</code>?

<t>I</t> <t>need</t> <t>to</t> <t>get</t> <t>the</t> <t>return</t> <t>value</t> <t>of</t> <t>the</t> <t>function</t>, <t>which</t> <t>is</t> <t>why</t> <t>I</t> <t>don't</t> <t>just</t> <t>use</t> <code><c>eval</c></code>. <t>I</t> <t>figured</t> <t>out</t> <t>how</t> <t>to</t> <t>do</t> <t>it</t> <t>by</t> <t>using</t> <code><c>eval</c></code> <t>to</t> <t>define</t> <t>a</t> <t>temp</t> <t>function</t> <t>that</t> <t>returns</t> <t>the</t> <t>result</t> <t>of</t> <t>that</t> <t>function</t> <t>call</t>, <t>but</t> <t>I'm</t> <t>hoping</t> <t>that</t> <t>there</t> <t>is</t> <t>a</t> <t>more</t> <t>elegant</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>.
"
19151|"<t>Build</t> <t>a</t> <t>Basic Python</t> <t>Iterator</t>"|"<t>How</t> <t>would</t> <t>one</t> <t>create</t> <t>an</t> <t>iterative</t> <t>function</t> (<t>or</t> <t>iterator</t> <t>object</t>) <t>in</t> <t>python</t>?
"
22617|"<t>Format</t> <t>numbers</t> <t>to</t> <t>strings</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>need</t> <t>to</t> <t>find</t> <t>out</t> <t>how</t> <t>to</t> <t>format</t> <t>numbers</t> <t>as</t> <t>strings</t>. <t>My</t> <t>code</t> <t>is</t> <t>here</t>:

<code><c>return</c> <c>str(</c><c>hours</c>)<c>+</c>"":""<c>+</c><c>str(</c><c>minutes</c>)<c>+</c>"":""<c>+</c><c>str(</c><c>seconds</c>)<c>+</c>"" ""<c>+</c><c>ampm</c>
</code>

<t>Hours</t> <t>and</t> <t>minutes</t> <t>are</t> <t>integers</t>, <t>and</t> <t>seconds</t> <t>is</t> <t>a</t> <t>float</t>.  <t>the</t> <t>str</t>() <t>function</t> <t>will</t> <t>convert</t> <t>all</t> <t>of</t> <t>these</t> <t>numbers</t> <t>to</t> <t>the</t> <t>tenths</t> (<t>0</t>.<t>1</t>) <t>place</t>.  <t>So</t> <t>instead</t> <t>of</t> <t>my</t> <t>string</t> <t>outputting</t> ""<t>5</t>:<t>30</t>:<t>59</t>.<t>07</t> <t>pm</t>"", <t>it</t> <t>would</t> <t>display</t> <t>something</t> <t>like</t> ""<t>5.0:30.0:59.1</t> <t>pm</t>"".

<t>Bottom</t> <t>line</t>, <t>what</t> <t>library</t> <t>/</t> <t>function</t> <t>do</t> <t>I</t> <t>need</t> <t>to</t> <t>do</t> <t>this</t> <t>for</t> <t>me</t>?
"
22676|"<t>How</t> <t>do</t> <t>I</t> <t>download</t> <t>a</t> <t>file</t> <t>over</t> <t>HTTP</t> <t>using</t> <t>Python</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>small</t> <t>utility</t> <t>that</t> <t>I</t> <t>use</t> <t>to</t> <t>download</t> <t>a</t> <t>MP3</t> <t>from</t> <t>a</t> <t>website</t> <t>on</t> <t>a</t> <t>schedule</t> <t>and</t> <t>then</t> <t>builds/updates</t> <t>a</t> <t>podcast</t> <t>XML</t> <t>file</t> <t>which</t> <t>I've</t> <t>obviously</t> <t>added</t> <t>to</t> <t>iTunes</t>.

<t>The</t> <t>text</t> <t>processing</t> <t>that</t> <t>creates/updates</t> <t>the</t> <t>XML</t> <t>file</t> <t>is</t> <t>written</t> <t>in</t> <t>Python</t>. <t>I</t> <t>use</t> <t>wget</t> <t>inside</t> <t>a</t> <t>Windows</t> <code><c>.</c><c>bat</c></code> <t>file</t> <t>to</t> <t>download</t> <t>the</t> <t>actual</t> <t>MP3</t> <t>however</t>. <t>I</t> <t>would</t> <t>prefer</t> <t>to</t> <t>have</t> <t>the</t> <t>entire</t> <t>utility</t> <t>written</t> <t>in</t> <t>Python</t> <t>though</t>.

<t>I</t> <t>struggled</t> <t>though</t> <t>to</t> <t>find</t> <t>a</t> <t>way</t> <t>to</t> <t>actually</t> <t>down</t> <t>load</t> <t>the</t> <t>file</t> <t>in</t> <t>Python</t>, <t>thus</t> <t>why</t> <t>I</t> <t>resorted</t> <t>to</t> <code><c>wget</c></code>.

<t>So</t>, <t>how</t> <t>do</t> <t>I</t> <t>download</t> <t>the</t> <t>file</t> <t>using</t> <t>Python</t>?
"
25665|"<t>Python</t> <t>module</t> <t>for</t> <t>converting</t> <t>PDF</t> <t>to</t> <t>text</t>"|"<t>Which</t> <t>are</t> <t>the</t> <t>best</t> <t>Python</t> <t>modules</t> <t>to</t> <t>convert</t> <t>PDF</t> <t>files</t> <t>into</t> <t>text</t>? 
"
35988|"<t>C-like</t> <t>structures</t> <t>in</t> <t>Python</t>"|"<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>conveniently</t> <t>define</t> <t>a</t> <t>C-like</t> <t>structure</t> <t>in</t> <t>Python</t>? <t>I'm</t> <t>tired</t> <t>of</t> <t>writing</t> <t>stuff</t> <t>like</t>:

<code><c>class</c> <c>MyStruct(</c>):
    <c>def</c> <c>__init__(</c><c>self</c>, <c>field1</c>, <c>field2</c>, <c>field3</c>):
        <c>self</c><c>.</c><c>field1</c> <c>=</c> <c>field1</c>
        <c>self</c><c>.</c><c>field2</c> <c>=</c> <c>field2</c>
        <c>self</c><c>.</c><c>field3</c> <c>=</c> <c>field3</c>
</code>
"
36139|"<t>How</t> <t>to</t> <t>sort</t> <t>a</t> <t>list</t> <t>of</t> <t>strings</t>?"|"<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>of</t> <t>creating</t> <t>an</t> <t>alphabetically</t> <t>sorted</t> <t>list</t> <t>in</t> <t>Python</t>?
"
36901|"<t>What</t> <t>does</t> <t>**</t> (<t>double</t> <t>star</t>) <t>and</t> <t>*</t> (<t>star</t>) <t>do</t> <t>for</t> <t>parameters</t>?"|"<t>In</t> <t>the</t> <t>following</t> <t>method</t> <t>definitions</t>, <t>what</t> <t>does</t> <t>the</t> <code><c>*</c></code> <t>and</t> <code><c>**</c></code> <t>do</t> <t>for</t> <code><c>param2</c></code>?

<code><c>def</c> <c>foo(</c><c>param1</c>, <c>*</c><c>param2</c>):
<c>def</c> <c>bar(</c><c>param1</c>, <c>**</c><c>param2</c>):
</code>
"
36932|"<t>How</t> <t>can</t> <t>I</t> <t>represent</t> <t>an</t> '<t>Enum</t>' <t>in</t> <t>Python</t>?"|"<t>I'm</t> <t>mainly</t> <t>a</t> <t>C#</t> <t>developer</t>, <t>but</t> <t>I'm</t> <t>currently</t> <t>working</t> <t>on</t> <t>a</t> <t>project</t> <t>in</t> <t>Python</t>.

<t>How</t> <t>can</t> <t>I</t> <t>represent</t> <t>the</t> <t>equivalent</t> <t>of</t> <t>an</t> <t>Enum</t> <t>in</t> <t>Python</t>?  
"
38987|"<t>How</t> <t>to</t> <t>merge</t> <t>two</t> <t>dictionaries</t> <t>in</t> <t>a</t> <t>single</t> <t>expression</t>?"|"<t>I</t> <t>have</t> <t>two</t> <t>Python</t> <t>dictionaries</t>, <t>and</t> <t>I</t> <t>want</t> <t>to</t> <t>write</t> <t>a</t> <t>single</t> <t>expression</t> <t>that</t> <t>returns</t> <t>these</t> <t>two</t> <t>dictionaries</t>, <t>merged</t>.  <t>The</t> <code><c>update(</c>)</code> <t>method</t> <t>would</t> <t>be</t> <t>what</t> <t>I</t> <t>need</t>, <t>if</t> <t>it</t> <t>returned</t> <t>its</t> <t>result</t> <t>instead</t> <t>of</t> <t>modifying</t> <t>a</t> <t>dict</t> <t>in-place</t>.

<code><c>&gt;&gt;&gt;</c> <c>x</c> <c>=</c> {'<c>a</c>':<c>1</c>, '<c>b</c>': <c>2</c>}
<c>&gt;&gt;&gt;</c> <c>y</c> <c>=</c> {'<c>b</c>':<c>10</c>, '<c>c</c>': <c>11</c>}
<c>&gt;&gt;&gt;</c> <c>z</c> <c>=</c> <c>x</c><c>.</c><c>update(</c><c>y</c>)
<c>&gt;&gt;&gt;</c> <c>print(</c><c>z</c>)
<c>None</c>
<c>&gt;&gt;&gt;</c> <c>x</c>
{'<c>a</c>': <c>1</c>, '<c>b</c>': <c>10</c>, '<c>c</c>': <c>11</c>}
</code>

<t>How</t> <t>can</t> <t>I</t> <t>get</t> <t>that</t> <t>final</t> <t>merged</t> <t>dict</t> <t>in</t> <code><c>z</c></code>, <t>not</t> <code><c>x</c></code>?

(<t>To</t> <t>be</t> <t>extra-clear</t>, <t>the</t> <t>last-one-wins</t> <t>conflict-handling</t> <t>of</t> <code><c>dict</c><c>.</c><c>update(</c>)</code> <t>is</t> <t>what</t> <t>I'm</t> <t>looking</t> <t>for</t> <t>as</t> <t>well</t>.)
"
39086|"<t>Search</t> <t>and</t> <t>replace</t> <t>a</t> <t>line</t> <t>in</t> <t>a</t> <t>file</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>loop</t> <t>over</t> <t>the</t> <t>contents</t> <t>of</t> <t>a</t> <t>text</t> <t>file</t> <t>and</t> <t>do</t> <t>a</t> <t>search</t> <t>and</t> <t>replace</t> <t>on</t> <t>some</t> <t>lines</t> <t>and</t> <t>write</t> <t>the</t> <t>result</t> <t>back</t> <t>to</t> <t>the</t> <t>file</t>. <t>I</t> <t>could</t> <t>first</t> <t>load</t> <t>the</t> <t>whole</t> <t>file</t> <t>in</t> <t>memory</t> <t>and</t> <t>then</t> <t>write</t> <t>it</t> <t>back</t>, <t>but</t> <t>that</t> <t>probably</t> <t>is</t> <t>not</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>do</t> <t>it</t>.

<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>, <t>within</t> <t>the</t> <t>following</t> <t>code</t>?

<code><c>f</c> <c>=</c> <c>open(</c><c>file</c>)
<c>for</c> <c>line</c> <c>in</c> <c>f</c>:
    <c>if</c> <c>line</c><c>.</c><c>contains(</c>'<c>foo</c>'):
        <c>newline</c> <c>=</c> <c>line</c><c>.</c><c>replace(</c>'<c>foo</c>', '<c>bar</c>')
        # <c>how</c> <c>to</c> <c>write</c> <c>this</c> <c>newline</c> <c>back</c> <c>to</c> <c>the</c> <c>file</c>
</code>
"
44778|"<t>How</t> <t>would</t> <t>you</t> <t>make</t> <t>a</t> <t>comma-separated</t> <t>string</t> <t>from</t> <t>a</t> <t>list</t>?"|"<t>What</t> <t>would</t> <t>be</t> <t>your</t> <t>preferred</t> <t>way</t> <t>to</t> <t>concatenate</t> <t>strings</t> <t>from</t> <t>a</t> <t>sequence</t> <t>such</t> <t>that</t> <t>between</t> <t>each</t> <t>two</t> <t>consecutive</t> <t>pair</t> <t>a</t> <t>comma</t> <t>is</t> <t>added</t>. <t>That</t> <t>is</t>, <t>how</t> <t>do</t> <t>you</t> <t>map</t>, <t>for</t> <t>instance</t>, <code>[ '<c>a</c>', '<c>b</c>', '<c>c</c>' ]</code> <t>to</t> <code>'<c>a</c>,<c>b</c>,<c>c</c>'</code>? (<t>The</t> <t>cases</t> <code>[ <c>s</c> ]</code> <t>and</t> <code>[]</code> <t>should</t> <t>be</t> <t>mapped</t> <t>to</t> <code><c>s</c></code> <t>and</t> <code>''</code>, <t>respectively</t>.)

<t>I</t> <t>usually</t> <t>end</t> <t>up</t> <t>using</t> <t>something</t> <t>like</t> <code>''<c>.</c><c>join(</c><c>map(</c><c>lambda</c> <c>x</c>: <c>x</c><c>+</c>',',<c>l</c>))[:<c>-</c><c>1</c>]</code>, <t>but</t> <t>also</t> <t>feeling</t> <t>somewhat</t> <t>unsatisfied</t>.

<t>Edit</t>: <t>I'm</t> <t>both</t> <t>ashamed</t> <t>and</t> <t>happy</t> <t>that</t> <t>the</t> <t>solution</t> <t>is</t> <t>so</t> <t>simple</t>. <t>Obviously</t> <t>I</t> <t>have</t> <t>hardly</t> <t>a</t> <t>clue</t> <t>as</t> <t>to</t> <t>what</t> <t>I'm</t> <t>doing</t>. (<t>I</t> <t>probably</t> <t>needed</t> ""<t>simple</t>"" <t>concatenation</t> <t>in</t> <t>the</t> <t>past</t> <t>and</t> <t>somehow</t> <t>memorised</t> <code><c>s</c><c>.</c><c>join(</c>[<c>e1</c>,<c>e2</c>,...])</code> <t>as</t> <t>a</t> <t>shorthand</t> <t>for</t> <code><c>s</c><c>+</c><c>e1</c><c>+</c><c>e2</c><c>+</c>...</code>.)
"
50499|"<t>How</t> <t>do</t> <t>I</t> <t>get</t> <t>the</t> <t>path</t> <t>and</t> <t>name</t> <t>of</t> <t>the</t> <t>file</t> <t>that</t> <t>is</t> <t>currently</t> <t>executing</t>?"|"<t>I</t> <t>have</t> <t>scripts</t> <t>calling</t> <t>other</t> <t>script</t> <t>files</t> <t>but</t> <t>I</t> <t>need</t> <t>to</t> <t>get</t> <t>the</t> <t>filepath</t> <t>of</t> <t>the</t> <t>file</t> <t>that</t> <t>is</t> <t>currently</t> <t>running</t> <t>within</t> <t>the</t> <t>process</t>. 

<t>For</t> <t>example</t>, <t>let's</t> <t>say</t> <t>I</t> <t>have</t> <t>three</t> <t>files</t>. <t>Using</t> <t>execfile</t>:


<code><c>script_1</c><c>.</c><c>py</c></code> <t>calls</t> <code><c>script_2</c><c>.</c><c>py</c></code>. 
<t>In</t> <t>turn</t>, <code><c>script_2</c><c>.</c><c>py</c></code> <t>calls</t> <code><c>script_3</c><c>.</c><c>py</c></code>. 


<t>How</t> <t>can</t> <t>I</t> <t>get</t> <t>the</t> <t>file</t> <t>name</t> <t>and</t> <t>path</t> <t>of</t> <code><c>script_3</c><c>.</c><c>py</c></code>, <t>from</t> <t>code</t> <t>within</t> <code><c>script_3</c><c>.</c><c>py</c></code>, <t>without</t> <t>having</t> <t>to</t> <t>pass</t> <t>that</t> <t>information</t> <t>as</t> <t>arguments</t> <t>from</t> <code><c>script_2</c><c>.</c><c>py</c></code>?

(<t>Executing</t> <code><c>os</c><c>.</c><c>getcwd(</c>)</code> <t>returns</t> <t>the</t> <t>original</t> <t>starting</t> <t>script's</t> <t>filepath</t> <t>not</t> <t>the</t> <t>current</t> <t>file's</t>.)
"
51520|"<t>How</t> <t>to</t> <t>get</t> <t>an</t> <t>absolute</t> <t>file</t> <t>path</t> <t>in</t> <t>Python</t>"|"<t>Given</t> <t>a</t> <t>path</t> <t>such</t> <t>as</t> <code>""<c>mydir</c><c>/myfile.txt</c>""</code>, <t>how</t> <t>do</t> <t>I</t> <t>find</t> <t>the</t> <t>absolute</t> <t>filepath</t> <t>relative</t> <t>to</t> <t>the</t> <t>current</t> <t>working</t> <t>directory</t> <t>in</t> <t>Python</t>? <t>E.g.</t> <t>on</t> <t>Windows</t>, <t>I</t> <t>might</t> <t>end</t> <t>up</t> <t>with</t>:

<code>""<c>C:/example/cwd/mydir/myfile.txt</c>""
</code>
"
53162|"<t>How</t> <t>can</t> <t>I</t> <t>do</t> <t>a</t> <t>line</t> <t>break</t> (<t>line</t> <t>continuation</t>) <t>in</t> <t>Python</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>long</t> <t>line</t> <t>of</t> <t>code</t> <t>that</t> <t>I</t> <t>want</t> <t>to</t> <t>break</t> <t>up</t> <t>among</t> <t>multiple</t> <t>lines</t>. <t>What</t> <t>do</t> <t>I</t> <t>use</t> <t>and</t> <t>what</t> <t>is</t> <t>the</t> <t>syntax</t>?

<t>For</t> <t>example</t>, <t>adding</t> <t>a</t> <t>bunch</t> <t>of</t> <t>strings</t>,

<code><c>e</c> <c>=</c> '<c>a</c>' <c>+</c> '<c>b</c>' <c>+</c> '<c>c</c>' <c>+</c> '<c>d</c>'
</code>

<t>and</t> <t>have</t> <t>it</t> <t>like</t> <t>this</t>:

<code><c>e</c> <c>=</c> '<c>a</c>' <c>+</c> '<c>b</c>' <c>+</c>
    '<c>c</c>' <c>+</c> '<c>d</c>'
</code>
"
53513|"<t>Best</t> <t>way</t> <t>to</t> <t>check</t> <t>if</t> <t>a</t> <t>list</t>,<t>tuple</t> <t>or</t> <t>dict</t> <t>is</t> <t>empty</t>"|"<t>For</t> <t>example</t>, <t>if</t> <t>passed</t> <t>the</t> <t>following</t>:
<code><c>a</c> <c>=</c> []</code>  <t>or</t> <code><c>a</c><c>=</c>{}</code> <t>or</t> <code><c>a</c><c>=</c>()</code>
<t>How</t> <t>do</t> <t>I</t> <t>check</t> <t>to</t> <t>see</t> <t>if</t> <code><c>a</c></code> <t>is</t> <t>empty</t>?
"
56011|"<t>Single</t> <t>quotes</t> <t>vs</t>. <t>double</t> <t>quotes</t> <t>in</t> <t>Python</t>"|"<t>According</t> <t>to</t> <t>the</t> <t>documentation</t>, <t>they're</t> <t>pretty</t> <t>much</t> <t>interchangeable</t>.  <t>Is</t> <t>there</t> <t>a</t> <t>stylistic</t> <t>reason</t> <t>to</t> <t>use</t> <t>one</t> <t>over</t> <t>the</t> <t>other</t>?
"
60208|"<t>Replacements</t> <t>for</t> <t>switch</t> <t>statement</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>want</t> <t>to</t> <t>write</t> <t>a</t> <t>function</t> <t>in</t> <t>Python</t> <t>that</t> <t>returns</t> <t>different</t> <t>fixed</t> <t>values</t> <t>based</t> <t>on</t> <t>the</t> <t>value</t> <t>of</t> <t>an</t> <t>input</t> <t>index</t>.  

<t>In</t> <t>other</t> <t>languages</t> <t>I</t> <t>would</t> <t>use</t> <t>a</t> <code><c>switch</c></code> <t>or</t> <code><c>case</c></code> <t>statement</t>, <t>but</t> <t>Python</t> <t>does</t> <t>not</t> <t>appear</t> <t>to</t> <t>have</t> <t>a</t> <code><c>switch</c></code> <t>statement</t>.  <t>What</t> <t>are</t> <t>the</t> <t>recommended</t> <t>Python</t> <t>solutions</t> <t>in</t> <t>this</t> <t>scenario</t>?
"
67631|"<t>How</t> <t>to</t> <t>import</t> <t>a</t> <t>module</t> <t>given</t> <t>the</t> <t>full</t> <t>path</t>?"|"<t>How</t> <t>can</t> <t>I</t> <t>load</t> <t>a</t> <t>Python</t> <t>module</t> <t>given</t> <t>its</t> <t>full</t> <t>path</t>? <t>Note</t> <t>that</t> <t>the</t> <t>file</t> <t>can</t> <t>be</t> <t>anywhere</t> <t>in</t> <t>the</t> <t>filesystem</t>, <t>as</t> <t>it</t> <t>is</t> <t>a</t> <t>configuration</t> <t>option</t>.
"
68645|"<t>Static</t> <t>class</t> <t>variables</t> <t>in</t> <t>Python</t>"|"<t>Is</t> <t>it</t> <t>possible</t> <t>to</t> <t>have</t> <t>static</t> <t>class</t> <t>variables</t> <t>or</t> <t>methods</t> <t>in</t> <t>python</t>? <t>What</t> <t>syntax</t> <t>is</t> <t>required</t> <t>to</t> <t>do</t> <t>this</t>?
"
70528|"<t>Why</t> <t>are</t> <t>Python's</t> '<t>private</t>' <t>methods</t> <t>not</t> <t>actually</t> <t>private</t>?"|"<t>Python</t> <t>gives</t> <t>us</t> <t>the</t> <t>ability</t> <t>to</t> <t>create</t> '<t>private</t>' <t>methods</t> <t>and</t> <t>variables</t> <t>within</t> <t>a</t> <t>class</t> <t>by</t> <t>prepending</t> <t>double</t> <t>underscores</t> <t>to</t> <t>the</t> <t>name</t>, <t>like</t> <t>this</t>: <code><c>__myPrivateMethod(</c>)</code>. <t>How</t>, <t>then</t>, <t>can</t> <t>one</t> <t>explain</t> <t>this</t>

<code><c>>></c><c>></c> <c>class</c> <c>MyClass</c>:
...     <c>def</c> <c>myPublicMethod(</c><c>self</c>):
...             <c>print</c> '<c>public</c> <c>method</c>'
...     <c>def</c> <c>__myPrivateMethod(</c><c>self</c>):
...             <c>print</c> '<c>this</c> <c>is</c> <c>private</c><c>!</c><c>!</c>'
... 
<c>>></c><c>></c> <c>obj</c> <c>=</c> <c>MyClass(</c>)
<c>>></c><c>></c> <c>obj</c><c>.</c><c>myPublicMethod(</c>)
<c>public</c> <c>method</c>
<c>>></c><c>></c> <c>obj</c><c>.</c><c>__myPrivateMethod(</c>)
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> """", line 1, in 
<c>AttributeError</c>: <c>MyClass</c> <c>instance</c> <c>has</c> <c>no</c> <c>attribute</c> '<c>__myPrivateMethod</c>'
<c>>></c><c>></c> <c>dir(</c><c>obj</c>)
['<c>_MyClass__myPrivateMethod</c>', '<c>__doc__</c>', '<c>__module__</c>', '<c>myPublicMethod</c>']
<c>>></c><c>></c> <c>obj</c><c>.</c><c>_MyClass__myPrivateMethod(</c>)
<c>this</c> <c>is</c> <c>private</c><c>!</c><c>!</c>
</code>

<t>What's</t> <t>the</t> <t>deal</t>?!

<t>I'll</t> <t>explain</t> <t>this</t> <t>a</t> <t>little</t> <t>for</t> <t>those</t> <t>who</t> <t>didn't</t> <t>quite</t> <t>get</t> <t>that</t>.

<code><c>>></c><c>></c> <c>class</c> <c>MyClass</c>:
...     <c>def</c> <c>myPublicMethod(</c><c>self</c>):
...             <c>print</c> '<c>public</c> <c>method</c>'
...     <c>def</c> <c>__myPrivateMethod(</c><c>self</c>):
...             <c>print</c> '<c>this</c> <c>is</c> <c>private</c><c>!</c><c>!</c>'
... 
<c>>></c><c>></c> <c>obj</c> <c>=</c> <c>MyClass(</c>)
</code>

<t>What</t> <t>I</t> <t>did</t> <t>there</t> <t>is</t> <t>create</t> <t>a</t> <t>class</t> <t>with</t> <t>a</t> <t>public</t> <t>method</t> <t>and</t> <t>a</t> <t>private</t> <t>method</t> <t>and</t> <t>instantiate</t> <t>it</t>.

<t>Next</t>, <t>I</t> <t>call</t> <t>its</t> <t>public</t> <t>method</t>.

<code><c>>></c><c>></c> <c>obj</c><c>.</c><c>myPublicMethod(</c>)
<c>public</c> <c>method</c>
</code>

<t>Next</t>, <t>I</t> <t>try</t> <t>and</t> <t>call</t> <t>its</t> <t>private</t> <t>method</t>.

<code><c>>></c><c>></c> <c>obj</c><c>.</c><c>__myPrivateMethod(</c>)
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> """", line 1, in 
<c>AttributeError</c>: <c>MyClass</c> <c>instance</c> <c>has</c> <c>no</c> <c>attribute</c> '<c>__myPrivateMethod</c>'
</code>

<t>Everything</t> <t>looks</t> <t>good</t> <t>here;</t> <t>we're</t> <t>unable</t> <t>to</t> <t>call</t> <t>it</t>. <t>It</t> <t>is</t>, <t>in</t> <t>fact</t>, '<t>private</t>'. <t>Well</t>, <t>actually</t> <t>it</t> <t>isn't</t>. <t>Running</t> <t>dir</t>() <t>on</t> <t>the</t> <t>object</t> <t>reveals</t> <t>a</t> <t>new</t> <t>magical</t> <t>method</t> <t>that</t> <t>python</t> <t>creates</t> <t>magically</t> <t>for</t> <t>all</t> <t>of</t> <t>your</t> '<t>private</t>' <t>methods</t>.

<code><c>>></c><c>></c> <c>dir(</c><c>obj</c>)
['<c>_MyClass__myPrivateMethod</c>', '<c>__doc__</c>', '<c>__module__</c>', '<c>myPublicMethod</c>']
</code>

<t>This</t> <t>new</t> <t>method's</t> <t>name</t> <t>is</t> <t>always</t> <t>an</t> <t>underscore</t>, <t>followed</t> <t>by</t> <t>the</t> <t>class</t> <t>name</t>, <t>followed</t> <t>by</t> <t>the</t> <t>method</t> <t>name</t>.

<code><c>>></c><c>></c> <c>obj</c><c>.</c><c>_MyClass__myPrivateMethod(</c>)
<c>this</c> <c>is</c> <c>private</c><c>!</c><c>!</c>
</code>

<t>So</t> <t>much</t> <t>for</t> <t>encapsulation</t>, <t>eh</t>?

<t>In</t> <t>any</t> <t>case</t>, <t>I'd</t> <t>always</t> <t>heard</t> <t>Python</t> <t>doesn't</t> <t>support</t> <t>encapsulation</t>, <t>so</t> <t>why</t> <t>even</t> <t>try</t>? <t>What</t> <t>gives</t>?
"
70797|"<t>Python</t>: <t>user</t> <t>input</t> <t>and</t> <t>commandline</t> <t>arguments</t>"|"<t>How</t> <t>do</t> <t>I</t> <t>have</t> <t>a</t> <t>Python</t> <t>script</t> <t>that</t> <t>can</t> <t>accept</t> <t>user</t> <t>input</t> (<t>assuming</t> <t>this</t> <t>is</t> <t>possible</t>) <t>and</t> <t>how</t> <t>do</t> <t>I</t> <t>make</t> <t>it</t> <t>read</t> <t>in</t> <t>arguments</t> <t>if</t> <t>run</t> <t>from</t> <t>the</t> <t>command</t> <t>line</t>?
"
72852|"<t>How</t> <t>to</t> <t>do</t> <t>relative</t> <t>imports</t> <t>in</t> <t>Python</t>?"|"<t>Imagine</t> <t>this</t> <t>directory</t> <t>structure</t>:

<code><c>app</c><c>/
</c>   <c>__init__</c><c>.</c><c>py</c>
   <c>sub1</c><c>/
</c>      <c>__init__</c><c>.</c><c>py</c>
      <c>mod1</c><c>.</c><c>py</c>
   <c>sub2</c><c>/
</c>      <c>__init__</c><c>.</c><c>py</c>
      <c>mod2</c><c>.</c><c>py</c>
</code>

<t>I'm</t> <t>coding</t> <code><c>mod1</c></code>, <t>and</t> <t>I</t> <t>need</t> <t>to</t> <t>import</t> <t>something</t> <t>from</t> <code><c>mod2</c></code>. <t>How</t> <t>should</t> <t>I</t> <t>do</t> <t>it</t>?  

<t>I</t> <t>tried</t> <code><c>from</c> <c>.</c><c>.</c><c>sub2</c> <c>import</c> <c>mod2</c></code> <t>but</t> <t>I'm</t> <t>getting</t> <t>an</t> ""<t>Attempted</t> <t>relative</t> <t>import</t> <t>in</t> <t>non-package</t>"".

<t>I</t> <t>googled</t> <t>around</t> <t>but</t> <t>found</t> <t>only</t> ""<code><c>sys</c><c>.</c><c>path</c></code> <t>manipulation</t>"" <t>hacks</t>. <t>Isn't</t> <t>there</t> <t>a</t> <t>clean</t> <t>way</t>?  



<t>Edit</t>: <t>all</t> <t>my</t> <code><c>__init__</c><c>.</c><c>py</c></code>'<t>s</t> <t>are</t> <t>currently</t> <t>empty</t>  

<t>Edit2</t>: <t>I'm</t> <t>trying</t> <t>to</t> <t>do</t> <t>this</t> <t>because</t> <t>sub2</t> <t>contains</t> <t>classes</t> <t>that</t> <t>are</t> <t>shared</t> <t>across</t> <t>sub</t> <t>packages</t> (<code><c>sub1</c></code>, <code><c>subX</c></code>, <t>etc.).</t>

<t>Edit3</t>: <t>The</t> <t>behaviour</t> <t>I'm</t> <t>looking</t> <t>for</t> <t>is</t> <t>the</t> <t>same</t> <t>as</t> <t>described</t> <t>in</t> <t>PEP</t> <t>366</t> (<t>thanks</t> <t>John</t> <t>B</t>)
"
72899|"<t>How</t> <t>do</t> <t>I</t> <t>sort</t> <t>a</t> <t>list</t> <t>of</t> <t>dictionaries</t> <t>by</t> <t>values</t> <t>of</t> <t>the</t> <t>dictionary</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>got</t> <t>a</t> <t>list</t> <t>of</t> <t>dictionaries</t> <t>and</t> <t>want</t> <t>that</t> <t>to</t> <t>be</t> <t>sorted</t> <t>by</t> <t>a</t> <t>value</t> <t>of</t> <t>that</t> <t>dictionary</t>.

<t>This</t>

<code>[{'<c>name</c>':'<c>Homer</c>', '<c>age</c>':<c>39</c>}, {'<c>name</c>':'<c>Bart</c>', '<c>age</c>':<c>10</c>}]
</code>

<t>sorted</t> <t>by</t> <t>name</t>, <t>should</t> <t>become</t>

<code>[{'<c>name</c>':'<c>Bart</c>', '<c>age</c>':<c>10</c>}, {'<c>name</c>':'<c>Homer</c>', '<c>age</c>':<c>39</c>}]
</code>
"
73663|"<t>Terminating</t> <t>a</t> <t>Python</t> <t>script</t>"|"<t>I</t> <t>am</t> <t>aware</t> <t>of</t> <t>the</t> <code><c>die(</c>)</code> <t>command</t> <t>in</t> <t>PHP</t> <t>which</t> <t>stops</t> <t>a</t> <t>script</t> <t>early</t>.

<t>How</t> <t>can</t> <t>I</t> <t>do</t> <t>this</t> <t>in</t> <t>Python</t>?
"
79797|"<t>How</t> <t>do</t> <t>I</t> <t>convert</t> <t>local</t> <t>time</t> <t>to</t> <t>UTC</t> <t>in</t> <t>Python</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>convert</t> <t>a</t> <t>datetime</t> <t>string</t> <t>in</t> <t>local</t> <t>time</t> <t>to</t> <t>a</t> <t>string</t> <t>in</t> <t>UTC</t> <t>time</t>?

<t>I'm</t> <t>sure</t> <t>I've</t> <t>done</t> <t>this</t> <t>before</t>, <t>but</t> <t>can't</t> <t>find</t> <t>it</t> <t>and</t> <t>SO</t> <t>will</t> <t>hopefully</t> <t>help</t> <t>me</t> (<t>and</t> <t>others</t>) <t>do</t> <t>that</t> <t>in</t> <t>future</t>.

<t>Clarification</t>:  <t>For</t> <t>example</t>, <t>if</t> <t>I</t> <t>have</t> <code><c>2008-09-17</c> <c>14</c>:<c>0</c><c>2</c>:<c>00</c></code> <t>in</t> <t>my</t> <t>local</t> <t>timezone</t> (<code><c>+</c><c>10</c></code>), <t>I'd</t> <t>like</t> <t>to</t> <t>generate</t> <t>a</t> <t>string</t> <t>with</t> <t>the</t> <t>equivalent</t> <code><c>UTC</c></code> <t>time</t>: <code><c>2008-09-17</c> <c>0</c><c>4</c>:<c>0</c><c>2</c>:<c>00</c></code>.

<t>Also</t>, <t>from</t> <t>http://lucumr.pocoo.org/2011/7/15/eppur-si-muove/,</t> <t>note</t> <t>that</t> <t>in</t> <t>general</t> <t>this</t> <t>isn't</t> <t>possible</t> <t>as</t> <t>with</t> <t>DST</t> <t>and</t> <t>other</t> <t>issues</t> <t>there</t> <t>is</t> <t>no</t> <t>unique</t> <t>conversion</t> <t>from</t> <t>local</t> <t>time</t> <t>to</t> <t>UTC</t> <t>time</t>.
"
82831|"<t>How</t> <t>do</t> <t>I</t> <t>check</t> <t>whether</t> <t>a</t> <t>file</t> <t>exists</t> <t>using</t> <t>Python</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>check</t> <t>whether</t> <t>a</t> <t>file</t> <t>exists</t>, <t>without</t> <t>using</t> <t>the</t> <code><c>try</c></code> <t>statement</t>?
"
85451|"<t>Python</t> <t>-</t> <t>time</t>.<t>clock</t>() <t>vs</t>. <t>time</t>.<t>time</t>() <t>-</t> <t>accuracy</t>?"|"<t>Which</t> <t>is</t> <t>better</t> <t>to</t> <t>use</t> <t>for</t> <t>timing</t> <t>in</t> <t>Python</t>? <t>time</t>.<t>clock</t>() <t>or</t> <t>time</t>.<t>time</t>()? <t>Which</t> <t>one</t> <t>provides</t> <t>more</t> <t>accuracy</t>?

<t>for</t> <t>example</t>:

<code><c>start</c> <c>=</c> <c>time</c><c>.</c><c>clock(</c>)
... <c>do</c> <c>something</c>
<c>elapsed</c> <c>=</c> (<c>time</c><c>.</c><c>clock(</c>) <c>-</c> <c>start</c>)
</code>

<t>vs</t>.

<code><c>start</c> <c>=</c> <c>time</c><c>.</c><c>time(</c>)
... <c>do</c> <c>something</c>
<c>elapsed</c> <c>=</c> (<c>time</c><c>.</c><c>time(</c>) <c>-</c> <c>start</c>)
</code>
"
89228|"<t>Calling</t> <t>an</t> <t>external</t> <t>command</t> <t>in</t> <t>Python</t>"|"<t>How</t> <t>can</t> <t>I</t> <t>call</t> <t>an</t> <t>external</t> <t>command</t> (<t>as</t> <t>if</t> <t>I'd</t> <t>typed</t> <t>it</t> <t>at</t> <t>the</t> <t>Unix</t> <t>shell</t> <t>or</t> <t>Windows</t> <t>command</t> <t>prompt</t>) <t>from</t> <t>within</t> <t>a</t> <t>Python</t> <t>script</t>?
"
94935|"<t>What</t> <t>is</t> <t>the</t> <t>difference</t> <t>between</t> <t>range</t> <t>and</t> <t>xrange</t> <t>functions</t> <t>in</t> <t>Python</t> <t>2</t>.<t>X</t>?"|"<t>Apparently</t> <t>xrange</t> <t>is</t> <t>faster</t> <t>but</t> <t>I</t> <t>have</t> <t>no</t> <t>idea</t> <t>why</t> <t>it's</t> <t>faster</t> (<t>and</t> <t>no</t> <t>proof</t> <t>besides</t> <t>the</t> <t>anecdotal</t> <t>so</t> <t>far</t> <t>that</t> <t>it</t> <t>is</t> <t>faster</t>) <t>or</t> <t>what</t> <t>besides</t> <t>that</t> <t>is</t> <t>different</t> <t>about</t>

<code><c>for</c> <c>i</c> <c>in</c> <c>range(</c><c>0</c>, <c>20</c>):
<c>for</c> <c>i</c> <c>in</c> <c>xrange(</c><c>0</c>, <c>20</c>):
</code>
"
100003|"<t>What</t> <t>is</t> <t>a</t> <t>metaclass</t> <t>in</t> <t>Python</t>?"|"<t>What</t> <t>are</t> <t>metaclasses</t>? <t>What</t> <t>do</t> <t>you</t> <t>use</t> <t>them</t> <t>for</t>?
"
101268|"<t>Hidden</t> <t>features</t> <t>of</t> <t>Python</t>"|"<t>What</t> <t>are</t> <t>the</t> <t>lesser-known</t> <t>but</t> <t>useful</t> <t>features</t> <t>of</t> <t>the</t> <t>Python</t> <t>programming</t> <t>language</t>?


<t>Try</t> <t>to</t> <t>limit</t> <t>answers</t> <t>to</t> <t>Python</t> <t>core</t>.
<t>One</t> <t>feature</t> <t>per</t> <t>answer</t>.
<t>Give</t> <t>an</t> <t>example</t> <t>and</t> <t>short</t> <t>description</t> <t>of</t> <t>the</t> <t>feature</t>, <t>not</t> <t>just</t> <t>a</t> <t>link</t> <t>to</t> <t>documentation</t>.
<t>Label</t> <t>the</t> <t>feature</t> <t>using</t> <t>a</t> <t>title</t> <t>as</t> <t>the</t> <t>first</t> <t>line</t>.


<t>Quick</t> <t>links</t> <t>to</t> <t>answers</t>:


<t>Argument Unpacking</t>
<t>Braces</t>
<t>Chaining Comparison Operators</t>
<t>Decorators</t>
<t>Default Argument Gotchas</t> <t>/</t> <t>Dangers</t> <t>of</t> <t>Mutable Default</t> <t>arguments</t>
<t>Descriptors</t>
<t>Dictionary</t> <t>default</t> <code><c>.</c><c>get</c></code> <t>value</t>
<t>Docstring Tests</t>
<t>Ellipsis Slicing Syntax</t>
<t>Enumeration</t>
<t>For/else</t>
<t>Function</t> <t>as</t> <t>iter</t>() <t>argument</t>
<t>Generator</t> <t>expressions</t>
<code><c>import</c> <c>this</c></code>
<t>In Place Value Swapping</t>
<t>List</t> <t>stepping</t>
<code><c>__missing__</c></code> <t>items</t>
<t>Multi-line Regex</t>
<t>Named</t> <t>string</t> <t>formatting</t>
<t>Nested</t> <t>list/generator</t> <t>comprehensions</t>
<t>New</t> <t>types</t> <t>at</t> <t>runtime</t>
<code><c>.</c><c>pth</c></code> <t>files</t>
<t>ROT13 Encoding</t>
<t>Regex Debugging</t>
<t>Sending</t> <t>to</t> <t>Generators</t>
<t>Tab Completion</t> <t>in</t> <t>Interactive Interpreter</t>
<t>Ternary Expression</t>
<code><c>try</c><c>/except/else</c></code>
<t>Unpacking+</t><code><c>print(</c>)</code> <t>function</t>
<code><c>with</c></code> <t>statement</t>

"
101754|"<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>run</t> <t>Python</t> <t>on</t> <t>Android</t>?"|"<t>We</t> <t>are</t> <t>working</t> <t>on</t> <t>an</t> <t>S60</t> <t>version</t> <t>and</t> <t>this</t> <t>platform</t> <t>has</t> <t>a</t> <t>nice</t> <t>Python</t> <t>API</t>. 

<t>However</t>, <t>there</t> <t>is</t> <t>nothing</t> <t>official</t> <t>about</t> <t>Python</t> <t>on</t> <t>Android</t>, <t>but</t> <t>since</t> <t>Jython</t> <t>exists</t>, <t>is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>let</t> <t>the</t> <t>snake</t> <t>and</t> <t>the</t> <t>robot</t> <t>work</t> <t>together</t>?
"
104420|"<t>How</t> <t>to</t> <t>generate</t> <t>all</t> <t>permutations</t> <t>of</t> <t>a</t> <t>list</t> <t>in</t> <t>Python</t>"|"<t>How</t> <t>do</t> <t>you</t> <t>generate</t> <t>all</t> <t>the</t> <t>permutations</t> <t>of</t> <t>a</t> <t>list</t> <t>in</t> <t>Python</t>, <t>independently</t> <t>of</t> <t>the</t> <t>type</t> <t>of</t> <t>elements</t> <t>in</t> <t>that</t> <t>list</t>?

<t>For</t> <t>example</t>:

<code><c>permutations(</c>[])
[]

<c>permutations(</c>[<c>1</c>])
[<c>1</c>]

<c>permutations(</c>[<c>1</c>, <c>2</c>])
[<c>1</c>, <c>2</c>]
[<c>2</c>, <c>1</c>]

<c>permutations(</c>[<c>1</c>, <c>2</c>, <c>3</c>])
[<c>1</c>, <c>2</c>, <c>3</c>]
[<c>1</c>, <c>3</c>, <c>2</c>]
[<c>2</c>, <c>1</c>, <c>3</c>]
[<c>2</c>, <c>3</c>, <c>1</c>]
[<c>3</c>, <c>1</c>, <c>2</c>]
[<c>3</c>, <c>2</c>, <c>1</c>]
</code>

<t>EDIT</t>:
<t>Eliben</t> <t>pointed</t> <t>to</t> <t>a</t> <t>solution</t> <t>that's</t> <t>similar</t> <t>to</t> <t>mine</t> <t>although</t> <t>simpler</t>, <t>so</t> <t>I'm</t> <t>choosing</t> <t>it</t> <t>as</t> <t>the</t> <t>accepted</t> <t>answer</t>, <t>although</t> <t>Python</t> <t>2.6+</t> <t>has</t> <t>a</t> <t>builtin</t> <t>solution</t> <t>in</t> <t>the</t> <t>itertools</t> <t>module</t>:

<code><c>import</c> <c>itertools</c>
<c>itertools</c><c>.</c><c>permutations(</c>[<c>1</c>, <c>2</c>, <c>3</c>])
</code>
"
120656|"<t>Directory</t> <t>listing</t> <t>in</t> <t>Python</t>"|"<t>How</t> <t>do</t> <t>I</t> <t>get</t> <t>a</t> <t>list</t> <t>of</t> <t>all</t> <t>files</t> (<t>and</t> <t>directories</t>) <t>in</t> <t>a</t> <t>given</t> <t>directory</t> <t>in</t> <t>Python</t>?
"
122327|"<t>How</t> <t>do</t> <t>I</t> <t>find</t> <t>the</t> <t>location</t> <t>of</t> <t>my</t> <t>Python</t> <t>site-packages</t> <t>directory</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>find</t> <t>the</t> <t>location</t> <t>of</t> <t>my</t> <t>site-packages</t> <t>directory</t>?
"
123198|"<t>How</t> <t>do</t> <t>I</t> <t>copy</t> <t>a</t> <t>file</t> <t>in</t> <t>python</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>copy</t> <t>a</t> <t>file</t> <t>in</t> <t>Python</t>? <t>I</t> <t>couldn't</t> <t>find</t> <t>anything</t> <t>under</t> <code><c>os</c></code>.
"
125703|"<t>How</t> <t>to</t> <t>modify</t> <t>a</t> <t>text</t> <t>file</t>?"|"<t>I'm</t> <t>using</t> <t>Python</t>, <t>and</t> <t>would</t> <t>like</t> <t>to</t> <t>insert</t> <t>a</t> <t>string</t> <t>into</t> <t>a</t> <t>text</t> <t>file</t> <t>without</t> <t>deleting</t> <t>or</t> <t>copying</t> <t>the</t> <t>file</t>. <t>How</t> <t>can</t> <t>I</t> <t>do</t> <t>that</t>?
"
126524|"<t>Iterate</t> <t>a</t> <t>list</t> <t>with</t> <t>indexes</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>could</t> <t>swear</t> <t>I've</t> <t>seen</t> <t>the</t> <t>function</t> (<t>or</t> <t>method</t>) <t>that</t> <t>takes</t> <t>a</t> <t>list</t>, <t>like</t> <t>this</t> <code>[<c>3</c>, <c>7</c>, <c>19</c>]</code> <t>and</t> <t>makes</t> <t>it</t> <t>into</t> <t>iterable</t> <t>list</t> <t>of</t> <t>tuples</t>, <t>like</t> <t>so</t>: <code>[(<c>0</c>,<c>3</c>), (<c>1</c>,<c>7</c>), (<c>2</c>,<c>19</c>)]</code> <t>to</t> <t>use</t> <t>it</t> <t>instead</t> <t>of</t>:

<code><c>for</c> <c>i</c> <c>in</c> <c>range(</c><c>len(</c><c>name_of_list</c>)):
    <c>name_of_list</c>[<c>i</c>] <c>=</c> <c>something</c>
</code>

<t>but</t> <t>I</t> <t>can't</t> <t>remember</t> <t>the</t> <t>name</t> <t>and</t> <t>googling</t> ""<t>iterate</t> <t>list</t>"" <t>gets</t> <t>nothing</t>.
"
127803|"<t>How</t> <t>to</t> <t>parse</t> <t>an</t> <t>ISO</t> <t>8601-formatted</t> <t>date</t>?"|"<t>I</t> <t>need</t> <t>to</t> <t>parse</t> <t>RFC</t> <t>3339</t> <t>strings</t> <t>like</t> <code>""<c>2008-09-03T20</c>:<c>56</c>:<c>35.450686</c><c>Z</c>""</code> <t>into</t> <t>Python's</t> <code><c>datetime</c></code> <t>type</t>.

<t>I</t> <t>have</t> <t>found</t> <code><c>strptime</c></code> <t>in</t> <t>the</t> <t>Python</t> <t>standard</t> <t>library</t>, <t>but</t> <t>it</t> <t>is</t> <t>not</t> <t>very</t> <t>convenient</t>.

<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>?
"
134934|"<t>Display</t> <t>number</t> <t>with</t> <t>leading</t> <t>zeros</t>"|"<t>Given</t>:

<code><c>a</c> <c>=</c> <c>1</c>
<c>b</c> <c>=</c> <c>10</c>
<c>c</c> <c>=</c> <c>100</c>
</code>

<t>I</t> <t>want</t> <t>to</t> <t>display</t> <t>a</t> <t>leading</t> <t>zero</t> <t>for</t> <t>all</t> <t>numbers</t> <t>with</t> <t>less</t> <t>than</t> <t>2</t> <t>digits</t>, <t>i.e.</t>:

<code><c>0</c><c>1</c>
<c>10</c>
<c>100</c>
</code>
"
136097|"<t>What</t> <t>is</t> <t>the</t> <t>difference</t> <t>between</t> <t>@staticmethod</t> <t>and</t> <t>@classmethod</t> <t>in</t> <t>Python</t>?"|"<t>What</t> <t>is</t> <t>the</t> <t>difference</t> <t>between</t> <t>a</t> <t>function</t> <t>decorated</t> <t>with</t> <code><c>@</c><c>staticmethod</c></code> <t>and</t> <t>one</t> <t>decorated</t> <t>with</t> <code><c>@</c><c>classmethod</c></code>?
"
139180|"<t>listing</t> <t>all</t> <t>functions</t> <t>in</t> <t>a</t> <t>python</t> <t>module</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>python</t> <t>module</t> <t>installed</t> <t>on</t> <t>my</t> <t>system</t> <t>and</t> <t>I'd</t> <t>like</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>see</t> <t>what</t> <t>functions/classes/methods</t> <t>are</t> <t>available</t> <t>in</t> <t>it</t>.   

<t>I</t> <t>want</t> <t>to</t> <t>call</t> <t>the</t> <t>doc</t> <t>function</t> <t>on</t> <t>each</t> <t>one</t>. <t>In</t> <t>ruby</t> <t>I</t> <t>can</t> <t>do</t> <t>something</t> <t>like</t> <t>ClassName</t>.<t>methods</t> <t>to</t> <t>get</t> <t>a</t> <t>list</t> <t>of</t> <t>all</t> <t>the</t> <t>methods</t> <t>available</t> <t>on</t> <t>that</t> <t>class</t>. <t>Is</t> <t>there</t> <t>something</t> <t>similar</t> <t>in</t> <t>python</t>?

<t>eg</t>. <t>something</t> <t>like</t>:

<code><c>from</c> <c>somemodule</c> <c>import</c> <c>foo</c>
<c>print</c> <c>foo</c><c>.</c><c>methods</c> # <c>or</c> <c>whatever</c> <c>is</c> <c>the</c> <c>correct</c> <c>method</c> <c>to</c> <c>call</c>
</code>
"
145270|"<t>Calling</t> <t>C/C++</t> <t>from</t> <t>python</t>?"|"<t>What</t> <t>would</t> <t>be</t> <t>the</t> <t>quickest</t> <t>way</t> <t>to</t> <t>construct</t> <t>a</t> <t>python</t> <t>binding</t> <t>to</t> <t>a</t> <t>C</t> <t>or</t> <t>C++</t> <t>library</t>?

(<t>using</t> <t>windows</t> <t>if</t> <t>this</t> <t>matters</t>)
"
151199|"<t>How</t> <t>do</t> <t>I</t> <t>calculate</t> <t>number</t> <t>of</t> <t>days</t> <t>betwen</t> <t>two</t> <t>dates</t> <t>using</t> <t>Python</t>?"|"<t>If</t> <t>I</t> <t>have</t> <t>two</t> <t>dates</t> (<t>ex</t>. <code>'<c>8</c><c>/18/2008</c>'</code> <t>and</t> <code>'<c>9</c><c>/26/2008</c>'</code>) <t>what</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>get</t> <t>the</t> <t>difference</t> <t>measured</t> <t>in</t> <t>days</t>?
"
152580|"<t>What's</t> <t>the</t> <t>canonical</t> <t>way</t> <t>to</t> <t>check</t> <t>for</t> <t>type</t> <t>in</t> <t>python</t>?"|"<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>check</t> <t>whether</t> <t>a</t> <t>given</t> <t>object</t> <t>is</t> <t>of</t> <t>a</t> <t>given</t> <t>type</t>? <t>How</t> <t>about</t> <t>checking</t> <t>whether</t> <t>the</t> <t>object</t> <t>inherits</t> <t>from</t> <t>a</t> <t>given</t> <t>type</t>?

<t>Let's</t> <t>say</t> <t>I</t> <t>have</t> <t>an</t> <t>object</t> <code><c>o</c></code>. <t>How</t> <t>do</t> <t>I</t> <t>check</t> <t>whether</t> <t>it's</t> <t>a</t> <code><c>str</c></code>?
"
159720|"<t>What</t> <t>is</t> <t>the</t> <t>naming</t> <t>convention</t> <t>in</t> <t>Python</t> <t>for</t> <t>variable</t> <t>and</t> <t>function</t> <t>names</t>?"|"<t>Coming</t> <t>from</t> <t>a</t> <t>C#</t> <t>background</t> <t>the</t> <t>naming</t> <t>convention</t> <t>for</t> <t>variables</t> <t>and</t> <t>method</t> <t>names</t> <t>are</t> <t>usually</t> <t>either</t> <t>CamelCase</t> <t>or</t> <t>Pascal</t> <t>Case</t>:

<code><c>//</c> <c>C</c># <c>example</c>
<c>string</c> <c>thisIsMyVariable</c> <c>=</c> ""<c>a</c>""
<c>public</c> <c>void</c> <c>ThisIsMyMethod(</c>)
</code>

<t>In</t> <t>Python</t>, <t>I</t> <t>have</t> <t>seen</t> <t>the</t> <t>above</t> <t>but</t> <t>I</t> <t>have</t> <t>also</t> <t>seen</t> <t>underscores</t> <t>being</t> <t>used</t>:

<code># <c>python</c> <c>example</c>
<c>this_is_my_variable</c> <c>=</c> '<c>a</c>'
<c>def</c> <c>this_is_my_function(</c>):
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>more</t> <t>preferable</t>, <t>definitive</t> <t>coding</t> <t>style</t> <t>for</t> <t>Python</t>?
"
166506|"<t>Finding</t> <t>local</t> <t>IP</t> <t>addresses</t> <t>using</t> <t>Python's</t> <t>stdlib</t>"|"<t>How</t> <t>can</t> <t>I</t> <t>find</t> <t>local</t> <t>IP</t> <t>addresses</t> (<t>i.e.</t> <t>192.168.x.x</t> <t>or</t> <t>10.0.x.x</t>) <t>in</t> <t>Python</t> <t>platform</t> <t>independently</t> <t>and</t> <t>using</t> <t>only</t> <t>the</t> <t>standard</t> <t>library</t>?
"
172439|"<t>How</t> <t>do</t> <t>I</t> <t>split</t> <t>a</t> <t>multi-line</t> <t>string</t> <t>into</t> <t>multiple</t> <t>lines</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>multi-line</t> <t>string</t> <t>literal</t> <t>that</t> <t>I</t> <t>want</t> <t>to</t> <t>do</t> <t>an</t> <t>operation</t> <t>on</t> <t>each</t> <t>line</t>, <t>like</t> <t>so</t>:

<code><c>inputString</c> <c>=</c> """"""<c>Line</c> <c>1</c>
<c>Line</c> <c>2</c>
<c>Line</c> <c>3</c>""""""
</code>

<t>I</t> <t>want</t> <t>to</t> <t>do</t> <t>something</t> <t>like</t> <t>the</t> <t>following</t>:

<code><c>for</c> <c>line</c> <c>in</c> <c>inputString</c>:
    <c>doStuff(</c>)
</code>
"
176011|"<t>Python List</t> <t>vs</t>. <t>Array</t> <t>-</t> <t>when</t> <t>to</t> <t>use</t>?"|"<t>If</t> <t>you</t> <t>are</t> <t>creating</t> <t>a</t> <t>1d</t> <t>array</t>, <t>you</t> <t>can</t> <t>implement</t> <t>it</t> <t>as</t> <t>a</t> <t>List</t>, <t>or</t> <t>else</t> <t>use</t> <t>the</t> '<t>array</t>' <t>module</t> <t>in</t> <t>the</t> <t>standard</t> <t>library</t>.  <t>I</t> <t>have</t> <t>always</t> <t>used</t> <t>Lists</t> <t>for</t> <t>1d</t> <t>arrays</t>.

<t>What</t> <t>is</t> <t>the</t> <t>reason</t> <t>or</t> <t>circumstance</t> <t>where</t> <t>I</t> <t>would</t> <t>want</t> <t>to</t> <t>use</t> <t>the</t> <t>array</t> <t>module</t> <t>instead</t>?

<t>Is</t> <t>it</t> <t>for</t> <t>performance</t> <t>and</t> <t>memory</t> <t>optimization</t>, <t>or</t> <t>am</t> <t>I</t> <t>missing</t> <t>something</t> <t>obvious</t>?
"
176918|"<t>Finding</t> <t>the</t> <t>index</t> <t>of</t> <t>an</t> <t>item</t> <t>given</t> <t>a</t> <t>list</t> <t>containing</t> <t>it</t> <t>in</t> <t>Python</t>"|"<t>For</t> <t>a</t> <t>list</t> <code>[""<c>foo</c>"", ""<c>bar</c>"", ""<c>baz</c>""]</code> <t>and</t> <t>an</t> <t>item</t> <t>in</t> <t>the</t> <t>list</t> <code>""<c>bar</c>""</code>, <t>what's</t> <t>the</t> <t>cleanest</t> <t>way</t> <t>to</t> <t>get</t> <t>its</t> <t>index</t> (<t>1</t>) <t>in</t> <t>Python</t>?
"
179369|"<t>How</t> <t>do</t> <t>I</t> <t>abort</t> <t>the</t> <t>execution</t> <t>of</t> <t>a</t> <t>Python</t> <t>script</t>?"|"
  <t>Possible</t> <t>Duplicate</t>:
  <t>Terminating</t> <t>a</t> <t>Python</t> <t>script</t>  




<t>I</t> <t>have</t> <t>a</t> <t>simple</t> <t>Python</t> <t>script</t> <t>that</t> <t>I</t> <t>want</t> <t>to</t> <t>stop</t> <t>executing</t> <t>if</t> <t>a</t> <t>condition</t> <t>is</t> <t>met</t>.

<t>For</t> <t>example</t>:

<code><c>done</c> <c>=</c> <c>True</c>
<c>if</c> <c>done</c>:
    # <c>quit</c><c>/stop/exit
else:
</c>    # <c>do</c> <c>other</c> <c>stuff</c>
</code>

<t>Essentially</t>, <t>I</t> <t>am</t> <t>looking</t> <t>for</t> <t>something</t> <t>that</t> <t>behaves</t> <t>equivalently</t> <t>to</t> <t>the</t> '<t>return</t>' <t>keyword</t> <t>in</t> <t>the</t> <t>body</t> <t>of</t> <t>a</t> <t>function</t> <t>which</t> <t>allows</t> <t>the</t> <t>flow</t> <t>of</t> <t>the</t> <t>code</t> <t>to</t> <t>exit</t> <t>the</t> <t>function</t> <t>and</t> <t>not</t> <t>execute</t> <t>the</t> <t>remaining</t> <t>code</t>.
"
181530|"<t>Styling</t> <t>multi-line</t> <t>conditions</t> <t>in</t> '<t>if</t>' <t>statements</t>?"|"<t>Sometimes</t> <t>I</t> <t>break</t> <t>long</t> <t>conditions</t> <t>in</t> <code><c>if</c></code><t>s</t> <t>onto</t> <t>several</t> <t>lines</t>. <t>The</t> <t>most</t> <t>obvious</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t> <t>is</t>:

<code>  <c>if</c> (<c>cond1</c> <c>==</c> '<c>val1</c>' <c>and</c> <c>cond2</c> <c>==</c> '<c>val2</c>' <c>and</c>
      <c>cond3</c> <c>==</c> '<c>val3</c>' <c>and</c> <c>cond4</c> <c>==</c> '<c>val4</c>'):
      <c>do_something</c>
</code>

<t>Isn't</t> <t>very</t> <t>very</t> <t>appealing</t> <t>visually</t>, <t>because</t> <t>the</t> <t>action</t> <t>blends</t> <t>with</t> <t>the</t> <t>conditions</t>. <t>However</t>, <t>it</t> <t>is</t> <t>the</t> <t>natural</t> <t>way</t> <t>using</t> <t>correct</t> <t>Python</t> <t>indentation</t> <t>of</t> <t>4</t> <t>spaces</t>.

<t>For</t> <t>the</t> <t>moment</t> <t>I'm</t> <t>using</t>:

<code>  <c>if</c> (    <c>cond1</c> <c>==</c> '<c>val1</c>' <c>and</c> <c>cond2</c> <c>==</c> '<c>val2</c>' <c>and</c>
          <c>cond3</c> <c>==</c> '<c>val3</c>' <c>and</c> <c>cond4</c> <c>==</c> '<c>val4</c>'):
      <c>do_something</c>
</code>

<t>But</t> <t>this</t> <t>isn't</t> <t>very</t> <t>pretty</t>. :<t>-</t>)

<t>Can</t> <t>you</t> <t>recommend</t> <t>an</t> <t>alternative</t> <t>way</t>?
"
183853|"<t>In Python</t> <t>2</t>, <t>what</t> <t>is</t> <t>the</t> <t>difference</t> <t>between</t> '<t>/</t>' <t>and</t> '<t>//</t>' <t>when</t> <t>used</t> <t>for</t> <t>division</t>?"|"<t>Is</t> <t>there</t> <t>a</t> <t>benefit</t> <t>to</t> <t>using</t> <t>one</t> <t>over</t> <t>the</t> <t>other</t>? <t>In Python</t> <t>2</t>, <t>they</t> <t>both</t> <t>seem</t> <t>to</t> <t>return</t> <t>the</t> <t>same</t> <t>results</t>:

<code><c>&gt;&gt;&gt;</c> <c>6</c><c>/3
2
&gt;&gt;&gt;</c> <c>6</c><c>//3
2
</c></code>
"
185936|"<t>Delete Folder Contents</t> <t>in</t> <t>Python</t>"|"<t>How</t> <t>can</t> <t>I</t> <t>delete</t> <t>the</t> <t>contents</t> <t>of</t> <t>a</t> <t>local</t> <t>folder</t> <t>in</t> <t>Python</t>?

<t>The</t> <t>current</t> <t>project</t> <t>is</t> <t>for</t> <t>Windows</t> <t>but</t> <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>see</t> <t>*nix</t> <t>also</t>.
"
191010|"<t>How</t> <t>to</t> <t>get</t> <t>a</t> <t>complete</t> <t>list</t> <t>of</t> <t>object's</t> <t>methods</t> <t>and</t> <t>attributes</t>?"|"<code><c>dir(</c><c>re</c><c>.</c><c>compile(</c><c>pattern</c>)) 
</code>

<t>does</t> <t>not</t> <t>return</t> <t>pattern</t> <t>as</t> <t>one</t> <t>of</t> <t>the</t> <t>lists's</t> <t>elements</t>. <t>Namely</t> <t>it</t> <t>returns</t>:

<code>['<c>__copy__</c>', '<c>__deepcopy__</c>', '<c>findall</c>', '<c>finditer</c>', '<c>match</c>', '<c>scanner</c>', '<c>search</c>', '<c>split</c>', '<c>sub</c>', '<c>subn</c>']
</code>

<t>According</t> <t>to</t> <t>the</t> <t>manual</t>, <t>it</t> <t>is</t> <t>supposed</t> <t>to</t> <t>contain</t> 


  <t>the</t> <t>object's</t> <t>attributes</t>' <t>names</t>, <t>the</t>
  <t>names</t> <t>of</t> <t>its</t> <t>class's</t> <t>attributes</t>, <t>and</t>
  <t>recursively</t> <t>of</t> <t>the</t> <t>attributes</t> <t>of</t> <t>its</t>
  <t>class's</t> <t>base</t> <t>classes</t>.


<t>It</t> <t>says</t> <t>also</t> <t>that</t>


  <t>The</t> <t>list</t> <t>is</t> <t>not</t> <t>necessarily</t> <t>complete</t>.


<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>get</t> <t>the</t> <t>complete</t> <t>list</t>? <t>I</t> <t>always</t> <t>assumed</t> <t>that</t> <t>dir</t> <t>returns</t> <t>a</t> <t>complete</t> <t>list</t> <t>but</t> <t>apparently</t> <t>it</t> <t>does</t> <t>not...</t>

<t>Also</t>: <t>is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>list</t> <t>only</t> <t>attributes</t>? <t>Or</t> <t>only</t> <t>methods</t>?

<t>Edit</t>: <t>this</t> <t>is</t> <t>actually</t> <t>a</t> <t>bug</t> <t>in</t> <t>python</t> <t>-></t> <t>supposedly</t> <t>it</t> <t>is</t> <t>fixed</t> <t>in</t> <t>the</t> <t>3.0</t> <t>branch</t> (<t>and</t> <t>perhaps</t> <t>also</t> <t>in</t> <t>2.6</t>)
"
192109|"<t>Is</t> <t>there</t> <t>a</t> <t>built-in</t> <t>function</t> <t>to</t> <t>print</t> <t>all</t> <t>the</t> <t>current</t> <t>properties</t> <t>and</t> <t>values</t> <t>of</t> <t>an</t> <t>object</t>?"|"<t>So</t> <t>what</t> <t>I'm</t> <t>looking</t> <t>for</t> <t>here</t> <t>is</t> <t>something</t> <t>like</t> <t>PHP's</t> <t>print_r</t> <t>function</t>. <t>This</t> <t>is</t> <t>so</t> <t>I</t> <t>can</t> <t>debug</t> <t>my</t> <t>scripts</t> <t>by</t> <t>seeing</t> <t>what's</t> <t>the</t> <t>state</t> <t>of</t> <t>the</t> <t>object</t> <t>in</t> <t>question</t>.
"
204017|"<t>How</t> <t>do</t> <t>I</t> <t>execute</t> <t>a</t> <t>program</t> <t>from</t> <t>python</t>? <t>os</t>.<t>system</t> <t>fails</t> <t>due</t> <t>to</t> <t>spaces</t> <t>in</t> <t>path</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>python</t> <t>script</t> <t>that</t> <t>needs</t> <t>to</t> <t>execute</t> <t>an</t> <t>external</t> <t>program</t>, <t>but</t> <t>for</t> <t>some</t> <t>reason</t> <t>fails</t>.

<t>If</t> <t>I</t> <t>have</t> <t>the</t> <t>following</t> <t>script</t>:

<code><c>import</c> <c>os</c>;
<c>os</c><c>.</c><c>system(</c>""<c>C:\\Temp\\a</c> <c>b</c> <c>c</c><c>\\Notepad.exe</c>"");
<c>raw_input(</c>);
</code>

<t>Then</t> <t>it</t> <t>fails</t> <t>with</t> <t>the</t> <t>following</t> <t>error</t>:

<code>'<c>C:\Temp\a</c>' <c>is</c> <c>not</c> <c>recognized</c> <c>as</c> <c>an</c> <c>internal</c> <c>or</c> <c>external</c> <c>command</c>, <c>operable</c> <c>program</c> <c>or</c> <c>batch</c> <c>file</c><c>.</c>
</code>

<t>If</t> <t>I</t> <t>escape</t> <t>the</t> <t>program</t> <t>with</t> <t>quotes</t>:

<code><c>import</c> <c>os</c>;
<c>os</c><c>.</c><c>system(</c>'""<c>C:\\Temp\\a</c> <c>b</c> <c>c</c><c>\\Notepad.exe</c>""');
<c>raw_input(</c>);
</code>

<t>Then</t> <t>it</t> <t>works</t>. <t>However</t>, <t>if</t> <t>I</t> <t>add</t> <t>a</t> <t>parameter</t>, <t>it</t> <t>stops</t> <t>working</t> <t>again</t>:

<code><c>import</c> <c>os</c>;
<c>os</c><c>.</c><c>system(</c>'""<c>C:\\Temp\\a</c> <c>b</c> <c>c</c><c>\\Notepad.exe</c>"" ""<c>C:\\test.txt</c>""');
<c>raw_input(</c>);
</code>

<t>What</t> <t>is</t> <t>the</t> <t>right</t> <t>way</t> <t>to</t> <t>execute</t> <t>a</t> <t>program</t> <t>and</t> <t>wait</t> <t>for</t> <t>it</t> <t>to</t> <t>complete</t>? <t>I</t> <t>do</t> <t>not</t> <t>need</t> <t>to</t> <t>read</t> <t>output</t> <t>from</t> <t>it</t>, <t>as</t> <t>it</t> <t>is</t> <t>a</t> <t>visual</t> <t>program</t> <t>that</t> <t>does</t> <t>a</t> <t>job</t> <t>and</t> <t>then</t> <t>just</t> <t>exits</t>, <t>but</t> <t>I</t> <t>need</t> <t>to</t> <t>wait</t> <t>for</t> <t>it</t> <t>to</t> <t>complete</t>.

<t>Also</t> <t>note</t>, <t>moving</t> <t>the</t> <t>program</t> <t>to</t> <t>a</t> <t>non-spaced</t> <t>path</t> <t>is</t> <t>not</t> <t>an</t> <t>option</t> <t>either</t>.



<t>Edit This</t> <t>does</t> <t>not</t> <t>work</t> <t>either</t>:

<code><c>import</c> <c>os</c>;
<c>os</c><c>.</c><c>system(</c>""'<c>C:\\Temp\\a</c> <c>b</c> <c>c</c><c>\\Notepad.exe</c>'"");
<c>raw_input(</c>);
</code>

<t>Note</t> <t>the</t> <t>swapped</t> <t>single/double</t> <t>quotes</t>.

<t>with</t> <t>or</t> <t>without</t> <t>a</t> <t>parameter</t> <t>to</t> <t>notepad</t> <t>here</t>, <t>it</t> <t>fails</t> <t>with</t> <t>the</t> <t>error</t> <t>message</t>

<code><c>The</c> <c>filename</c>, <c>directory</c> <c>name</c>, <c>or</c> <c>volume</c> <c>label</c> <c>syntax</c> <c>is</c> <c>incorrect</c><c>.</c>
</code>
"
209513|"<t>Convert</t> <t>hex</t> <t>string</t> <t>to</t> <t>int</t> <t>in</t> <t>Python</t>"|"<t>How</t> <t>do</t> <t>I</t> <t>convert</t> <t>a</t> <t>hex</t> <t>string</t> <t>to</t> <t>an</t> <t>int</t> <t>in</t> <t>Python</t>? 

<t>I</t> <t>may</t> <t>have</t> <t>it</t> <t>as</t> ""<code>0xffff</code>"" <t>or</t> <t>just</t> ""<code><c>ffff</c></code>"".
"
209840|"<t>Map</t> <t>two</t> <t>lists</t> <t>into</t> <t>a</t> <t>dictionary</t> <t>in</t> <t>Python</t>"|"<t>Imagine</t> <t>that</t> <t>you</t> <t>have</t>:

<code><c>keys</c> <c>=</c> ('<c>name</c>', '<c>age</c>', '<c>food</c>')
<c>values</c> <c>=</c> ('<c>Monty</c>', <c>42</c>, '<c>spam</c>')
</code>

<t>What</t> <t>is</t> <t>the</t> <t>simplest</t> <t>way</t> <t>to</t> <t>produce</t> <t>the</t> <t>following</t> <t>dictionary</t> ?

<code><c>a_dict</c> <c>=</c> {'<c>name</c>' : '<c>Monty</c>', '<c>age</c>' : <c>42</c>, '<c>food</c>' : '<c>spam</c>'}
</code>

<t>This</t> <t>code</t> <t>works</t>, <t>but</t> <t>I'm</t> <t>not</t> <t>really</t> <t>proud</t> <t>of</t> <t>it</t> :

<code><c>a_dict</c> <c>=</c> {}
<c>junk</c> <c>=</c> <c>map(</c><c>lambda</c> <c>k</c>, <c>v</c>: <c>a_dict</c><c>.</c><c>update(</c>{<c>k</c>: <c>v</c>}), <c>keys</c>, <c>values</c>)
</code>
"
227459|"<t>ASCII</t> <t>value</t> <t>of</t> <t>a</t> <t>character</t> <t>in</t> <t>Python</t>"|"<t>How</t> <t>do</t> <t>I</t> <t>get</t> <t>the</t> <t>ASCII</t> <t>value</t> <t>of</t> <t>a</t> <t>character</t> <t>as</t> <t>an</t> <t>int</t> <t>in</t> <t>Python</t>?
"
230751|"<t>How</t> <t>to</t> <t>flush</t> <t>output</t> <t>of</t> <t>Python</t> <t>print</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>force</t> <t>Python's</t> <t>print</t> <t>function</t> <t>to</t> <t>output</t> <t>to</t> <t>the</t> <t>screen</t>?

<t>This</t> <t>is</t> <t>not</t> <t>a</t> <t>duplicate</t> <t>of</t> <t>Disable</t> <t>output</t> <t>buffering</t> <t>-</t> <t>the</t> <t>linked</t> <t>question</t> <t>is</t> <t>attempting</t> <t>unbuffered</t> <t>output</t>, <t>while</t> <t>this</t> <t>is</t> <t>more</t> <t>general</t>. <t>The</t> <t>top</t> <t>answers</t> <t>in</t> <t>that</t> <t>question</t> <t>are</t> <t>too</t> <t>powerful</t> <t>or</t> <t>involved</t> <t>for</t> <t>this</t> <t>one</t> (<t>they're</t> <t>not</t> <t>good</t> <t>answers</t> <t>for</t> <t>this</t>), <t>and</t> <t>this</t> <t>question</t> <t>can</t> <t>be</t> <t>found</t> <t>on</t> <t>Google</t> <t>by</t> <t>a</t> <t>relative</t> <t>newbie</t>.
"
231767|"<t>What</t> <t>does</t> <t>the</t> ""<t>yield</t>"" <t>keyword</t> <t>do</t>?"|"<t>What</t> <t>is</t> <t>the</t> <t>use</t> <t>of</t> <t>the</t> <code><c>yield</c></code> <t>keyword</t> <t>in</t> <t>Python</t>? <t>What</t> <t>does</t> <t>it</t> <t>do</t>?

<t>For</t> <t>example</t>, <t>I'm</t> <t>trying</t> <t>to</t> <t>understand</t> <t>this</t> <t>code1</t>:

<code><c>def</c> <c>_get_child_candidates(</c><c>self</c>, <c>distance</c>, <c>min_dist</c>, <c>max_dist</c>):
    <c>if</c> <c>self</c><c>.</c><c>_leftchild</c> <c>and</c> <c>distance</c> <c>-</c> <c>max_dist</c> <c>&lt;</c> <c>self</c><c>.</c><c>_median</c>:
        <c>yield</c> <c>self</c><c>.</c><c>_leftchild</c>
    <c>if</c> <c>self</c><c>.</c><c>_rightchild</c> <c>and</c> <c>distance</c> <c>+</c> <c>max_dist</c> <c>&gt;</c><c>=</c> <c>self</c><c>.</c><c>_median</c>:
        <c>yield</c> <c>self</c><c>.</c><c>_rightchild</c>  
</code>

<t>And</t> <t>this</t> <t>is</t> <t>the</t> <t>caller</t>:

<code><c>result</c>, <c>candidates</c> <c>=</c> <c>list(</c>), [<c>self</c>]
<c>while</c> <c>candidates</c>:
    <c>node</c> <c>=</c> <c>candidates</c><c>.</c><c>pop(</c>)
    <c>distance</c> <c>=</c> <c>node</c><c>.</c><c>_get_dist(</c><c>obj</c>)
    <c>if</c> <c>distance</c> <c>&lt;</c><c>=</c> <c>max_dist</c> <c>and</c> <c>distance</c> <c>&gt;</c><c>=</c> <c>min_dist</c>:
        <c>result</c><c>.</c><c>extend(</c><c>node</c><c>.</c><c>_values</c>)
    <c>candidates</c><c>.</c><c>extend(</c><c>node</c><c>.</c><c>_get_child_candidates(</c><c>distance</c>, <c>min_dist</c>, <c>max_dist</c>))
<c>return</c> <c>result</c>
</code>

<t>What</t> <t>happens</t> <t>when</t> <t>the</t> <t>method</t> <code><c>_get_child_candidates</c></code> <t>is</t> <t>called</t>?
<t>Is</t> <t>a</t> <t>list</t> <t>returned</t>? <t>A</t> <t>single</t> <t>element</t>? <t>Is</t> <t>it</t> <t>called</t> <t>again</t>? <t>When</t> <t>will</t> <t>subsequent</t> <t>calls</t> <t>stop</t>?




<t>1</t>. <t>The</t> <t>code</t> <t>comes</t> <t>from</t> <t>Jochen Schulz</t> (<t>jrschulz</t>), <t>who</t> <t>made</t> <t>a</t> <t>great</t> <t>Python</t> <t>library</t> <t>for</t> <t>metric</t> <t>spaces</t>. <t>This</t> <t>is</t> <t>the</t> <t>link</t> <t>to</t> <t>the</t> <t>complete</t> <t>source</t>: <t>Module</t> <t>mspace</t>.
"
237079|"<t>How</t> <t>to</t> <t>get</t> <t>file</t> <t>creation</t> <t>&</t> <t>modification</t> <t>date/times</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>script</t> <t>that</t> <t>needs</t> <t>to</t> <t>do</t> <t>some</t> <t>stuff</t> <t>based</t> <t>on</t> <t>file</t> <t>creation</t> <t>&amp;</t> <t>modification</t> <t>dates</t> <t>but</t> <t>has</t> <t>to</t> <t>run</t> <t>on</t> <t>Linux</t> <t>&amp;</t> <t>Windows</t>.

<t>What's</t> <t>the</t> <t>best</t> <t>cross-platform</t> <t>way</t> <t>to</t> <t>get</t> <t>file</t> <t>creation</t> <t>&amp;</t> <t>modification</t> <t>date/times</t> <t>in</t> <t>Python</t>?
"
247770|"<t>Retrieving</t> <t>python</t> <t>module</t> <t>path</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>detect</t> <t>whether</t> <t>module</t> <t>has</t> <t>changed</t>. <t>Now</t>, <t>using</t> <t>inotify</t> <t>is</t> <t>simple</t>, <t>you</t> <t>just</t> <t>need</t> <t>to</t> <t>know</t> <t>the</t> <t>directory</t> <t>you</t> <t>want</t> <t>to</t> <t>get</t> <t>notifications</t> <t>from</t>.

<t>How</t> <t>do</t> <t>I</t> <t>retrieve</t> <t>a</t> <t>module's</t> <t>path</t> <t>in</t> <t>python</t>?
"
251464|"<t>How</t> <t>to</t> <t>get</t> <t>a</t> <t>function</t> <t>name</t> <t>as</t> <t>a</t> <t>string</t> <t>in</t> <t>Python</t>?"|"<t>In</t> <t>Python</t>, <t>how</t> <t>do</t> <t>I</t> <t>get</t> <t>a</t> <t>function</t> <t>name</t> <t>as</t> <t>a</t> <t>string</t> <t>without</t> <t>calling</t> <t>the</t> <t>function</t>?

<code><c>def</c> <c>my_function(</c>):
    <c>pass</c>

<c>print</c> <c>get_function_name_as_string(</c><c>my_function</c>) # <c>my_function</c> <c>is</c> <c>not</c> <c>in</c> <c>quotes</c>
</code>

<t>should</t> <t>output</t> <code>""<c>my_function</c>""</code>.

<t>Is</t> <t>this</t> <t>available</t> <t>in</t> <t>python</t>? <t>If</t> <t>not</t>, <t>any</t> <t>idea</t> <t>how</t> <t>to</t> <t>write</t> <code><c>get_function_name_as_string</c></code> <t>in</t> <t>Python</t>?
"
252703|"<t>append</t> <t>vs</t>. <t>extend</t>"|"<t>What's</t> <t>the</t> <t>difference</t> <t>between</t> <t>the</t> <t>list</t> <t>methods</t> <code><c>append(</c>)</code> <t>and</t> <code><c>extend(</c>)</code>?
"
265960|"<t>Best</t> <t>way</t> <t>to</t> <t>strip</t> <t>punctuation</t> <t>from</t> <t>a</t> <t>string</t> <t>in</t> <t>Python</t>"|"<t>It</t> <t>seems</t> <t>like</t> <t>there</t> <t>should</t> <t>be</t> <t>a</t> <t>simpler</t> <t>way</t> <t>than</t>:

<code><c>import</c> <c>string</c>
<c>s</c> <c>=</c> ""<c>string</c><c>.</c> <c>With</c><c>.</c> <c>Punctuation</c><c>?</c>"" # <c>Sample</c> <c>string</c> 
<c>out</c> <c>=</c> <c>s</c><c>.</c><c>translate(</c><c>string</c><c>.</c><c>maketrans(</c>"""",""""), <c>string</c><c>.</c><c>punctuation</c>)
</code>

<t>Is</t> <t>there</t>?
"
268272|"<t>Getting</t> <t>key</t> <t>with</t> <t>maximum</t> <t>value</t> <t>in</t> <t>dictionary</t>?"|"<t>I</t> <t>have</t> <t>a</t> <code><c>dictionary</c></code>: <t>keys</t> <t>are</t> <t>strings</t>, <t>values</t> <t>are</t> <t>integers</t>.

<t>Example</t>: 

<code><c>stats</c> <c>=</c> {'<c>a</c>':<c>1000</c>, '<c>b</c>':<c>3000</c>, '<c>c</c>': <c>100</c>}
</code>

<t>I'd</t> <t>like</t> <t>to</t> <t>get</t> <code>'<c>b</c>'</code> <t>as</t> <t>an</t> <t>answer</t>, <t>since</t> <t>it's</t> <t>the</t> <t>key</t> <t>with</t> <t>a</t> <t>higher</t> <t>value</t>.

<t>I</t> <t>did</t> <t>the</t> <t>following</t>, <t>using</t> <t>an</t> <t>intermediate</t> <t>list</t> <t>with</t> <t>reversed</t> <t>key-value</t> <t>tuples</t>:

<code><c>inverse</c> <c>=</c> [(<c>value</c>, <c>key</c>) <c>for</c> <c>key</c>, <c>value</c> <c>in</c> <c>stats</c><c>.</c><c>items(</c>)]
<c>print</c> <c>max(</c><c>inverse</c>)[<c>1</c>]
</code>

<t>Is</t> <t>that</t> <t>one</t> <t>the</t> <t>better</t> (<t>or</t> <t>even</t> <t>more</t> <t>elegant</t>) <t>approach</t>?
"
269795|"<t>How</t> <t>do</t> <t>I</t> <t>find</t> <t>the</t> <t>location</t> <t>of</t> <t>Python</t> <t>module</t> <t>sources</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>learn</t> <t>where</t> <t>the</t> <t>source</t> <t>file</t> <t>for</t> <t>a</t> <t>given</t> <t>Python</t> <t>module</t> <t>is</t> <t>installed</t>? <t>Is</t> <t>the</t> <t>method</t> <t>different</t> <t>on</t> <t>Windows</t> <t>than</t> <t>on</t> <t>Linux</t>?

<t>I'm</t> <t>trying</t> <t>to</t> <t>look</t> <t>for</t> <t>the</t> <t>source</t> <t>of</t> <t>the</t> <code><c>datetime</c></code> <t>module</t> <t>in</t> <t>particular</t>, <t>but</t> <t>I'm</t> <t>interested</t> <t>in</t> <t>a</t> <t>more</t> <t>general</t> <t>answer</t> <t>as</t> <t>well</t>.
"
273192|"<t>How</t> <t>can</t> <t>I</t> <t>create</t> <t>a</t> <t>directory</t> <t>if</t> <t>it</t> <t>does</t> <t>not</t> <t>exist</t>?"|"<t>What</t> <t>is</t> <t>the</t> <t>most</t> <t>elegant</t> <t>way</t> <t>to</t> <t>check</t> <t>if</t> <t>the</t> <t>directory</t> <t>a</t> <t>file</t> <t>is</t> <t>going</t> <t>to</t> <t>be</t> <t>written</t> <t>to</t> <t>exists</t>, <t>and</t> <t>if</t> <t>not</t>, <t>create</t> <t>the</t> <t>directory</t> <t>using</t> <t>Python</t>? <t>Here</t> <t>is</t> <t>what</t> <t>I</t> <t>tried</t>:

<code><c>import</c> <c>os</c>

<c>file_path</c> <c>=</c> ""<c>/my/directory/filename.txt</c>""
<c>directory</c> <c>=</c> <c>os</c><c>.</c><c>path</c><c>.</c><c>dirname(</c><c>file_path</c>)

<c>try</c>:
    <c>os</c><c>.</c><c>stat(</c><c>directory</c>)
<c>except</c>:
    <c>os</c><c>.</c><c>mkdir(</c><c>directory</c>)       

<c>f</c> <c>=</c> <c>file(</c><c>filename</c>)
</code>

<t>Somehow</t>, <t>I</t> <t>missed</t> <code><c>os</c><c>.</c><c>path</c><c>.</c><c>exists</c></code> (<t>thanks</t> <t>kanja</t>, <t>Blair</t>, <t>and</t> <t>Douglas</t>). <t>This</t> <t>is</t> <t>what</t> <t>I</t> <t>have</t> <t>now</t>:

<code><c>def</c> <c>ensure_dir(</c><c>file_path</c>):
    <c>directory</c> <c>=</c> <c>os</c><c>.</c><c>path</c><c>.</c><c>dirname(</c><c>file_path</c>)
    <c>if</c> <c>not</c> <c>os</c><c>.</c><c>path</c><c>.</c><c>exists(</c><c>directory</c>):
        <c>os</c><c>.</c><c>makedirs(</c><c>directory</c>)
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>flag</t> <t>for</t> ""<t>open</t>"", <t>that</t> <t>makes</t> <t>this</t> <t>happen</t> <t>automatically</t>?
"
273946|"<t>How</t> <t>do</t> <t>I</t> <t>resize</t> <t>an</t> <t>image</t> <t>using</t> <t>PIL</t> <t>and</t> <t>maintain</t> <t>its</t> <t>aspect</t> <t>ratio</t>?"|"<t>Is</t> <t>there</t> <t>an</t> <t>obvious</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t> <t>that</t> <t>I'm</t> <t>missing</t>?  <t>I'm</t> <t>just</t> <t>trying</t> <t>to</t> <t>make</t> <t>thumbnails</t>.
"
275018|"<t>How</t> <t>can</t> <t>I</t> <t>remove</t> (<t>chomp</t>) <t>a</t> <t>newline</t> <t>in</t> <t>Python</t>?"|"<t>What</t> <t>is</t> <t>the</t> <t>Python</t> <t>equivalent</t> <t>of</t> <t>Perl's</t> <code><c>chomp</c></code> <t>function</t>, <t>which</t> <t>removes</t> <t>the</t> <t>last</t> <t>character</t> <t>of</t> <t>a</t> <t>value</t>?
"
279237|"<t>Import</t> <t>a</t> <t>module</t> <t>from</t> <t>a</t> <t>relative</t> <t>path</t>"|"<t>How</t> <t>do</t> <t>I</t> <t>import</t> <t>a</t> <t>python</t> <t>module</t> <t>given</t> <t>its</t> <t>relative</t> <t>path</t>?

<t>For</t> <t>example</t>, <t>if</t> <code><c>dirFoo</c></code> <t>contains</t> <code><c>Foo</c><c>.</c><c>py</c></code> <t>and</t> <code><c>dirBar</c></code>, <t>and</t> <code><c>dirBar</c></code> <t>contains</t> <code><c>Bar</c><c>.</c><c>py</c></code>, <t>how</t> <t>do</t> <t>I</t> <t>import</t> <code><c>Bar</c><c>.</c><c>py</c></code> <t>into</t> <code><c>Foo</c><c>.</c><c>py</c></code>?

<t>Here's</t> <t>a</t> <t>visual</t> <t>representation</t>:

<code><c>dirFoo</c><c>\
</c>    <c>Foo</c><c>.</c><c>py</c>
    <c>dirBar</c><c>\
</c>        <c>Bar</c><c>.</c><c>py</c>
</code>

<code><c>Foo</c></code> <t>wishes</t> <t>to</t> <t>include</t> <code><c>Bar</c></code>, <t>but</t> <t>restructuring</t> <t>the</t> <t>folder</t> <t>hierarchy</t> <t>is</t> <t>not</t> <t>an</t> <t>option</t>.
"
279561|"<t>What</t> <t>is</t> <t>the</t> <t>Python</t> <t>equivalent</t> <t>of</t> <t>static</t> <t>variables</t> <t>inside</t> <t>a</t> <t>function</t>?"|"<t>What</t> <t>is</t> <t>the</t> <t>idiomatic</t> <t>Python</t> <t>equivalent</t> <t>of</t> <t>this</t> <t>C/C++</t> <t>code</t>?

<code><c>void</c> <c>foo(</c>)
{
    <c>static</c> <c>int</c> <c>counter</c> <c>=</c> <c>0</c>;
    <c>counter</c><c>+</c><c>+</c>;
    <c>printf(</c>""<c>counter</c> <c>is</c> <c>%</c><c>d</c><c>\n</c>"", <c>counter</c>);
}
</code>

<t>specifically</t>, <t>how</t> <t>does</t> <t>one</t> <t>implement</t> <t>the</t> <t>static</t> <t>member</t> <t>at</t> <t>the</t> <t>function</t> <t>level</t>, <t>as</t> <t>opposed</t> <t>to</t> <t>the</t> <t>class</t> <t>level</t>? <t>And</t> <t>does</t> <t>placing</t> <t>the</t> <t>function</t> <t>into</t> <t>a</t> <t>class</t> <t>change</t> <t>anything</t>?
"
280243|"<t>Python Linked</t> <t>List</t>"|"<t>What's</t> <t>the</t> <t>easiest</t> <t>way</t> <t>to</t> <t>use</t> <t>a</t> <t>linked</t> <t>list</t> <t>in</t> <t>python</t>? <t>In</t> <t>scheme</t>, <t>a</t> <t>linked</t> <t>list</t> <t>is</t> <t>defined</t> <t>simply</t> <t>by</t> <code>'(<c>1</c> <c>2</c> <c>3</c> <c>4</c> <c>5</c>)</code>. <t>Python's</t> <t>lists</t>, <code>[<c>1</c>, <c>2</c>, <c>3</c>, <c>4</c>, <c>5</c>]</code>, <t>and</t> <t>tuples</t>, <code>(<c>1</c>, <c>2</c>, <c>3</c>, <c>4</c>, <c>5</c>)</code>, <t>are</t> <t>not</t>, <t>in</t> <t>fact</t>, <t>linked</t> <t>lists</t>, <t>and</t> <t>linked</t> <t>lists</t> <t>have</t> <t>some</t> <t>nice</t> <t>properties</t> <t>such</t> <t>as</t> <t>constant-time</t> <t>concatenation</t>, <t>and</t> <t>being</t> <t>able</t> <t>to</t> <t>reference</t> <t>separate</t> <t>parts</t> <t>of</t> <t>them</t>. <t>Make</t> <t>them</t> <t>immutable</t> <t>and</t> <t>they</t> <t>are</t> <t>really</t> <t>easy</t> <t>to</t> <t>work</t> <t>with</t>!
"
285289|"<t>Exit</t> <t>codes</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>got</t> <t>a</t> <t>message</t> <t>saying</t> <code><c>script</c> <c>xyz</c><c>.</c><c>py</c> <c>returned</c> <c>exit</c> <c>code</c> <c>0</c></code>. <t>What</t> <t>does</t> <t>this</t> <t>mean</t>?

<t>What</t> <t>do</t> <t>the</t> <t>exit</t> <t>codes</t> <t>in</t> <t>Python</t> <t>mean</t>? <t>How</t> <t>many</t> <t>are</t> <t>there</t>? <t>Which</t> <t>ones</t> <t>are</t> <t>important</t>?
"
287871|"<t>Print</t> <t>in</t> <t>terminal</t> <t>with</t> <t>colors</t> <t>using</t> <t>Python</t>?"|"<t>How</t> <t>can</t> <t>I</t> <t>output</t> <t>colored</t> <t>text</t> <t>to</t> <t>the</t> <t>terminal</t>, <t>in</t> <t>Python</t>?
<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>Unicode</t> <t>symbol</t> <t>to</t> <t>represent</t> <t>a</t> <t>solid</t> <t>block</t>?
"
303200|"<t>How</t> <t>do</t> <t>I</t> <t>remove/delete</t> <t>a</t> <t>folder</t> <t>that</t> <t>is</t> <t>not</t> <t>empty</t> <t>with</t> <t>Python</t>?"|"<t>I</t> <t>am</t> <t>getting</t> <t>an</t> '<t>access</t> <t>is</t> <t>denied</t>' <t>error</t> <t>when</t> <t>I</t> <t>attempt</t> <t>to</t> <t>delete</t> <t>a</t> <t>folder</t> <t>that</t> <t>is</t> <t>not</t> <t>empty</t>. <t>I</t> <t>used</t> <t>the</t> <t>following</t> <t>command</t> <t>in</t> <t>my</t> <t>attempt</t>: <code><c>os</c><c>.</c><c>remove(</c>""<c>/folder_name</c>"")</code>. 

<t>What</t> <t>is</t> <t>the</t> <t>most</t> <t>effective</t> <t>way</t> <t>of</t> <t>removing/deleting</t> <t>a</t> <t>folder/directory</t> <t>that</t> <t>is</t> <t>not</t> <t>empty</t>?
"
306400|"<t>How</t> <t>to</t> <t>randomly</t> <t>select</t> <t>an</t> <t>item</t> <t>from</t> <t>a</t> <t>list</t>?"|"<t>Assume</t> <t>I</t> <t>have</t> <t>the</t> <t>following</t> <t>list</t>:

<code><c>foo</c> <c>=</c> ['<c>a</c>', '<c>b</c>', '<c>c</c>', '<c>d</c>', '<c>e</c>']
</code>

<t>What</t> <t>is</t> <t>the</t> <t>simplest</t> <t>way</t> <t>to</t> <t>retrieve</t> <t>an</t> <t>item</t> <t>at</t> <t>random</t> <t>from</t> <t>this</t> <t>list</t>?
"
307305|"<t>Play</t> <t>a</t> <t>Sound</t> <t>with</t> <t>Python</t>"|"<t>What's</t> <t>the</t> <t>easiest</t> <t>way</t> <t>to</t> <t>play</t> <t>a</t> <t>sound</t> <t>file</t> (.<t>wav</t>) <t>in</t> <t>Python</t>? <t>By</t> <t>easiest</t> <t>I</t> <t>mean</t> <t>both</t> <t>most</t> <t>platform</t> <t>independent</t> <t>and</t> <t>requiring</t> <t>the</t> <t>least</t> <t>dependencies</t>. <t>pygame</t> <t>is</t> <t>certainly</t> <t>an</t> <t>option</t>, <t>but</t> <t>it</t> <t>seems</t> <t>overkill</t> <t>for</t> <t>just</t> <t>sound</t>.
"
311627|"<t>How</t> <t>to</t> <t>print</t> <t>date</t> <t>in</t> <t>a</t> <t>regular</t> <t>format</t> <t>in</t> <t>Python</t>?"|"<t>This</t> <t>is</t> <t>my</t> <t>code</t>:

<code><c>import</c> <c>datetime</c>
<c>today</c> <c>=</c> <c>datetime</c><c>.</c><c>date</c><c>.</c><c>today(</c>)
<c>print</c> <c>today</c>
</code>

<t>This</t> <t>prints</t>: <t>2008-11-22</t> <t>which</t> <t>is</t> <t>exactly</t> <t>what</t> <t>I</t> <t>want</t> <t>BUT....I</t> <t>have</t> <t>a</t> <t>list</t> <t>I'm</t> <t>appending</t> <t>this</t> <t>to</t> <t>and</t> <t>then</t> <t>suddenly</t> <t>everything</t> <t>goes</t> ""<t>wonky</t>"". <t>Here</t> <t>is</t> <t>the</t> <t>code</t>:

<code><c>import</c> <c>datetime</c>
<c>mylist</c> <c>=</c> []
<c>today</c> <c>=</c> <c>datetime</c><c>.</c><c>date</c><c>.</c><c>today(</c>)
<c>mylist</c><c>.</c><c>append(</c><c>today</c>)
<c>print</c> <c>mylist</c>
</code>

<t>This</t> <t>prints</t> <t>the</t> <t>following</t>: 

<code>[<c>datetime</c><c>.</c><c>date(</c><c>2008</c>, <c>11</c>, <c>22</c>)]
</code>

<t>How</t> <t>on</t> <t>earth</t> <t>can</t> <t>I</t> <t>get</t> <t>just</t> <t>a</t> <t>simple</t> <t>date</t> <t>like</t> ""<t>2008-11-22</t>""?
"
312443|"<t>How</t> <t>do</t> <t>you</t> <t>split</t> <t>a</t> <t>list</t> <t>into</t> <t>evenly</t> <t>sized</t> <t>chunks</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>list</t> <t>of</t> <t>arbitrary</t> <t>length</t>, <t>and</t> <t>I</t> <t>need</t> <t>to</t> <t>split</t> <t>it</t> <t>up</t> <t>into</t> <t>equal</t> <t>size</t> <t>chunks</t> <t>and</t> <t>operate</t> <t>on</t> <t>it</t>. <t>There</t> <t>are</t> <t>some</t> <t>obvious</t> <t>ways</t> <t>to</t> <t>do</t> <t>this</t>, <t>like</t> <t>keeping</t> <t>a</t> <t>counter</t> <t>and</t> <t>two</t> <t>lists</t>, <t>and</t> <t>when</t> <t>the</t> <t>second</t> <t>list</t> <t>fills</t> <t>up</t>, <t>add</t> <t>it</t> <t>to</t> <t>the</t> <t>first</t> <t>list</t> <t>and</t> <t>empty</t> <t>the</t> <t>second</t> <t>list</t> <t>for</t> <t>the</t> <t>next</t> <t>round</t> <t>of</t> <t>data</t>, <t>but</t> <t>this</t> <t>is</t> <t>potentially</t> <t>extremely</t> <t>expensive</t>.

<t>I</t> <t>was</t> <t>wondering</t> <t>if</t> <t>anyone</t> <t>had</t> <t>a</t> <t>good</t> <t>solution</t> <t>to</t> <t>this</t> <t>for</t> <t>lists</t> <t>of</t> <t>any</t> <t>length</t>, <t>e.g.</t> <t>using</t> <t>generators</t>.

<t>I</t> <t>was</t> <t>looking</t> <t>for</t> <t>something</t> <t>useful</t> <t>in</t> <code><c>itertools</c></code> <t>but</t> <t>I</t> <t>couldn't</t> <t>find</t> <t>anything</t> <t>obviously</t> <t>useful</t>. <t>Might've</t> <t>missed</t> <t>it</t>, <t>though</t>.

<t>Related</t> <t>question</t>: <t>What</t> <t>is</t> <t>the</t> <t>most</t> <t>“pythonic”</t> <t>way</t> <t>to</t> <t>iterate</t> <t>over</t> <t>a</t> <t>list</t> <t>in</t> <t>chunks</t>?
"
319426|"<t>How</t> <t>do</t> <t>I</t> <t>do</t> <t>a</t> <t>case</t> <t>insensitive</t> <t>string</t> <t>comparison</t> <t>in</t> <t>Python</t>?"|"<t>What's</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>do</t> <t>case</t> <t>insensitive</t> <t>string</t> <t>comparison</t> <t>in</t> <t>Python</t>?

<t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>encapsulate</t> <t>comparison</t> <t>of</t> <t>a</t> <t>regular</t> <t>strings</t> <t>to</t> <t>a</t> <t>repository</t> <t>string</t> <t>using</t> <t>in</t> <t>a</t> <t>very</t> <t>simple</t> <t>and</t> <t>pythonic</t> <t>way</t>.  <t>I</t> <t>also</t> <t>would</t> <t>like</t> <t>to</t> <t>have</t> <t>ability</t> <t>to</t> <t>look</t> <t>up</t> <t>values</t> <t>in</t> <t>a</t> <t>dict</t> <t>hashed</t> <t>by</t> <t>strings</t> <t>using</t> <t>regular</t> <t>python</t> <t>strings</t>.  <t>Much</t> <t>obliged</t> <t>for</t> <t>advice</t>.
"
323972|"<t>Is</t> <t>there</t> <t>any</t> <t>way</t> <t>to</t> <t>kill</t> <t>a</t> <t>Thread</t> <t>in</t> <t>Python</t>?"|"<t>Is</t> <t>it</t> <t>possible</t> <t>to</t> <t>terminate</t> <t>a</t> <t>running</t> <t>thread</t> <t>without</t> <t>setting/checking</t> <t>any</t> <t>flags/semaphores/etc</t>.?
"
328356|"<t>Extracting</t> <t>text</t> <t>from</t> <t>HTML</t> <t>file</t> <t>using</t> <t>Python</t>"|"<t>I'd</t> <t>like</t> <t>to</t> <t>extract</t> <t>the</t> <t>text</t> <t>from</t> <t>an</t> <t>HTML</t> <t>file</t> <t>using</t> <t>Python</t>.  <t>I</t> <t>want</t> <t>essentially</t> <t>the</t> <t>same</t> <t>output</t> <t>I</t> <t>would</t> <t>get</t> <t>if</t> <t>I</t> <t>copied</t> <t>the</t> <t>text</t> <t>from</t> <t>a</t> <t>browser</t> <t>and</t> <t>pasted</t> <t>it</t> <t>into</t> <t>notepad</t>.  

<t>I'd</t> <t>like</t> <t>something</t> <t>more</t> <t>robust</t> <t>than</t> <t>using</t> <t>regular</t> <t>expressions</t> <t>that</t> <t>may</t> <t>fail</t> <t>on</t> <t>poorly</t> <t>formed</t> <t>HTML</t>.  <t>I've</t> <t>seen</t> <t>many</t> <t>people</t> <t>recommend</t> <t>Beautiful</t> <t>Soup</t>, <t>but</t> <t>I've</t> <t>had</t> <t>a</t> <t>few</t> <t>problems</t> <t>using</t> <t>it</t>.  <t>For</t> <t>one</t>, <t>it</t> <t>picked</t> <t>up</t> <t>unwanted</t> <t>text</t>, <t>such</t> <t>as</t> <t>JavaScript</t> <t>source</t>.  <t>Also</t>, <t>it</t> <t>did</t> <t>not</t> <t>interpret</t> <t>HTML</t> <t>entities</t>.  <t>For</t> <t>example</t>, <t>I</t> <t>would</t> <t>expect</t> <t>&amp;#39;</t> <t>in</t> <t>HTML</t> <t>source</t> <t>to</t> <t>be</t> <t>converted</t> <t>to</t> <t>an</t> <t>apostrophe</t> <t>in</t> <t>text</t>, <t>just</t> <t>as</t> <t>if</t> <t>I'd</t> <t>pasted</t> <t>the</t> <t>browser</t> <t>content</t> <t>into</t> <t>notepad</t>.

<t>Update</t> <code><c>html2text</c></code> <t>looks</t> <t>promising</t>. <t>It</t> <t>handles</t> <t>HTML</t> <t>entities</t> <t>correctly</t> <t>and</t> <t>ignores</t> <t>JavaScript</t>.  <t>However</t>, <t>it</t> <t>does</t> <t>not</t> <t>exactly</t> <t>produce</t> <t>plain</t> <t>text;</t> <t>it</t> <t>produces</t> <t>markdown</t> <t>that</t> <t>would</t> <t>then</t> <t>have</t> <t>to</t> <t>be</t> <t>turned</t> <t>into</t> <t>plain</t> <t>text</t>. <t>It</t> <t>comes</t> <t>with</t> <t>no</t> <t>examples</t> <t>or</t> <t>documentation</t>, <t>but</t> <t>the</t> <t>code</t> <t>looks</t> <t>clean</t>.



<t>Related</t> <t>questions</t>:


<t>Filter</t> <t>out</t> <t>HTML</t> <t>tags</t> <t>and</t> <t>resolve</t> <t>entities</t> <t>in</t> <t>python</t>
<t>Convert XML/HTML Entities</t> <t>into</t> <t>Unicode String</t> <t>in</t> <t>Python</t>

"
332289|"<t>How</t> <t>do</t> <t>you</t> <t>change</t> <t>the</t> <t>size</t> <t>of</t> <t>figures</t> <t>drawn</t> <t>with</t> <t>matplotlib</t>?"|"<t>How</t> <t>do</t> <t>you</t> <t>change</t> <t>the</t> <t>size</t> <t>of</t> <t>figure</t> <t>drawn</t> <t>with</t> <t>matplotlib</t>?
"
338768|"<t>Python</t> <t>error</t> ""<t>ImportError</t>: <t>No</t> <t>module</t> <t>named</t>"""|"<t>Python</t> <t>is</t> <t>installed</t> <t>in</t> <t>a</t> <t>local</t> <t>directory</t>.  

<t>My</t> <t>directory</t> <t>tree</t> <t>looks</t> <t>like</t> <t>this</t>:

<code>(<c>local</c> <c>directory</c>)<c>/site-packages/toolkit/interface.py
</c></code>

<t>My</t> <t>code</t> <t>is</t> <t>in</t> <t>here</t>:

<code>(<c>local</c> <c>directory</c>)<c>/site-packages/toolkit/examples/mountain.py
</c></code>

<t>To</t> <t>run</t> <t>the</t> <t>example</t>, <t>I</t> <t>write</t> <code><c>python</c> <c>mountain</c><c>.</c><c>py</c></code>, <t>and</t> <t>in</t> <t>the</t> <t>code</t> <t>I</t> <t>have</t>:

<code><c>from</c> <c>toolkit</c><c>.</c><c>interface</c> <c>import</c> <c>interface</c>
</code>

<t>And</t> <t>I</t> <t>get</t> <t>the</t> <t>error</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>mountain</c><c>.</c><c>py</c>"", <c>line</c> <c>28</c>, <c>in</c> <c>?</c>
    <c>from</c> <c>toolkit</c><c>.</c><c>interface</c> <c>import</c> <c>interface</c>
<c>ImportError</c>: <c>No</c> <c>module</c> <c>named</c> <c>toolkit</c><c>.</c><c>interface</c>
</code>

<t>I</t> <t>have</t> <t>already</t> <t>checked</t> <code><c>sys</c><c>.</c><c>path</c></code> <t>and</t> <t>there</t> <t>I</t> <t>have</t> <t>the</t> <t>directory</t> <code><c>/site-packages</c></code>. <t>Also</t>, <t>I</t> <t>have</t> <t>the</t> <t>file</t> <code><c>__init__</c><c>.</c><c>py</c><c>.</c><c>bin</c></code> <t>in</t> <t>the</t> <t>toolkit</t> <t>folder</t> <t>to</t> <t>indicate</t> <t>to</t> <t>Python</t> <t>that</t> <t>this</t> <t>is</t> <t>a</t> <t>package</t>. <t>I</t> <t>also</t> <t>have</t> <t>a</t> <code><c>__init__</c><c>.</c><c>py</c><c>.</c><c>bin</c></code> <t>in</t> <t>the</t> <t>examples</t> <t>directory</t>.

<t>I</t> <t>do</t> <t>not</t> <t>know</t> <t>why</t> <t>Python</t> <t>cannot</t> <t>find</t> <t>the</t> <t>file</t> <t>when</t> <t>it</t> <t>is</t> <t>in</t> <code><c>sys</c><c>.</c><c>path</c></code>.  <t>Any</t> <t>ideas</t>?  <t>Can</t> <t>it</t> <t>be</t> <t>a</t> <t>permissions</t> <t>problem</t>?  <t>Do</t> <t>I</t> <t>need</t> <t>some</t> <t>execution</t> <t>permission</t>?
"
339007|"<t>Nicest</t> <t>way</t> <t>to</t> <t>pad</t> <t>zeroes</t> <t>to</t> <t>string</t>"|"<t>What</t> <t>is</t> <t>the</t> <t>most</t> <t>pythonic</t> <t>way</t> <t>to</t> <t>pad</t> <t>a</t> <t>numeric</t> <t>string</t> <t>with</t> <t>zeroes</t> <t>to</t> <t>the</t> <t>left</t>, <t>i.e.,</t> <t>so</t> <t>the</t> <t>numeric</t> <t>string</t> <t>has</t> <t>a</t> <t>specific</t> <t>length</t>?
"
348196|"<t>Creating</t> <t>a</t> <t>list</t> <t>of</t> <t>objects</t> <t>in</t> <t>Python</t>"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>create</t> <t>a</t> <t>Python</t> <t>script</t> <t>that</t> <t>opens</t> <t>several</t> <t>databases</t> <t>and</t> <t>compares</t> <t>their</t> <t>contents</t>.  <t>In</t> <t>the</t> <t>process</t> <t>of</t> <t>creating</t> <t>that</t> <t>script</t>, <t>I've</t> <t>run</t> <t>into</t> <t>a</t> <t>problem</t> <t>in</t> <t>creating</t> <t>a</t> <t>list</t> <t>whose</t> <t>contents</t> <t>are</t> <t>objects</t> <t>that</t> <t>I've</t> <t>created</t>.

<t>I've</t> <t>simplified</t> <t>the</t> <t>program</t> <t>to</t> <t>its</t> <t>bare</t> <t>bones</t> <t>for</t> <t>this</t> <t>posting</t>. <t>First</t> <t>I</t> <t>create</t> <t>a</t> <t>new</t> <t>class</t>, <t>create</t> <t>a</t> <t>new</t> <t>instance</t> <t>of</t> <t>it</t>, <t>assign</t> <t>it</t> <t>an</t> <t>attribute</t> <t>and</t> <t>then</t> <t>write</t> <t>it</t> <t>to</t> <t>a</t> <t>list</t>.  <t>Then</t> <t>I</t> <t>assign</t> <t>a</t> <t>new</t> <t>value</t> <t>to</t> <t>the</t> <t>instance</t> <t>and</t> <t>again</t> <t>write</t> <t>it</t> <t>to</t> <t>a</t> <t>list...</t> <t>and</t> <t>again</t> <t>and</t> <t>again...</t>

<t>Problem</t> <t>is</t>, <t>it's</t> <t>always</t> <t>the</t> <t>same</t> <t>object</t> <t>so</t> <t>I'm</t> <t>really</t> <t>just</t> <t>changing</t> <t>the</t> <t>base</t> <t>object</t>.  <t>When</t> <t>I</t> <t>read</t> <t>the</t> <t>list</t>, <t>I</t> <t>get</t> <t>a</t> <t>repeat</t> <t>of</t> <t>the</t> <t>same</t> <t>object</t> <t>over</t> <t>and</t> <t>over</t>.  

<t>So</t> <t>how</t> <t>do</t> <t>you</t> <t>write</t> <t>objects</t> <t>to</t> <t>a</t> <t>list</t> <t>within</t> <t>a</t> <t>loop</t>?

<t>Thanks</t>,

<t>Bob J</t>

<t>Here's</t> <t>my</t> <t>simplified</t> <t>code</t>

<code><c>class</c> <c>SimpleClass(</c><c>object</c>):
    <c>pass</c>

<c>x</c> <c>=</c> <c>SimpleClass</c>
# <c>Then</c> <c>create</c> <c>an</c> <c>empty</c> <c>list</c>
<c>simpleList</c> <c>=</c> []
#<c>Then</c> <c>loop</c> <c>through</c> <c>from</c> <c>0</c> <c>to</c> <c>3</c> <c>adding</c> <c>an</c> <c>attribute</c> <c>to</c> <c>the</c> <c>instance</c> '<c>x</c>' <c>of</c> <c>SimpleClass</c>
<c>for</c> <c>count</c> <c>in</c> <c>range(</c><c>0</c>,<c>4</c>):       
    # <c>each</c> <c>iteration</c> <c>creates</c> <c>a</c> <c>slightly</c> <c>different</c> <c>attribute</c> <c>value</c>, <c>and</c> <c>then</c> <c>prints</c> <c>it</c> <c>to</c>
# <c>prove</c> <c>that</c> <c>step</c> <c>is</c> <c>working</c>
# <c>but</c> <c>the</c> <c>problem</c> <c>is</c>, <c>I</c>'<c>m</c> <c>always</c> <c>updating</c> <c>a</c> <c>reference</c> <c>to</c> '<c>x</c>' <c>and</c> <c>what</c> <c>I</c> <c>want</c> <c>to</c> <c>add</c> <c>to</c>
# <c>simplelist</c> <c>is</c> <c>a</c> <c>new</c> <c>instance</c> <c>of</c> <c>x</c> <c>that</c> <c>contains</c> <c>the</c> <c>updated</c> <c>attribute</c>

<c>x</c><c>.</c><c>attr1</c><c>=</c> '<c>*</c><c>Bob</c><c>*</c> '<c>*</c> <c>count</c>
<c>print</c> ""<c>Loop</c> <c>Count</c>: <c>%</c><c>s</c> <c>Attribute</c> <c>Value</c> <c>%</c><c>s</c>"" <c>%</c> (<c>count</c>, <c>x</c><c>.</c><c>attr1</c>)
<c>simpleList</c><c>.</c><c>append(</c><c>x</c>)

<c>print</c> '<c>-</c>'<c>*</c><c>20</c>
# <c>And</c> <c>here</c> <c>I</c> <c>print</c> <c>out</c> <c>each</c> <c>instance</c> <c>of</c> <c>the</c> <c>object</c> <c>stored</c> <c>in</c> <c>the</c> <c>list</c> '<c>simpleList</c>'
# <c>and</c> <c>the</c> <c>problem</c> <c>surfaces</c><c>.</c>  <c>Every</c> <c>element</c> <c>of</c> '<c>simpleList</c>' <c>contains</c> <c>the</c> <c>same</c>      <c>attribute</c> <c>value</c>

<c>y</c> <c>=</c> <c>SimpleClass</c>
<c>print</c> ""<c>Reading</c> <c>the</c> <c>attributes</c> <c>from</c> <c>the</c> <c>objects</c> <c>in</c> <c>the</c> <c>list</c>""
<c>for</c> <c>count</c> <c>in</c> <c>range(</c><c>0</c>,<c>4</c>):
    <c>y</c> <c>=</c> <c>simpleList</c>[<c>count</c>]
    <c>print</c> <c>y</c><c>.</c><c>attr1</c>
</code>

<t>So</t> <t>how</t> <t>do</t> <t>I</t> (<t>append</t>, <t>extend</t>, <t>copy</t> <t>or</t> <t>whatever</t>) <t>the</t> <t>elements</t> <t>of</t> <t>simpleList</t> <t>so</t> <t>that</t> <t>each</t> <t>entry</t> <t>contains</t> <t>a</t> <t>different</t> <t>instance</t> <t>of</t> <t>the</t> <t>object</t> <t>instead</t> <t>of</t> <t>all</t> <t>pointing</t> <t>to</t> <t>the</t> <t>same</t> <t>one</t>?
"
354038|"<t>How</t> <t>do</t> <t>I</t> <t>check</t> <t>if</t> <t>a</t> <t>string</t> <t>is</t> <t>a</t> <t>number</t> (<t>float</t>)?"|"<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>possible</t> <t>way</t> <t>to</t> <t>check</t> <t>if</t> <t>a</t> <t>string</t> <t>can</t> <t>be</t> <t>represented</t> <t>as</t> <t>a</t> <t>number</t> <t>in</t> <t>Python</t>? 

<t>The</t> <t>function</t> <t>I</t> <t>currently</t> <t>have</t> <t>right</t> <t>now</t> <t>is</t>:

<code><c>def</c> <c>is_number(</c><c>s</c>):
    <c>try</c>:
        <c>float(</c><c>s</c>)
        <c>return</c> <c>True</c>
    <c>except</c> <c>ValueError</c>:
        <c>return</c> <c>False</c>
</code>

<t>Which</t>, <t>not</t> <t>only</t> <t>is</t> <t>ugly</t> <t>and</t> <t>slow</t>, <t>seems</t> <t>clunky</t>. <t>However</t> <t>I</t> <t>haven't</t> <t>found</t> <t>a</t> <t>better</t> <t>method</t> <t>because</t> <t>calling</t> <code><c>float</c></code> <t>in</t> <t>the</t> <t>main</t> <t>function</t> <t>is</t> <t>even</t> <t>worse</t>. 
"
354883|"<t>How</t> <t>do</t> <t>you</t> <t>return</t> <t>multiple</t> <t>values</t> <t>in</t> <t>Python</t>?"|"<t>The</t> <t>canonical</t> <t>way</t> <t>to</t> <t>return</t> <t>multiple</t> <t>values</t> <t>in</t> <t>languages</t> <t>that</t> <t>support</t> <t>it</t> <t>is</t> <t>often</t> <t>tupling</t>. 

<t>Option</t>: <t>Using</t> <t>a</t> <t>tuple</t>

<t>Consider</t> <t>this</t> <t>trivial</t> <t>example</t>:

<code><c>def</c> <c>f(</c><c>x</c>):
  <c>y0</c> <c>=</c> <c>x</c> <c>+</c> <c>1</c>
  <c>y1</c> <c>=</c> <c>x</c> <c>*</c> <c>3</c>
  <c>y2</c> <c>=</c> <c>y0</c> <c>**</c> <c>y3</c>
  <c>return</c> (<c>y0</c>,<c>y1</c>,<c>y2</c>)
</code>

<t>However</t>, <t>this</t> <t>quickly</t> <t>gets</t> <t>problematic</t> <t>as</t> <t>the</t> <t>number</t> <t>of</t> <t>values</t> <t>returned</t> <t>increases</t>. <t>What</t> <t>if</t> <t>you</t> <t>want</t> <t>to</t> <t>return</t> <t>four</t> <t>or</t> <t>five</t> <t>values</t>? <t>Sure</t>, <t>you</t> <t>could</t> <t>keep</t> <t>tupling</t> <t>them</t>, <t>but</t> <t>it</t> <t>gets</t> <t>easy</t> <t>to</t> <t>forget</t> <t>which</t> <t>value</t> <t>is</t> <t>where</t>. <t>It's</t> <t>also</t> <t>rather</t> <t>ugly</t> <t>to</t> <t>unpack</t> <t>them</t> <t>wherever</t> <t>you</t> <t>want</t> <t>to</t> <t>receive</t> <t>them</t>.

<t>Option</t>: <t>Using</t> <t>a</t> <t>dictionary</t>

<t>The</t> <t>next</t> <t>logical</t> <t>step</t> <t>seems</t> <t>to</t> <t>be</t> <t>to</t> <t>introduce</t> <t>some</t> <t>sort</t> <t>of</t> '<t>record</t> <t>notation</t>'. <t>In</t> <t>python</t>, <t>the</t> <t>obvious</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t> <t>is</t> <t>by</t> <t>means</t> <t>of</t> <t>a</t> <code><c>dict</c></code>. 

<t>Consider</t> <t>the</t> <t>following</t>:

<code><c>def</c> <c>g(</c><c>x</c>):
  <c>y0</c> <c>=</c> <c>x</c> <c>+</c> <c>1</c>
  <c>y1</c> <c>=</c> <c>x</c> <c>*</c> <c>3</c>
  <c>y2</c> <c>=</c> <c>y0</c> <c>**</c> <c>y3</c>
  <c>return</c> {'<c>y0</c>':<c>y0</c>, '<c>y1</c>':<c>y1</c> ,'<c>y2</c>':<c>y2</c> }
</code>

(<t>edit-</t> <t>Just</t> <t>to</t> <t>be</t> <t>clear</t>, <t>y0</t>, <t>y1</t> <t>and</t> <t>y2</t> <t>are</t> <t>just</t> <t>meant</t> <t>as</t> <t>abstract</t> <t>identifiers</t>. <t>As</t> <t>pointed</t> <t>out</t>, <t>in</t> <t>practice</t> <t>you'd</t> <t>use</t> <t>meaningful</t> <t>identifiers</t>)

<t>Now</t>, <t>we</t> <t>have</t> <t>a</t> <t>mechanism</t> <t>whereby</t> <t>we</t> <t>can</t> <t>project</t> <t>out</t> <t>a</t> <t>particular</t> <t>member</t> <t>of</t> <t>the</t> <t>returned</t> <t>object</t>. <t>For</t> <t>example</t>, 

<code><c>result</c>['<c>y0</c>']
</code>

<t>Option</t>: <t>Using</t> <t>a</t> <t>class</t>

<t>However</t>, <t>there</t> <t>is</t> <t>another</t> <t>option</t>. <t>We</t> <t>could</t> <t>instead</t> <t>return</t> <t>a</t> <t>specialized</t> <t>structure</t>. <t>I've</t> <t>framed</t> <t>this</t> <t>in</t> <t>the</t> <t>context</t> <t>of</t> <t>Python</t>, <t>but</t> <t>I'm</t> <t>sure</t> <t>it</t> <t>applies</t> <t>to</t> <t>other</t> <t>languages</t> <t>as</t> <t>well</t>. <t>Indeed</t>, <t>if</t> <t>you</t> <t>were</t> <t>working</t> <t>in</t> <t>C</t> <t>this</t> <t>might</t> <t>very</t> <t>well</t> <t>be</t> <t>your</t> <t>only</t> <t>option</t>. <t>Here</t> <t>goes</t>:

<code><c>class</c> <c>ReturnValue(</c><c>object</c>):
  <c>def</c> <c>__init__(</c><c>self</c>, <c>y0</c>, <c>y1</c>, <c>y2</c>):
     <c>self</c><c>.</c><c>y0</c> <c>=</c> <c>y0</c>
     <c>self</c><c>.</c><c>y1</c> <c>=</c> <c>y1</c>
     <c>self</c><c>.</c><c>y2</c> <c>=</c> <c>y2</c>

<c>def</c> <c>g(</c><c>x</c>):
  <c>y0</c> <c>=</c> <c>x</c> <c>+</c> <c>1</c>
  <c>y1</c> <c>=</c> <c>x</c> <c>*</c> <c>3</c>
  <c>y2</c> <c>=</c> <c>y0</c> <c>**</c> <c>y3</c>
  <c>return</c> <c>ReturnValue(</c><c>y0</c>, <c>y1</c>, <c>y2</c>)
</code>

<t>In</t> <t>python</t> <t>the</t> <t>previous</t> <t>two</t> <t>are</t> <t>perhaps</t> <t>very</t> <t>similar</t> <t>in</t> <t>terms</t> <t>of</t> <t>plumbing-</t> <t>After</t> <t>all</t> <code>{ <c>y0</c>, <c>y1</c>, <c>y2</c> }</code> <t>just</t> <t>end</t> <t>up</t> <t>being</t> <t>entries</t> <t>in</t> <t>the</t> <t>internal</t> <code><c>__dict__</c></code> <t>of</t> <t>the</t> <code><c>ReturnValue</c></code>.

<t>There</t> <t>is</t> <t>one</t> <t>additional</t> <t>feature</t> <t>provided</t> <t>by</t> <t>Python</t> <t>though</t> <t>for</t> <t>tiny</t> <t>objects</t>, <t>the</t> <code><c>__slots__</c></code> <t>attribute</t>. <t>The</t> <t>class</t> <t>could</t> <t>be</t> <t>expressed</t> <t>as</t>:

<code><c>class</c> <c>ReturnValue(</c><c>object</c>):
  <c>__slots__</c> <c>=</c> [""<c>y0</c>"", ""<c>y1</c>"", ""<c>y2</c>""]
  <c>def</c> <c>__init__(</c><c>self</c>, <c>y0</c>, <c>y1</c>, <c>y2</c>):
     <c>self</c><c>.</c><c>y0</c> <c>=</c> <c>y0</c>
     <c>self</c><c>.</c><c>y1</c> <c>=</c> <c>y1</c>
     <c>self</c><c>.</c><c>y2</c> <c>=</c> <c>y2</c>
</code>

<t>From</t> <t>the</t> <t>Python Reference</t> <t>Manual</t>:


  <t>The</t> <code><c>__slots__</c></code> <t>declaration</t> <t>takes</t> <t>a</t> <t>sequence</t> <t>of</t> <t>instance</t> <t>variables</t> <t>and</t> <t>reserves</t> <t>just</t> <t>enough</t> <t>space</t> <t>in</t> <t>each</t> <t>instance</t> <t>to</t> <t>hold</t> <t>a</t> <t>value</t> <t>for</t> <t>each</t> <t>variable</t>. <t>Space</t> <t>is</t> <t>saved</t> <t>because</t> <code><c>__dict__</c></code> <t>is</t> <t>not</t> <t>created</t> <t>for</t> <t>each</t> <t>instance</t>.


<t>Option</t>: <t>Using</t> <t>a</t> <t>list</t>

<t>Another</t> <t>suggestion</t> <t>which</t> <t>I'd</t> <t>overlooked</t> <t>comes</t> <t>from</t> <t>Bill</t> <t>the</t> <t>Lizard</t>:

<code><c>def</c> <c>h(</c><c>x</c>):
  <c>result</c> <c>=</c> [<c>x</c> <c>+</c> <c>1</c>]
  <c>result</c><c>.</c><c>append(</c><c>x</c> <c>*</c> <c>3</c>)
  <c>result</c><c>.</c><c>append(</c><c>y0</c> <c>**</c> <c>y3</c>)
  <c>return</c> <c>result</c>
</code>

<t>This</t> <t>is</t> <t>my</t> <t>least</t> <t>favorite</t> <t>method</t> <t>though</t>. <t>I</t> <t>suppose</t> <t>I'm</t> <t>tainted</t> <t>by</t> <t>exposure</t> <t>to</t> <t>Haskell</t>, <t>but</t> <t>the</t> <t>idea</t> <t>of</t> <t>mixed-type</t> <t>lists</t> <t>has</t> <t>always</t> <t>felt</t> <t>uncomfortable</t> <t>to</t> <t>me</t>. <t>In</t> <t>this</t> <t>particular</t> <t>example</t> <t>the</t> <t>list</t> <t>is</t> <t>-not-</t> <t>mixed</t> <t>type</t>, <t>but</t> <t>it</t> <t>conceivably</t> <t>could</t> <t>be</t>. <t>A</t> <t>list</t> <t>used</t> <t>in</t> <t>this</t> <t>way</t> <t>really</t> <t>doesn't</t> <t>gain</t> <t>anything</t> <t>with</t> <t>respect</t> <t>to</t> <t>the</t> <t>tuple</t> <t>as</t> <t>far</t> <t>as</t> <t>I</t> <t>can</t> <t>tell</t>. <t>The</t> <t>only</t> <t>real</t> <t>difference</t> <t>between</t> <t>lists</t> <t>and</t> <t>tuples</t> <t>in</t> <t>Python</t> <t>is</t> <t>that</t> <t>lists</t> <t>are</t> <t>mutable</t>, <t>wheras</t> <t>tuples</t> <t>are</t> <t>not</t>. <t>I</t> <t>personally</t> <t>tend</t> <t>to</t> <t>carry</t> <t>over</t> <t>the</t> <t>conventions</t> <t>from</t> <t>functional</t> <t>programming</t>: <t>use</t> <t>lists</t> <t>for</t> <t>any</t> <t>number</t> <t>of</t> <t>elements</t> <t>of</t> <t>the</t> <t>same</t> <t>type</t>, <t>and</t> <t>tuples</t> <t>for</t> <t>a</t> <t>fixed</t> <t>number</t> <t>of</t> <t>elements</t> <t>of</t> <t>predetermined</t> <t>types</t>.

<t>Question</t>

<t>After</t> <t>the</t> <t>lengthy</t> <t>preamble</t>, <t>comes</t> <t>the</t> <t>inevitable</t> <t>question</t>. <t>Which</t> <t>method</t> (<t>do</t> <t>you</t> <t>think</t>) <t>is</t> <t>best</t>?

<t>I've</t> <t>typically</t> <t>found</t> <t>myself</t> <t>going</t> <t>the</t> <t>dictionary</t> <t>route</t> <t>because</t> <t>it</t> <t>involves</t> <t>less</t> <t>set-up</t> <t>work</t>. <t>From</t> <t>a</t> <t>types</t> <t>perspective</t> <t>however</t>, <t>you</t> <t>might</t> <t>be</t> <t>better</t> <t>off</t> <t>going</t> <t>the</t> <t>class</t> <t>route</t>, <t>since</t> <t>that</t> <t>may</t> <t>help</t> <t>you</t> <t>avoid</t> <t>confusing</t> <t>what</t> <t>a</t> <t>dictionary</t> <t>represents</t>. <t>On</t> <t>the</t> <t>other</t> <t>hand</t>, <t>there</t> <t>are</t> <t>some</t> <t>in</t> <t>the</t> <t>Python</t> <t>community</t> <t>that</t> <t>feel</t> <t>implied</t> <t>interfaces</t> <t>should</t> <t>be</t> <t>preferred</t> <t>to</t> <t>explicit</t> <t>interfaces</t>, <t>at</t> <t>which</t> <t>point</t> <t>the</t> <t>type</t> <t>of</t> <t>the</t> <t>object</t> <t>really</t> <t>isn't</t> <t>relevant</t>, <t>since</t> <t>you're</t> <t>basically</t> <t>relying</t> <t>on</t> <t>the</t> <t>convention</t> <t>that</t> <t>the</t> <t>same</t> <t>attribute</t> <t>will</t> <t>always</t> <t>have</t> <t>the</t> <t>same</t> <t>meaning</t>. 

<t>So</t>, <t>how</t> <t>do</t> <t>-you-</t> <t>return</t> <t>multiple</t> <t>values</t> <t>in</t> <t>Python</t>?
"
364621|"<t>How</t> <t>to</t> <t>get</t> <t>item's</t> <t>position</t> <t>in</t> <t>a</t> <t>list</t>?"|"<t>I</t> <t>am</t> <t>iterating</t> <t>over</t> <t>a</t> <t>list</t> <t>and</t> <t>I</t> <t>want</t> <t>to</t> <t>print</t> <t>out</t> <t>the</t> <t>index</t> <t>of</t> <t>the</t> <t>item</t> <t>if</t> <t>it</t> <t>meets</t> <t>a</t> <t>certain</t> <t>condition</t>. <t>How</t> <t>would</t> <t>I</t> <t>do</t> <t>this</t>?

<t>Example</t>:  

<code><c>testlist</c> <c>=</c> [<c>1</c>,<c>2</c>,<c>3</c>,<c>5</c>,<c>3</c>,<c>1</c>,<c>2</c>,<c>1</c>,<c>6</c>]
<c>for</c> <c>item</c> <c>in</c> <c>testlist</c>:
    <c>if</c> <c>item</c> <c>==</c> <c>1</c>:
        <c>print</c> <c>position</c>
</code>
"
372042|"<t>Difference</t> <t>between</t> <t>abstract</t> <t>class</t> <t>and</t> <t>interface</t> <t>in</t> <t>Python</t>"|"<t>What</t> <t>is</t> <t>the</t> <t>difference</t> <t>between</t> <t>abstract</t> <t>class</t> <t>and</t> <t>interface</t> <t>in</t> <t>Python</t>?
"
372885|"<t>How</t> <t>do</t> <t>I</t> <t>connect</t> <t>to</t> <t>a</t> <t>MySQL Database</t> <t>in</t> <t>Python</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>connect</t> <t>to</t> <t>a</t> <t>MySQL</t> <t>database</t> <t>using</t> <t>a</t> <t>python</t> <t>program</t>?
"
378927|"<t>What</t> <t>is</t> <t>the</t> <t>best</t> (<t>idiomatic</t>) <t>way</t> <t>to</t> <t>check</t> <t>the</t> <t>type</t> <t>of</t> <t>a</t> <t>Python</t> <t>variable</t>?"|"<t>I</t> <t>need</t> <t>to</t> <t>know</t> <t>if</t> <t>a</t> <t>variable</t> <t>in</t> <t>Python</t> <t>is</t> <t>a</t> <t>string</t> <t>or</t> <t>a</t> <t>dict</t>.  <t>Is</t> <t>there</t> <t>anything</t> <t>wrong</t> <t>with</t> <t>the</t> <t>following</t> <t>code</t>?

<code><c>if</c> <c>type(</c><c>x</c>) <c>==</c> <c>type(</c><c>str(</c>)):
    <c>do_something_with_a_string(</c><c>x</c>)
<c>elif</c> <c>type(</c><c>x</c>) <c>==</c> <c>type(</c><c>dict(</c>)):
    <c>do_somethting_with_a_dict(</c><c>x</c>)
<c>else</c>:
    <c>raise</c> <c>ValueError</c>
</code>

<t>Update</t>: <t>I</t> <t>accepted</t> <t>avisser's</t> <t>answer</t> (<t>though</t> <t>I</t> <t>will</t> <t>change</t> <t>my</t> <t>mind</t> <t>if</t> <t>someone</t> <t>explains</t> <t>why</t> <code><c>isinstance</c></code> <t>is</t> <t>preferred</t> <t>over</t> <code><c>type(</c><c>x</c>) <c>is</c></code>).

<t>But</t> <t>thanks</t> <t>to</t> <t>nakedfanatic</t> <t>for</t> <t>reminding</t> <t>me</t> <t>that</t> <t>it's</t> <t>often</t> <t>cleaner</t> <t>to</t> <t>use</t> <t>a</t> <t>dict</t> (<t>as</t> <t>a</t> <t>case</t> <t>statement</t>) <t>than</t> <t>an</t> <t>if/elif/else</t> <t>series</t>.

<t>Let</t> <t>me</t> <t>elaborate</t> <t>on</t> <t>my</t> <t>use</t> <t>case</t>.  <t>If</t> <t>a</t> <t>variable</t> <t>is</t> <t>a</t> <t>string</t>, <t>I</t> <t>need</t> <t>to</t> <t>put</t> <t>it</t> <t>in</t> <t>a</t> <t>list</t>.  <t>If</t> <t>it's</t> <t>a</t> <t>dict</t>, <t>I</t> <t>need</t> <t>a</t> <t>list</t> <t>of</t> <t>the</t> <t>unique</t> <t>values</t>.  <t>Here's</t> <t>what</t> <t>I</t> <t>came</t> <t>up</t> <t>with</t>:

<code><c>def</c> <c>value_list(</c><c>x</c>):
    <c>cases</c> <c>=</c> {<c>str</c>: <c>lambda</c> <c>t</c>: [<c>t</c>],
             <c>dict</c>: <c>lambda</c> <c>t</c>: <c>list(</c><c>set(</c><c>t</c><c>.</c><c>values(</c>)))}
    <c>try</c>:
        <c>return</c> <c>cases</c>[<c>type(</c><c>x</c>)](<c>x</c>)
    <c>except</c> <c>KeyError</c>:
        <c>return</c> <c>None</c>
</code>

<t>If</t> <code><c>isinstance</c></code> <t>is</t> <t>preferred</t>, <t>how</t> <t>would</t> <t>you</t> <t>write</t> <t>this</t> <code><c>value_list(</c>)</code> <t>function</t>?
"
379906|"<t>Parse String</t> <t>to</t> <t>Float</t> <t>or</t> <t>Int</t>"|"<t>In</t> <t>Python</t>, <t>how</t> <t>can</t> <t>I</t> <t>parse</t> <t>a</t> <t>numeric</t> <t>string</t> <t>like</t> <code>""<c>545.2222</c>""</code> <t>to</t> <t>its</t> <t>corresponding</t> <t>float</t> <t>value</t>, <code><c>542.2222</c></code>? <t>Or</t> <t>parse</t> <t>the</t> <t>string</t> <code>""<c>31</c>""</code> <t>to</t> <t>an</t> <t>integer</t>, <code><c>31</c></code>?

<t>I</t> <t>just</t> <t>want</t> <t>to</t> <t>know</t> <t>how</t> <t>to</t> <t>parse</t> <t>a</t> <t>float</t> <t>string</t> <t>to</t> <t>a</t> <t>float</t>, <t>and</t> (<t>separately</t>) <t>an</t> <t>int</t> <t>string</t> <t>to</t> <t>an</t> <t>int</t>.
"
394809|"<t>Does Python</t> <t>have</t> <t>a</t> <t>ternary</t> <t>conditional</t> <t>operator</t>?"|"<t>If Python</t> <t>does</t> <t>not</t> <t>have</t> <t>a</t> <t>ternary</t> <t>conditional</t> <t>operator</t>, <t>is</t> <t>it</t> <t>possible</t> <t>to</t> <t>simulate</t> <t>one</t> <t>using</t> <t>other</t> <t>language</t> <t>constructs</t>?
"
402504|"<t>How</t> <t>to</t> <t>determine</t> <t>a</t> <t>variable's</t> <t>type</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>see</t> <t>the</t> <t>type</t> <t>of</t> <t>a</t> <t>variable</t> <t>whether</t> <t>it</t> <t>is</t> <t>unsigned</t> <t>32</t> <t>bit</t>, <t>signed</t> <t>16</t> <t>bit</t>, <t>etc</t>.?

<t>How</t> <t>do</t> <t>I</t> <t>view</t> <t>it</t>?
"
403421|"<t>How</t> <t>to</t> <t>sort</t> <t>a</t> <t>list</t> <t>of</t> <t>objects</t> , <t>based</t> <t>on</t> <t>an</t> <t>attribute</t> <t>of</t> <t>the</t> <t>objects</t>?"|"<t>I've</t> <t>got</t> <t>a</t> <t>list</t> <t>of</t> <t>Python</t> <t>objects</t> <t>that</t> <t>I'd</t> <t>like</t> <t>to</t> <t>sort</t> <t>by</t> <t>an</t> <t>attribute</t> <t>of</t> <t>the</t> <t>objects</t> <t>themselves</t>.  <t>The</t> <t>list</t> <t>looks</t> <t>like</t>:

<code><c>&gt;&gt;&gt;</c> <c>ut</c>
[<c>&lt;</c><c>Tag</c>: <c>128</c><c>&gt;</c>, <c>&lt;</c><c>Tag</c>: <c>2008</c><c>&gt;</c>, <c>&lt;</c><c>Tag</c>: <c>&lt;&gt;</c>, <c>&lt;</c><c>Tag</c>: <c>actionscript</c><c>&gt;</c>, <c>&lt;</c><c>Tag</c>: <c>addresses</c><c>&gt;</c>,
 <c>&lt;</c><c>Tag</c>: <c>aes</c><c>&gt;</c>, <c>&lt;</c><c>Tag</c>: <c>ajax</c><c>&gt;</c> ...]
</code>

<t>Each</t> <t>object</t> <t>has</t> <t>a</t> <t>count</t>:

<code><c>&gt;&gt;&gt;</c> <c>ut</c>[<c>1</c>]<c>.</c><c>count</c>
<c>1</c><c>L</c>
</code>

<t>I</t> <t>need</t> <t>to</t> <t>sort</t> <t>the</t> <t>list</t> <t>by</t> <t>number</t> <t>of</t> <t>counts</t> <t>descending</t>.

<t>I've</t> <t>seen</t> <t>several</t> <t>methods</t> <t>for</t> <t>this</t>, <t>but</t> <t>I'm</t> <t>looking</t> <t>for</t> <t>best</t> <t>practice</t> <t>in</t> <t>Python</t>.
"
415511|"<t>How</t> <t>to</t> <t>get</t> <t>current</t> <t>time</t> <t>in</t> <t>Python</t>"|"<t>What</t> <t>is</t> <t>the</t> <t>module/method</t> <t>used</t> <t>to</t> <t>get</t> <t>current</t> <t>time</t>?
"
419163|"<t>What</t> <t>does</t> <t>if</t> <t>__name__</t> <t>==</t> ""<t>__main__</t>"": <t>do</t>?"|"<t>What</t> <t>does</t> <t>the</t> <code><c>if</c> <c>__name__</c> <c>==</c> ""<c>__main__</c>"":</code> <t>do</t>?

<code># <c>Threading</c> <c>example</c>
<c>import</c> <c>time</c>, <c>thread</c>

<c>def</c> <c>myfunction(</c><c>string</c>, <c>sleeptime</c>, <c>lock</c>, <c>*</c><c>args</c>):
    <c>while</c> <c>1</c>:
        <c>lock</c><c>.</c><c>acquire(</c>)
        <c>time</c><c>.</c><c>sleep(</c><c>sleeptime</c>)
        <c>lock</c><c>.</c><c>release(</c>)
        <c>time</c><c>.</c><c>sleep(</c><c>sleeptime</c>)
<c>if</c> <c>__name__</c> <c>==</c> ""<c>__main__</c>"":
    <c>lock</c> <c>=</c> <c>thread</c><c>.</c><c>allocate_lock(</c>)
    <c>thread</c><c>.</c><c>start_new_thread(</c><c>myfunction</c>, (""<c>Thread</c> #: <c>1</c>"", <c>2</c>, <c>lock</c>))
    <c>thread</c><c>.</c><c>start_new_thread(</c><c>myfunction</c>, (""<c>Thread</c> #: <c>2</c>"", <c>2</c>, <c>lock</c>))
</code>
"
423379|"<t>Using</t> <t>global</t> <t>variables</t> <t>in</t> <t>a</t> <t>function</t> <t>other</t> <t>than</t> <t>the</t> <t>one</t> <t>that</t> <t>created</t> <t>them</t>"|"<t>If</t> <t>I</t> <t>create</t> <t>a</t> <t>global</t> <t>variable</t> <t>in</t> <t>one</t> <t>function</t>, <t>how</t> <t>can</t> <t>I</t> <t>use</t> <t>that</t> <t>variable</t> <t>in</t> <t>another</t> <t>function</t>?
<t>Do</t> <t>I</t> <t>need</t> <t>to</t> <t>store</t> <t>the</t> <t>global</t> <t>variable</t> <t>in</t> <t>a</t> <t>local</t> <t>variable</t> <t>of</t> <t>the</t> <t>function</t> <t>which</t> <t>needs</t> <t>its</t> <t>access</t>?
"
431684|"<t>How</t> <t>do</t> <t>I</t> ""<t>cd</t>"" <t>in</t> <t>Python</t>?"|"<code><c>cd</c></code> <t>as</t> <t>in</t> <t>the</t> <t>shell</t> <t>command</t> <t>to</t> <t>change</t> <t>the</t> <t>working</t> <t>directory</t>.

<t>How</t> <t>do</t> <t>I</t> <t>change</t> <t>the</t> <t>current</t> <t>working</t> <t>directory</t> <t>in</t> <t>Python</t>?
"
432112|"<t>Is</t> <t>there</t> <t>a</t> <t>Numpy</t> <t>function</t> <t>to</t> <t>return</t> <t>the</t> <t>first</t> <t>index</t> <t>of</t> <t>something</t> <t>in</t> <t>an</t> <t>array</t>?"|"<t>I</t> <t>know</t> <t>there</t> <t>is</t> <t>a</t> <t>method</t> <t>for</t> <t>python</t> <t>list</t> <t>to</t> <t>return</t> <t>the</t> <t>first</t> <t>index</t> <t>of</t> <t>something</t>

<code><c>&gt;&gt;&gt;</c> <c>l</c> <c>=</c> <c>list(</c><c>1</c>, <c>2</c>, <c>3</c>)
<c>&gt;&gt;&gt;</c> <c>l</c><c>.</c><c>index(</c><c>2</c>)
<c>1</c>
</code>

<t>Is</t> <t>there</t> <t>something</t> <t>like</t> <t>that</t> <t>for</t> <t>numpy</t> <t>arrays</t>?
"
432842|"<t>How</t> <t>do</t> <t>you</t> <t>get</t> <t>the</t> <t>logical</t> <t>xor</t> <t>of</t> <t>two</t> <t>variables</t> <t>in</t> <t>Python</t>?"|"<t>How</t> <t>do</t> <t>you</t> <t>get</t> <t>the</t> <t>logical</t> <t>xor</t> <t>of</t> <t>two</t> <t>variables</t> <t>in</t> <t>Python</t>?

<t>For</t> <t>example</t>, <t>I</t> <t>have</t> <t>two</t> <t>variables</t> <t>that</t> <t>I</t> <t>expect</t> <t>to</t> <t>be</t> <t>strings</t>. <t>I</t> <t>want</t> <t>to</t> <t>test</t> <t>that</t> <t>only</t> <t>one</t> <t>of</t> <t>them</t> <t>contains</t> <t>a</t> <t>True</t> <t>value</t> (<t>is</t> <t>not</t> <t>None</t> <t>or</t> <t>the</t> <t>empty</t> <t>string</t>):

<code><c>str1</c> <c>=</c> <c>raw_input(</c>""<c>Enter</c> <c>string</c> <c>one</c>:"")
<c>str2</c> <c>=</c> <c>raw_input(</c>""<c>Enter</c> <c>string</c> <c>two</c>:"")
<c>if</c> <c>logical_xor(</c><c>str1</c>, <c>str2</c>):
    <c>print</c> ""<c>ok</c>""
<c>else</c>:
    <c>print</c> ""<c>bad</c>""
</code>

<t>The</t> <code><c>^</c></code> <t>operator</t> <t>seems</t> <t>to</t> <t>be</t> <t>bitwise</t>, <t>and</t> <t>not</t> <t>defined</t> <t>on</t> <t>all</t> <t>objects</t>:

<code><c>&gt;&gt;&gt;</c> <c>1</c> <c>^</c> <c>1</c>
<c>0</c>
<c>&gt;&gt;&gt;</c> <c>2</c> <c>^</c> <c>1</c>
<c>3</c>
<c>&gt;&gt;&gt;</c> ""<c>abc</c>"" <c>^</c> """"
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>&lt;</c><c>stdin</c><c>&gt;</c>"", <c>line</c> <c>1</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
<c>TypeError</c>: <c>unsupported</c> <c>operand</c> <c>type(</c><c>s</c>) <c>for</c> <c>^</c>: '<c>str</c>' <c>and</c> '<c>str</c>'
</code>
"
437589|"<t>How</t> <t>do</t> <t>I</t> <t>unload</t> (<t>reload</t>) <t>a</t> <t>Python</t> <t>module</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>long-running</t> <t>Python</t> <t>server</t> <t>and</t> <t>would</t> <t>like</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>upgrade</t> <t>a</t> <t>service</t> <t>without</t> <t>restarting</t> <t>the</t> <t>server</t>. <t>What's</t> <t>the</t> <t>best</t> <t>way</t> <t>do</t> <t>do</t> <t>this</t>?

<code><c>if</c> <c>foo</c><c>.</c><c>py</c> <c>has</c> <c>changed</c>:
    <c>unimport</c> <c>foo</c>  <c>&lt;</c><c>-</c><c>-</c> <c>How</c> <c>do</c> <c>I</c> <c>do</c> <c>this</c><c>?</c>
    <c>import</c> <c>foo</c>
    <c>myfoo</c> <c>=</c> <c>foo</c><c>.</c><c>Foo(</c>)
</code>
"
441147|"<t>How</t> <t>can</t> <t>I</t> <t>subtract</t> <t>a</t> <t>day</t> <t>from</t> <t>a</t> <t>Python</t> <t>date</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>Python</t> <code><c>datetime</c><c>.</c><c>datetime</c></code> <t>object</t>. <t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>subtract</t> <t>one</t> <t>day</t>?
"
446052|"<t>How</t> <t>can</t> <t>I</t> <t>check</t> <t>for</t> <t>Python</t> <t>version</t> <t>in</t> <t>a</t> <t>program</t> <t>that</t> <t>uses</t> <t>new</t> <t>language</t> <t>features</t>?"|"<t>If</t> <t>I</t> <t>have</t> <t>a</t> <t>Python</t> <t>script</t> <t>that</t> <t>requires</t> <t>at</t> <t>least</t> <t>a</t> <t>particular</t>
<t>version</t> <t>of</t> <t>Python</t>, <t>what</t> <t>is</t> <t>the</t> <t>correct</t> <t>way</t> <t>to</t> <t>fail</t> <t>gracefully</t>
<t>when</t> <t>an</t> <t>earlier</t> <t>version</t> <t>of</t> <t>Python</t> <t>is</t> <t>used</t> <t>to</t> <t>launch</t> <t>the</t> <t>script</t>?

<t>How</t> <t>do</t> <t>I</t> <t>get</t> <t>control</t> <t>early</t> <t>enough</t> <t>to</t> <t>issue</t> <t>an</t> <t>error</t> <t>message</t>
<t>and</t> <t>exit</t>?

<t>For</t> <t>example</t>, <t>I</t> <t>have</t> <t>a</t> <t>program</t> <t>that</t> <t>uses</t> <t>the</t> <t>ternery</t> <t>operator</t> (<t>new</t> <t>in</t> <t>2.5</t>) <t>and</t> ""<t>with</t>"" <t>blocks</t>
(<t>new</t> <t>in</t> <t>2.6).</t>  <t>I</t> <t>wrote</t> <t>a</t> <t>simple</t> <t>little</t> <t>interpreter-version</t>
<t>checker</t> <t>routine</t> <t>which</t> <t>is</t> <t>the</t> <t>first</t> <t>thing</t> <t>the</t> <t>script</t> <t>would</t>
<t>call</t> <t>...</t> <t>except</t> <t>it</t> <t>doesn't</t> <t>get</t> <t>that</t> <t>far</t>. <t>Instead</t>, <t>the</t>
<t>script</t> <t>fails</t> <t>during</t> <t>python</t> <t>compilation</t>, <t>before</t> <t>my</t> <t>routines</t>
<t>are</t> <t>even</t> <t>called</t>. <t>Thus</t> <t>the</t> <t>user</t> <t>of</t> <t>the</t> <t>script</t> <t>sees</t> <t>some</t> <t>very</t>
<t>obscure</t> <t>synax</t> <t>error</t> <t>tracebacks</t> <t>-</t> <t>which</t> <t>pretty</t> <t>much</t> <t>require</t>
<t>an</t> <t>expert</t> <t>to</t> <t>deduce</t> <t>that</t> <t>it</t> <t>is</t> <t>simply</t> <t>the</t> <t>case</t> <t>of</t> <t>running</t>
<t>the</t> <t>wrong</t> <t>version</t> <t>of</t> <t>Python</t>.

<t>I</t> <t>know</t> <t>how</t> <t>to</t> <t>check</t> <t>the</t> <t>version</t> <t>of</t> <t>Python</t>. <t>The</t> <t>issue</t> <t>is</t> <t>that</t> <t>some</t> <t>syntax</t> <t>is</t> <t>illegal</t> <t>in</t> <t>older</t> <t>versions</t> <t>of</t> <t>Python</t>. <t>Consider</t> <t>this</t> <t>program</t>:

<code><c>import</c> <c>sys</c>
<c>if</c> <c>sys</c><c>.</c><c>version_info</c> <c>&lt;</c> (<c>2</c>, <c>4</c>):
    <c>raise</c> ""<c>must</c> <c>use</c> <c>python</c> <c>2.5</c> <c>or</c> <c>greater</c>""
<c>else</c>:
    # <c>syntax</c> <c>error</c> <c>in</c> <c>2.4</c>, <c>ok</c> <c>in</c> <c>2.5</c>
    <c>x</c> <c>=</c> <c>1</c> <c>if</c> <c>True</c> <c>else</c> <c>2</c>
    <c>print</c> <c>x</c>
</code>

<t>When</t> <t>run</t> <t>under</t> <t>2.4,</t> <t>I</t> <t>want</t> <t>this</t> <t>result</t>

<code><c>$</c> <c>~</c><c>/bin/python2.4</c> <c>tern</c><c>.</c><c>py</c> 
<c>must</c> <c>use</c> <c>python</c> <c>2.5</c> <c>or</c> <c>greater</c>
</code>

<t>and</t> <t>not</t> <t>this</t> <t>result</t>:

<code><c>$</c> <c>~</c><c>/bin/python2.4</c> <c>tern</c><c>.</c><c>py</c> 
  <c>File</c> ""<c>tern</c><c>.</c><c>py</c>"", <c>line</c> <c>5</c>
    <c>x</c> <c>=</c> <c>1</c> <c>if</c> <c>True</c> <c>else</c> <c>2</c>
           <c>^</c>
<c>SyntaxError</c>: <c>invalid</c> <c>syntax</c>
</code>

(<t>Channeling</t> <t>for</t> <t>a</t> <t>coworker</t>.)
"
448271|"<t>What</t> <t>is</t> <t>__init__</t>.<t>py</t> <t>for</t>?"|"<t>What</t> <t>is</t> <code><c>__init__</c><c>.</c><c>py</c></code> <t>for</t> <t>in</t> <t>a</t> <t>Python</t> <t>source</t> <t>directory</t>?
"
449560|"<t>How</t> <t>do</t> <t>I</t> <t>determine</t> <t>the</t> <t>size</t> <t>of</t> <t>an</t> <t>object</t> <t>in</t> <t>Python</t>?"|"<t>In</t> <t>C</t>, <t>we</t> <t>can</t> <t>find</t> <t>the</t> <t>size</t> <t>of</t> <t>an</t> <code><c>int</c></code>, <code><c>char</c></code>, <t>etc</t>. <t>I</t> <t>want</t> <t>to</t> <t>know</t> <t>how</t> <t>to</t> <t>get</t> <t>size</t> <t>of</t> <t>objects</t> <t>like</t> <t>a</t> <t>string</t>, <t>integer</t>, <t>etc</t>. <t>in</t> <t>Python</t>.

<t>Related</t> <t>question</t>: <t>How</t> <t>many</t> <t>bytes</t> <t>per</t> <t>element</t> <t>are</t> <t>there</t> <t>in</t> <t>a</t> <t>Python</t> <t>list</t> (<t>tuple</t>)?

<t>I</t> <t>am</t> <t>using</t> <t>an</t> <t>XML</t> <t>file</t> <t>which</t> <t>contains</t> <t>size</t> <t>fields</t> <t>that</t> <t>specify</t> <t>the</t> <t>size</t> <t>of</t> <t>value</t>. <t>I</t> <t>must</t> <t>parse</t> <t>this</t> <t>XML</t> <t>and</t> <t>do</t> <t>my</t> <t>coding</t>. <t>When</t> <t>I</t> <t>want</t> <t>to</t> <t>change</t> <t>the</t> <t>value</t> <t>of</t> <t>a</t> <t>particular</t> <t>field</t>, <t>I</t> <t>will</t> <t>check</t> <t>the</t> <t>size</t> <t>field</t> <t>of</t> <t>that</t> <t>value</t>. <t>Here</t> <t>I</t> <t>want</t> <t>to</t> <t>compare</t> <t>whether</t> <t>the</t> <t>new</t> <t>value</t> <t>that</t> <t>I'm</t> <t>gong</t> <t>to</t> <t>enter</t> <t>is</t> <t>of</t> <t>the</t> <t>same</t> <t>size</t> <t>as</t> <t>in</t> <t>XML</t>. <t>I</t> <t>need</t> <t>to</t> <t>check</t> <t>the</t> <t>size</t> <t>of</t> <t>new</t> <t>value</t>. <t>In</t> <t>case</t> <t>of</t> <t>a</t> <t>string</t> <t>I</t> <t>can</t> <t>say</t> <t>its</t> <t>the</t> <t>length</t>. <t>But</t> <t>in</t> <t>case</t> <t>of</t> <t>int</t>, <t>float</t>, <t>etc</t>. <t>I</t> <t>am</t> <t>confused</t>.
"
450285|"<t>Executing</t> <t>command</t> <t>line</t> <t>programs</t> <t>from</t> <t>within</t> <t>python</t>"|"
  <t>Possible</t> <t>Duplicate</t>:
  <t>Calling</t> <t>an</t> <t>external</t> <t>command</t> <t>in</t> <t>Python</t>  




<t>I'm</t> <t>building</t> <t>a</t> <t>web</t> <t>application</t> <t>that</t> <t>will</t> <t>is</t> <t>going</t> <t>to</t> <t>manipulate</t> (<t>pad</t>, <t>mix</t>, <t>merge</t> <t>etc</t>) <t>sound</t> <t>files</t> <t>and</t> <t>I've</t> <t>found</t> <t>that</t> <t>sox</t> <t>does</t> <t>exactly</t> <t>what</t> <t>I</t> <t>want</t>. <t>Sox</t> <t>is</t> <t>a</t> <t>linux</t> <t>command</t> <t>line</t> <t>program</t> <t>and</t> <t>I'm</t> <t>feeling</t> <t>a</t> <t>little</t> <t>uncomfortable</t> <t>with</t> <t>having</t> <t>the</t> <t>python</t> <t>web</t> <t>app</t> <t>starting</t> <t>new</t> <t>sox</t> <t>processes</t> <t>on</t> <t>my</t> <t>server</t> <t>on</t> <t>a</t> <t>per</t> <t>request</t> <t>basis</t>. 

<t>Example</t>:

<code><c>import</c> <c>os</c>
<c>os</c><c>.</c><c>system(</c>'<c>sox</c> <c>input</c><c>.</c><c>wav</c> <c>-</c><c>b</c> <c>24</c> <c>output</c><c>.</c><c>aiff</c> <c>rate</c> <c>-</c><c>v</c> <c>-</c><c>L</c> <c>-</c><c>b</c> <c>90</c> <c>48</c><c>k</c>')
</code>

<t>This</t> <t>whole</t> <t>setup</t> <t>seems</t> <t>a</t> <t>little</t> <t>unstable</t> <t>to</t> <t>me</t>.

<t>So</t> <t>my</t> <t>question</t> <t>is</t>, <t>what's</t> <t>the</t> <t>best</t> <t>practice</t> <t>for</t> <t>running</t> <t>command</t> <t>line</t> <t>programs</t> <t>from</t> <t>within</t>  <t>a</t> <t>python</t> (<t>or</t> <t>any</t> <t>scripting</t> <t>language</t>) <t>web</t> <t>app</t>?

<t>Message</t> <t>queues</t> <t>would</t> <t>be</t> <t>one</t> <t>thing</t> <t>to</t> <t>implement</t> <t>in</t> <t>order</t> <t>to</t> <t>get</t> <t>around</t> <t>the</t> <t>whole</t> <t>request</t> <t>response</t> <t>cycle</t>. <t>But</t> <t>is</t> <t>there</t> <t>other</t> <t>ways</t> <t>to</t> <t>make</t> <t>these</t> <t>things</t> <t>more</t> <t>elegant</t>?
"
454854|"<t>No</t> <t>module</t> <t>named</t> <t>MySQLdb</t>"|"<t>I</t> <t>am</t> <t>using</t> <t>Python</t> <t>version</t> <t>2.5.4</t> <t>and</t> <t>install</t> <t>MySQL</t> <t>version</t> <t>5.0</t> <t>and</t> <t>Django</t>. <t>Django</t> <t>is</t> <t>working</t> <t>fine</t> <t>with</t> <t>Python</t>, <t>but</t> <t>not</t> <t>MySQL</t>. <t>I</t> <t>am</t> <t>using</t> <t>it</t> <t>in</t> <t>Windows</t> <t>Vista</t>.
"
455612|"<t>Limiting</t> <t>floats</t> <t>to</t> <t>two</t> <t>decimal</t> <t>points</t>"|"<t>I</t> <t>want</t> <code><c>a</c></code> <t>to</t> <t>be</t> <t>rounded</t> <t>to</t> <t>13.95.</t>

<code><c>&gt;&gt;&gt;</c> <c>a</c>
<c>13.949999999999999</c>
<c>&gt;&gt;&gt;</c> <c>round(</c><c>a</c>, <c>2</c>)
<c>13.949999999999999</c>
</code>

<t>The</t> <code><c>round</c></code> <t>function</t> <t>does</t> <t>not</t> <t>work</t> <t>the</t> <t>way</t> <t>I</t> <t>expected</t>.
"
464864|"<t>How</t> <t>to</t> <t>get</t> <t>all</t> <t>possible</t> <t>combinations</t> <t>of</t> <t>a</t> <t>list’s</t> <t>elements</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>list</t> <t>with</t> <t>15</t> <t>numbers</t> <t>in</t>, <t>and</t> <t>I</t> <t>need</t> <t>to</t> <t>write</t> <t>some</t> <t>code</t> <t>that</t> <t>produces</t> <t>all</t> <t>32</t>,<t>768</t> <t>combinations</t> <t>of</t> <t>those</t> <t>numbers</t>. 

<t>I've</t> <t>found</t> <t>some</t> <t>code</t> (<t>by</t> <t>Googling</t>) <t>that</t> <t>apparently</t> <t>does</t> <t>what</t> <t>I'm</t> <t>looking</t> <t>for</t>, <t>but</t> <t>I</t> <t>found</t> <t>the</t> <t>code</t> <t>fairly</t> <t>opaque</t> <t>and</t> <t>am</t> <t>wary</t> <t>of</t> <t>using</t> <t>it</t>. <t>Plus</t> <t>I</t> <t>have</t> <t>a</t> <t>feeling</t> <t>there</t> <t>must</t> <t>be</t> <t>a</t> <t>more</t> <t>elegant</t> <t>solution</t>.

<t>The</t> <t>only</t> <t>thing</t> <t>that</t> <t>occurs</t> <t>to</t> <t>me</t> <t>would</t> <t>be</t> <t>to</t> <t>just</t> <t>loop</t> <t>through</t> <t>the</t> <t>decimal</t> <t>integers</t> <t>1–32768</t> <t>and</t> <t>convert</t> <t>those</t> <t>to</t> <t>binary</t>, <t>and</t> <t>use</t> <t>the</t> <t>binary</t> <t>representation</t> <t>as</t> <t>a</t> <t>filter</t> <t>to</t> <t>pick</t> <t>out</t> <t>the</t> <t>appropriate</t> <t>numbers</t>. 

<t>Does</t> <t>anyone</t> <t>know</t> <t>of</t> <t>a</t> <t>better</t> <t>way</t>? <t>Using</t> <code><c>map(</c>)</code>, <t>maybe</t>?
"
466345|"<t>Converting</t> <t>string</t> <t>into</t> <t>datetime</t>"|"<t>Short</t> <t>and</t> <t>simple</t>. <t>I've</t> <t>got</t> <t>a</t> <t>huge</t> <t>list</t> <t>of</t> <t>date-times</t> <t>like</t> <t>this</t> <t>as</t> <t>strings</t>:

<code><c>Jun</c> <c>1</c> <c>2005</c>  <c>1</c>:<c>33</c><c>PM</c>
<c>Aug</c> <c>28</c> <c>1999</c> <c>12</c>:<c>00</c><c>AM</c>
</code>

<t>I'm</t> <t>going</t> <t>to</t> <t>be</t> <t>shoving</t> <t>these</t> <t>back</t> <t>into</t> <t>proper</t> <t>datetime</t> <t>fields</t> <t>in</t> <t>a</t> <t>database</t> <t>so</t> <t>I</t> <t>need</t> <t>to</t> <t>magic</t> <t>them</t> <t>into</t> <t>real</t> <t>datetime</t> <t>objects</t>. 

<t>Any</t> <t>help</t> (<t>even</t> <t>if</t> <t>it's</t> <t>just</t> <t>a</t> <t>kick</t> <t>in</t> <t>the</t> <t>right</t> <t>direction</t>) <t>would</t> <t>be</t> <t>appreciated</t>.

<t>Edit</t>: <t>This</t> <t>is</t> <t>going</t> <t>through</t> <t>Django's ORM</t> <t>so</t> <t>I</t> <t>can't</t> <t>use</t> <t>SQL</t> <t>to</t> <t>do</t> <t>the</t> <t>conversion</t> <t>on</t> <t>insert</t>.
"
473099|"<t>Check</t> <t>if</t> <t>a</t> <t>given</t> <t>key</t> <t>already</t> <t>exists</t> <t>in</t> <t>a</t> <t>dictionary</t> <t>and</t> <t>increment</t> <t>it</t>"|"<t>Given</t> <t>a</t> <t>dictionary</t>, <t>how</t> <t>can</t> <t>I</t> <t>find</t> <t>out</t> <t>if</t> <t>a</t> <t>given</t> <t>key</t> <t>in</t> <t>that</t> <t>dictionary</t> <t>has</t> <t>already</t> <t>been</t> <t>set</t> <t>to</t> <t>a</t> <t>non-None</t> <t>value</t>?

<t>I.e.,</t> <t>I</t> <t>want</t> <t>to</t> <t>do</t> <t>this</t>:

<code><c>my_dict</c> <c>=</c> {}

<c>if</c> (<c>my_dict</c>[<c>key</c>] <c>!=</c> <c>None</c>):
  <c>my_dict</c>[<c>key</c>] <c>=</c> <c>1</c>
<c>else</c>:
  <c>my_dict</c>[<c>key</c>] <c>+=</c> <c>1</c>
</code>

<t>I.e.,</t> <t>I</t> <t>want</t> <t>to</t> <t>increment</t> <t>the</t> <t>value</t> <t>if</t> <t>there's</t> <t>already</t> <t>one</t> <t>there</t>, <t>or</t> <t>set</t> <t>it</t> <t>to</t> <t>1</t> <t>otherwise</t>.
"
477486|"<t>How</t> <t>to</t> <t>use</t> <t>a</t> <t>decimal</t> <t>range</t>() <t>step</t> <t>value</t>?"|"<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>step</t> <t>between</t> <t>0</t> <t>and</t> <t>1</t> <t>by</t> <t>0.1</t>? 

<t>I</t> <t>thought</t> <t>I</t> <t>could</t> <t>do</t> <t>it</t> <t>like</t> <t>the</t> <t>following</t>, <t>but</t> <t>it</t> <t>failed</t>:

<code><c>for</c> <c>i</c> <c>in</c> <c>range(</c><c>0</c>, <c>1</c>, <c>0.1</c>):
    <c>print</c> <c>i</c>
</code>

<t>Instead</t>, <t>it</t> <t>says</t> <t>that</t> <t>the</t> <t>step</t> <t>argument</t> <t>cannot</t> <t>be</t> <t>zero</t>, <t>which</t> <t>I</t> <t>did</t> <t>not</t> <t>expect</t>.
"
480214|"<t>How</t> <t>do</t> <t>you</t> <t>remove</t> <t>duplicates</t> <t>from</t> <t>a</t> <t>list</t> <t>in</t> <t>whilst</t> <t>preserving</t> <t>order</t>?"|"<t>Is</t> <t>there</t> <t>a</t> <t>built-in</t> <t>that</t> <t>removes</t> <t>duplicates</t> <t>from</t> <t>list</t> <t>in</t> <t>Python</t>, <t>whilst</t> <t>preserving</t> <t>order</t>? <t>I</t> <t>know</t> <t>that</t> <t>I</t> <t>can</t> <t>use</t> <t>a</t> <t>set</t> <t>to</t> <t>remove</t> <t>duplicates</t>, <t>but</t> <t>that</t> <t>destroys</t> <t>the</t> <t>original</t> <t>order</t>. <t>I</t> <t>also</t> <t>know</t> <t>that</t> <t>I</t> <t>can</t> <t>roll</t> <t>my</t> <t>own</t> <t>like</t> <t>this</t>:

<code><c>def</c> <c>uniq(</c><c>input</c>):
  <c>output</c> <c>=</c> []
  <c>for</c> <c>x</c> <c>in</c> <c>input</c>:
    <c>if</c> <c>x</c> <c>not</c> <c>in</c> <c>output</c>:
      <c>output</c><c>.</c><c>append(</c><c>x</c>)
  <c>return</c> <c>output</c>
</code>

(<t>Thanks</t> <t>to</t> <t>unwind</t> <t>for</t> <t>that</t> <t>code</t> <t>sample</t>.)

<t>But I'd</t> <t>like</t> <t>to</t> <t>avail</t> <t>myself</t> <t>of</t> <t>a</t> <t>built-in</t> <t>or</t> <t>a</t> <t>more</t> <t>Pythonic</t> <t>idiom</t> <t>if</t> <t>possible</t>.

<t>Related</t> <t>question</t>: <t>In</t> <t>Python</t>, <t>what</t> <t>is</t> <t>the</t> <t>fastest</t> <t>algorithm</t> <t>for</t> <t>removing</t> <t>duplicates</t> <t>from</t> <t>a</t> <t>list</t> <t>so</t> <t>that</t> <t>all</t> <t>elements</t> <t>are</t> <t>unique</t> <t>while</t> <t>preserving</t> <t>order</t>?
"
491921|"<t>Unicode</t> (<t>UTF-8</t>) <t>reading</t> <t>and</t> <t>writing</t> <t>to</t> <t>files</t> <t>in</t> <t>Python</t>"|"<t>I'm</t> <t>having</t> <t>some</t> <t>brain</t> <t>failure</t> <t>in</t> <t>understanding</t> <t>reading</t> <t>and</t> <t>writing</t> <t>text</t> <t>to</t> <t>a</t> <t>file</t> (<t>Python</t> <t>2.4).</t>

<code># <c>The</c> <c>string</c>, <c>which</c> <c>has</c> <c>an</c> <c>a-acute</c> <c>in</c> <c>it</c><c>.</c>
<c>ss</c> <c>=</c> <c>u</c>'<c>Capit</c><c>\xe1n</c>'
<c>ss8</c> <c>=</c> <c>ss</c><c>.</c><c>encode(</c>'<c>utf8</c>')
<c>repr(</c><c>ss</c>), <c>repr(</c><c>ss8</c>)
</code>


  (""<t>u'Capit\xe1n</t>'"", ""'<t>Capit\xc3\xa1n</t>'"")


<code><c>print</c> <c>ss</c>, <c>ss8</c>
<c>print</c> <c>&gt;&gt;</c> <c>open(</c>'<c>f1</c>','<c>w</c>'), <c>ss8</c>

<c>&gt;&gt;&gt;</c> <c>file(</c>'<c>f1</c>')<c>.</c><c>read(</c>)
'<c>Capit</c><c>\xc3\xa1n\n</c>'
</code>

<t>So</t> <t>I</t> <t>type</t> <t>in</t> <code><c>Capit</c><c>\xc3\xa1n</c></code> <t>into</t> <t>my</t> <t>favorite</t> <t>editor</t>, <t>in</t> <t>file</t> <t>f2</t>.

<t>Then</t>:

<code><c>&gt;&gt;&gt;</c> <c>open(</c>'<c>f1</c>')<c>.</c><c>read(</c>)
'<c>Capit</c><c>\xc3\xa1n\n</c>'
<c>&gt;&gt;&gt;</c> <c>open(</c>'<c>f2</c>')<c>.</c><c>read(</c>)
'<c>Capit</c><c>\\xc3\\xa1n\n</c>'
<c>&gt;&gt;&gt;</c> <c>open(</c>'<c>f1</c>')<c>.</c><c>read(</c>)<c>.</c><c>decode(</c>'<c>utf8</c>')
<c>u</c>'<c>Capit</c><c>\xe1n\n</c>'
<c>&gt;&gt;&gt;</c> <c>open(</c>'<c>f2</c>')<c>.</c><c>read(</c>)<c>.</c><c>decode(</c>'<c>utf8</c>')
<c>u</c>'<c>Capit</c><c>\\xc3\\xa1n\n</c>'
</code>

<t>What</t> <t>am</t> <t>I</t> <t>not</t> <t>understanding</t> <t>here</t>? <t>Clearly</t> <t>there</t> <t>is</t> <t>some</t> <t>vital</t> <t>bit</t> <t>of</t> <t>magic</t> (<t>or</t> <t>good</t> <t>sense</t>) <t>that</t> <t>I'm</t> <t>missing</t>. <t>What</t> <t>does</t> <t>one</t> <t>type</t> <t>into</t> <t>text</t> <t>files</t> <t>to</t> <t>get</t> <t>proper</t> <t>conversions</t>?

<t>What I'm</t> <t>truly</t> <t>failing</t> <t>to</t> <t>grok</t> <t>here</t>, <t>is</t> <t>what</t> <t>the</t> <t>point</t> <t>of</t> <t>the</t> <t>UTF-8</t> <t>representation</t> <t>is</t>, <t>if</t> <t>you</t> <t>can't</t> <t>actually</t> <t>get</t> <t>Python</t> <t>to</t> <t>recognize</t> <t>it</t>, <t>when</t> <t>it</t> <t>comes</t> <t>from</t> <t>outside</t>. <t>Maybe</t> <t>I</t> <t>should</t> <t>just</t> <t>JSON</t> <t>dump</t> <t>the</t> <t>string</t>, <t>and</t> <t>use</t> <t>that</t> <t>instead</t>, <t>since</t> <t>that</t> <t>has</t> <t>an</t> <t>asciiable</t> <t>representation</t>! <t>More</t> <t>to</t> <t>the</t> <t>point</t>, <t>is</t> <t>there</t> <t>an</t> <t>ASCII</t> <t>representation</t> <t>of</t> <t>this</t> <t>Unicode</t> <t>object</t> <t>that</t> <t>Python</t> <t>will</t> <t>recognize</t> <t>and</t> <t>decode</t>, <t>when</t> <t>coming</t> <t>in</t> <t>from</t> <t>a</t> <t>file</t>?  <t>If</t> <t>so</t>, <t>how</t> <t>do</t> <t>I</t> <t>get</t> <t>it</t>?

<code><c>&gt;&gt;&gt;</c> <c>print</c> <c>simplejson</c><c>.</c><c>dumps(</c><c>ss</c>)
'""<c>Capit</c><c>\u00e1n</c>""'
<c>&gt;&gt;&gt;</c> <c>print</c> <c>&gt;&gt;</c> <c>file(</c>'<c>f3</c>','<c>w</c>'), <c>simplejson</c><c>.</c><c>dumps(</c><c>ss</c>)
<c>&gt;&gt;&gt;</c> <c>simplejson</c><c>.</c><c>load(</c><c>open(</c>'<c>f3</c>'))
<c>u</c>'<c>Capit</c><c>\xe1n</c>'
</code>
"
492387|"<t>IndentationError</t>: <t>unindent</t> <t>does</t> <t>not</t> <t>match</t> <t>any</t> <t>outer</t> <t>indentation</t> <t>level</t>"|"<t>When</t> <t>I</t> <t>compile</t> <t>the</t> <t>Python</t> <t>code</t> <t>below</t>, <t>I</t> <t>get</t> 


  <t>IndentationError</t>: <t>unindent</t> <t>does</t> <t>not</t> <t>match</t> <t>any</t> <t>outer</t> <t>indentation</t> <t>level</t>




<code><c>import</c> <c>sys</c>

<c>def</c> <c>Factorial(</c><c>n</c>): # <c>Return</c> <c>factorial</c>
    <c>result</c> <c>=</c> <c>0</c>
    <c>for</c> <c>i</c> <c>in</c> <c>range</c> (<c>1</c>,<c>n</c>):
        <c>result</c> <c>=</c> <c>result</c> <c>*</c> <c>i</c>
    <c>print</c> ""<c>factorial</c> <c>is</c> "",<c>result</c>
    <c>return</c> <c>result</c>
</code>

<t>Why</t>?
"
493386|"<t>How</t> <t>to</t> <t>print</t> <t>without</t> <t>newline</t> <t>or</t> <t>space</t>?"|"<t>The</t> <t>question</t> <t>is</t> <t>in</t> <t>the</t> <t>title</t>.

<t>I'd</t> <t>like</t> <t>to</t> <t>do</t> <t>in</t>  <t>python</t> <t>what</t> <t>I</t> <t>do</t> <t>in</t> <t>this</t> <t>example</t> <t>in</t> <t>c</t>:

<code>#<c>include</c> <c>&lt;</c><c>stdio</c><c>.</c><c>h</c><c>&gt;</c>

<c>int</c> <c>main(</c>) {
    <c>int</c> <c>i</c>;
    <c>for</c> (<c>i</c><c>=</c><c>0</c>; <c>i</c><c>&lt;</c><c>10</c>; <c>i</c><c>+</c><c>+</c>) <c>printf(</c>""<c>.</c>"");
    <c>return</c> <c>0</c>;
}
</code>

<t>Output</t>:

<code><c>.</c>.........
</code>

<t>In</t> <t>Python</t>:

<code><c>&gt;&gt;&gt;</c> <c>for</c> <c>i</c> <c>in</c> <c>xrange(</c><c>0</c>,<c>10</c>): <c>print</c> '<c>.</c>'
<c>.</c>
<c>.</c>
<c>.</c>
<c>.</c>
<c>.</c>
<c>.</c>
<c>.</c>
<c>.</c>
<c>.</c>
<c>.</c>
<c>&gt;&gt;&gt;</c> <c>for</c> <c>i</c> <c>in</c> <c>xrange(</c><c>0</c>,<c>10</c>): <c>print</c> '<c>.</c>',
<c>.</c> <c>.</c> <c>.</c> <c>.</c> <c>.</c> <c>.</c> <c>.</c> <c>.</c> <c>.</c> <c>.</c>
</code>

<t>In Python</t> <code><c>print</c></code> <t>will</t> <t>add</t> <t>a</t> <code><c>\n</c></code> <t>or</t> <t>a</t> <t>space</t>, <t>how</t> <t>can</t> <t>I</t> <t>avoid</t> <t>that</t>? <t>Now</t>, <t>it's</t> <t>just</t> <t>an</t> <t>example</t>. <t>Don't</t> <t>tell</t> <t>me</t> <t>I</t> <t>can</t> <t>first</t> <t>build</t> <t>a</t> <t>string</t> <t>then</t> <t>print</t> <t>it</t>. <t>I'd</t> <t>like</t> <t>to</t> <t>know</t> <t>how</t> <t>to</t> ""<t>append</t>"" <t>strings</t> <t>to</t> <code><c>stdout</c></code>.
"
493819|"<t>Python</t> <t>join</t>: <t>why</t> <t>is</t> <t>it</t> <t>string</t>.<t>join(list</t>) <t>instead</t> <t>of</t> <t>list</t>.<t>join(string</t>)?"|"<t>This</t> <t>has</t> <t>always</t> <t>confused</t> <t>me</t>. <t>It</t> <t>seems</t> <t>like</t> <t>this</t> <t>would</t> <t>be</t> <t>nicer</t>:

<code><c>my_list</c> <c>=</c> [""<c>Hello</c>"", ""<c>world</c>""]
<c>print</c> <c>my_list</c><c>.</c><c>join(</c>""<c>-</c>"")
# <c>Produce</c>: ""<c>Hello-world</c>""
</code>

<t>Than</t> <t>this</t>:

<code><c>my_list</c> <c>=</c> [""<c>Hello</c>"", ""<c>world</c>""]
<c>print</c> ""<c>-</c>""<c>.</c><c>join(</c><c>my_list</c>)
# <c>Produce</c>: ""<c>Hello-world</c>""
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>specific</t> <t>reason</t> <t>it</t> <t>is</t> <t>like</t> <t>this</t>?
"
494594|"<t>How</t> <t>to</t> <t>write</t> <t>the</t> <t>Fibonacci Sequence</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>had</t> <t>originally</t> <t>coded</t> <t>the</t> <t>program</t> <t>wrongly</t>. <t>Instead</t> <t>of</t> <t>returning</t> <t>the</t> <t>Fibonacci</t> <t>numbers</t> <t>between</t> <t>a</t> <t>range</t> (<t>ie</t>. <t>startNumber</t> <t>1</t>, <t>endNumber</t> <t>20</t> <t>should = only</t> <t>those</t> <t>numbers</t> <t>between</t> <t>1</t> <t>&amp;</t> <t>20</t>), <t>I</t> <t>have</t> <t>written</t> <t>for</t> <t>the</t> <t>program</t> <t>to</t> <t>display</t> <t>all</t> <t>Fibonacci</t> <t>numbers</t> <t>between</t> <t>a</t> <t>range</t> (<t>ie</t>. <t>startNumber</t> <t>1</t>, <t>endNumber</t> <t>20</t> <t>displays = First</t> <t>20</t> <t>Fibonacci</t> <t>numbers</t>). <t>I</t> <t>thought</t> <t>I</t> <t>had</t> <t>a</t> <t>sure-fire</t> <t>code</t>. <t>I</t> <t>also</t> <t>do</t> <t>not</t> <t>see</t> <t>why</t> <t>this</t> <t>is</t> <t>happening</t>.

<code><c>startNumber</c> <c>=</c> <c>int(</c><c>raw_input(</c>""<c>Enter</c> <c>the</c> <c>start</c> <c>number</c> <c>here</c> ""))
<c>endNumber</c> <c>=</c> <c>int(</c><c>raw_input(</c>""<c>Enter</c> <c>the</c> <c>end</c> <c>number</c> <c>here</c> ""))

<c>def</c> <c>fib(</c><c>n</c>):
    <c>if</c> <c>n</c> <c>&lt;</c> <c>2</c>:
        <c>return</c> <c>n</c>
    <c>return</c> <c>fib(</c><c>n-2</c>) <c>+</c> <c>fib(</c><c>n-1</c>)

<c>print</c> <c>map(</c><c>fib</c>, <c>range(</c><c>startNumber</c>, <c>endNumber</c>))
</code>

<t>Someone</t> <t>pointed</t> <t>out</t> <t>in</t> <t>my</t> <t>Part II</t> (<t>which</t> <t>was</t> <t>closed</t> <t>for</t> <t>being</t> <t>a</t> <t>duplicate</t> <t>-</t> <t>https</t>:<t>//stackoverflow</t>.<t>com/questions/504193/how-to-write-the-fibonacci-sequence-in-python-part-ii</t>) <t>that</t> <t>I</t> <t>need</t> <t>to</t> <t>pass</t> <t>the</t> <t>startNumber</t> <t>and</t> <t>endNumber</t> <t>through</t> <t>a</t> <t>generator</t> <t>using</t> <t>a</t> <t>while</t> <t>loop</t>. <t>Can</t> <t>someone</t> <t>please</t> <t>point</t> <t>me</t> <t>in</t> <t>the</t> <t>direction</t> <t>on</t> <t>how</t> <t>to</t> <t>do</t> <t>this</t>? <t>Any</t> <t>help</t> <t>is</t> <t>welcome</t>.



<t>I'm</t> <t>a</t> <t>learning</t> <t>programmer</t> <t>and</t> <t>I've</t> <t>run</t> <t>into</t> <t>a</t> <t>bit</t> <t>of</t> <t>a</t> <t>jumble</t>. <t>I</t> <t>am</t> <t>asked</t> <t>to</t> <t>write</t> <t>a</t> <t>program</t> <t>that</t> <t>will</t> <t>compute</t> <t>and</t> <t>display</t> <t>Fibonacci's Sequence</t> <t>by</t> <t>a</t> <t>user</t> <t>inputted</t> <t>start</t> <t>number</t> <t>and</t> <t>end</t> <t>number</t> (<t>ie</t>. <t>startNumber = 20</t> <t>endNumber = 100</t> <t>and</t> <t>it</t> <t>will</t> <t>display</t> <t>only</t> <t>the</t> <t>numbers</t> <t>between</t> <t>that</t> <t>range</t>). <t>The</t> <t>trick</t> <t>is</t> <t>to</t> <t>use</t> <t>it</t> <t>inclusively</t> (<t>which</t> <t>I</t> <t>do</t> <t>not</t> <t>know</t> <t>how</t> <t>to</t> <t>do</t> <t>in</t> <t>Python</t>? <t>-</t> <t>I'm</t> <t>assuming</t> <t>this</t> <t>means</t> <t>to</t> <t>use</t> <t>an</t> <t>inclusive</t> <t>range</t>?).

<t>What</t> <t>I</t> <t>have</t> <t>so</t> <t>far</t> <t>is</t> <t>no</t> <t>actual</t> <t>coding</t> <t>but</t> <t>rather</t>:


<t>Write Fib</t> <t>sequence</t> <t>formula</t> <t>to</t> <t>infinite</t>
<t>Display</t> <t>startNumber</t> <t>to</t> <t>endNumber</t> <t>only</t> <t>from</t> <t>Fib</t> <t>sequence</t>.


<t>I</t> <t>have</t> <t>no</t> <t>idea</t> <t>where</t> <t>to</t> <t>start</t> <t>and</t> <t>I</t> <t>am</t> <t>asking</t> <t>for</t> <t>ideas</t> <t>or</t> <t>insight</t> <t>into</t> <t>how</t> <t>to</t> <t>write</t> <t>this</t>. <t>I</t> <t>also</t> <t>have</t> <t>tried</t> <t>to</t> <t>write</t> <t>the</t> <t>Fib</t> <t>sequence</t> <t>forumla</t> <t>but</t> <t>I</t> <t>get</t> <t>lost</t> <t>on</t> <t>that</t> <t>as</t> <t>well</t>.
"
509211|"<t>Explain</t> <t>slice</t> <t>notation</t>"|"<t>I</t> <t>need</t> <t>a</t> <t>good</t> <t>explanation</t> (<t>references</t> <t>are</t> <t>a</t> <t>plus</t>) <t>on</t> <t>Python's</t> <t>slice</t> <t>notation</t>. 

<t>To</t> <t>me</t>, <t>this</t> <t>notation</t> <t>needs</t> <t>a</t> <t>bit</t> <t>of</t> <t>picking</t> <t>up</t>. 

<t>It</t> <t>looks</t> <t>extremely</t> <t>powerful</t>, <t>but</t> <t>I</t> <t>haven't</t> <t>quite</t> <t>got</t> <t>my</t> <t>head</t> <t>around</t> <t>it</t>.
"
510348|"<t>How</t> <t>can</t> <t>I</t> <t>make</t> <t>a</t> <t>time</t> <t>delay</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>know</t> <t>how</t> <t>to</t> <t>put</t> <t>a</t> <t>time</t> <t>delay</t> <t>in</t> <t>a</t> <t>Python</t> <t>script</t>.
"
510972|"<t>Getting</t> <t>the</t> <t>class</t> <t>name</t> <t>of</t> <t>an</t> <t>instance</t> <t>in</t> <t>Python</t>"|"<t>How</t> <t>do</t> <t>I</t> <t>find</t> <t>out</t> <t>a</t> <t>name</t> <t>of</t> <t>class</t> <t>that</t> <t>created</t> <t>an</t> <t>instance</t> <t>of</t> <t>an</t> <t>object</t> <t>in</t> <t>Python</t> <t>if</t> <t>the</t> <t>function</t> <t>I</t> <t>am</t> <t>doing</t> <t>this</t> <t>from</t> <t>is</t> <t>the</t> <t>base</t> <t>class</t> <t>of</t> <t>which</t> <t>the</t> <t>class</t> <t>of</t> <t>the</t> <t>instance</t> <t>has</t> <t>been</t> <t>derived</t>?

<t>Was</t> <t>thinking</t> <t>maybe</t> <t>the</t> <t>inspect</t> <t>module</t> <t>might</t> <t>have</t> <t>helped</t> <t>me</t> <t>out</t> <t>here</t>, <t>but</t> <t>it</t> <t>doesn't</t> <t>seem</t> <t>to</t> <t>give</t> <t>me</t> <t>what</t> <t>I</t> <t>want</t>. <t>And</t> <t>short</t> <t>of</t> <t>parsing</t> <t>the</t> <code><c>__class__</c></code> <t>member</t>, <t>I'm</t> <t>not</t> <t>sure</t> <t>how</t> <t>to</t> <t>get</t> <t>at</t> <t>this</t> <t>information</t>.
"
517970|"<t>How</t> <t>to</t> <t>clear</t> <t>the</t> <t>interpreter</t> <t>console</t>?"|"<t>Like</t> <t>most</t> <t>Python</t> <t>developers</t>, <t>I</t> <t>typically</t> <t>keep</t> <t>a</t> <t>console</t> <t>window</t> <t>open</t> <t>with</t> <t>the</t> <t>Python</t> <t>interpreter</t> <t>running</t> <t>to</t> <t>test</t> <t>commands</t>, <t>dir</t>() <t>stuff</t>, <t>help</t>() <t>stuff</t>, <t>etc</t>.

<t>Like</t> <t>any</t> <t>console</t>, <t>after</t> <t>a</t> <t>while</t> <t>the</t> <t>visible</t> <t>backlog</t> <t>of</t> <t>past</t> <t>commands</t> <t>and</t> <t>prints</t> <t>gets</t> <t>to</t> <t>be</t> <t>cluttered</t>, <t>and</t> <t>sometimes</t> <t>confusing</t> <t>when</t> <t>re-running</t> <t>the</t> <t>same</t> <t>command</t> <t>several</t> <t>times</t>.  <t>I'm</t> <t>wondering</t> <t>if</t>, <t>and</t> <t>how</t>, <t>to</t> <t>clear</t> <t>the</t> <t>Python</t> <t>interpreter</t> <t>console</t>.

<t>I've</t> <t>heard</t> <t>about</t> <t>doing</t> <t>a</t> <t>system</t> <t>call</t> <t>and</t> <t>either</t> <t>calling</t> <code><c>cls</c></code> <t>on</t> <t>Windows</t> <t>or</t> <code><c>clear</c></code> <t>on</t> <t>Linux</t>, <t>but</t> <t>I</t> <t>was</t> <t>hoping</t> <t>there</t> <t>was</t> <t>something</t> <t>I</t> <t>could</t> <t>command</t> <t>the</t> <t>interpreter</t> <t>itself</t> <t>to</t> <t>do</t>.

<t>Note</t>: <t>I'm</t> <t>running</t> <t>on</t> <t>Windows</t>, <t>so</t> <t>Ctrl+L</t> <t>doesn't</t> <t>work</t>.
"
518021|"<t>Getting</t> <t>the</t> <t>length</t> <t>of</t> <t>an</t> <t>array</t> <t>in</t> <t>Python</t>"|"<t>In</t> <t>Python</t>, <t>is</t> <t>the</t> <t>following</t> <t>the</t> <t>only</t> <t>way</t> <t>to</t> <t>get</t> <t>the</t> <t>number</t> <t>of</t> <t>elements</t>?

<code><c>arr</c><c>.</c><c>__len__(</c>)
</code>

<t>If</t> <t>so</t>, <t>why</t> <t>the</t> <t>strange</t> <t>syntax</t>?
"
521674|"<t>Initializing</t> <t>a</t> <t>list</t> <t>to</t> <t>a</t> <t>known</t> <t>number</t> <t>of</t> <t>elements</t> <t>in</t> <t>Python</t>"|"<t>Right</t> <t>now</t> <t>I</t> <t>am</t> <t>using</t> <t>a</t> <t>list</t>, <t>and</t> <t>was</t> <t>expecting</t> <t>something</t> <t>like</t>:

<code><c>verts</c> <c>=</c> <c>list</c> (<c>1000</c>)
</code>

<t>Should</t> <t>I</t> <t>use</t> <t>array</t> <t>instead</t>?
"
522563|"<t>Accessing</t> <t>the</t> <t>index</t> <t>in</t> <t>Python</t> '<t>for</t>' <t>loops</t>"|"<t>How</t> <t>do</t> <t>I</t> <t>access</t> <t>the</t> <t>index</t> <t>itself</t> <t>for</t> <t>a</t> <t>list</t> <t>like</t> <t>the</t> <t>following</t>?

<code><c>ints</c> <c>=</c> [<c>8</c>, <c>23</c>, <c>45</c>, <c>12</c>, <c>78</c>]
</code>

<t>When</t> <t>I</t> <t>loop</t> <t>through</t> <t>it</t> <t>using</t> <t>a</t> <code><c>for</c></code> <t>loop</t>, <t>how</t> <t>do</t> <t>I</t> <t>access</t> <t>the</t> <t>loop</t> <t>index</t>, <t>from</t> <t>1</t> <t>to</t> <t>5</t> <t>in</t> <t>this</t> <t>case</t>?
"
525592|"<t>Find</t> <t>and</t> <t>Replace Inside</t> <t>a</t> <t>Text File</t> <t>from</t> <t>a</t> <t>Bash</t> <t>Command</t>"|"<t>What's</t> <t>the</t> <t>simplest</t> <t>way</t> <t>to</t> <t>do</t> <t>a</t> <t>find</t> <t>and</t> <t>replace</t> <t>for</t> <t>a</t> <t>given</t> <t>input</t> <t>string</t>, <t>say</t> <code><c>abc</c></code>, <t>and</t> <t>replace</t> <t>with</t> <t>another</t> <t>string</t>, <t>say</t> <code><c>XYZ</c></code> <t>in</t> <t>file</t> <code><c>/tmp/file.txt</c></code>?

<t>I</t> <t>am</t> <t>writting</t> <t>an</t> <t>app</t> <t>and</t> <t>using</t> <t>IronPython</t> <t>to</t> <t>execute</t> <t>commands</t> <t>through</t> <t>SSH</t> <t>&mdash;</t> <t>but</t> <t>I</t> <t>don't</t> <t>know</t> <t>Unix</t> <t>that</t> <t>well</t> <t>and</t> <t>don't</t> <t>know</t> <t>what</t> <t>to</t> <t>look</t> <t>for</t>.

<t>I</t> <t>have</t> <t>heard</t> <t>that</t> <t>Bash</t>, <t>apart</t> <t>from</t> <t>being</t> <t>a</t> <t>command</t> <t>line</t> <t>interface</t>, <t>can</t> <t>be</t> <t>a</t> <t>very</t> <t>powerful</t> <t>scripting</t> <t>language</t>. <t>So</t>, <t>if</t> <t>this</t> <t>is</t> <t>true</t>, <t>I</t> <t>assume</t> <t>you</t> <t>can</t> <t>perform</t> <t>actions</t> <t>like</t> <t>these</t>.

<t>Can</t> <t>I</t> <t>do</t> <t>it</t> <t>with</t> <t>bash</t>, <t>and</t> <t>what's</t> <t>the</t> <t>simplest</t> (<t>one</t> <t>line</t>) <t>script</t> <t>to</t> <t>achieve</t> <t>my</t> <t>goal</t>?
"
529424|"<t>Traverse</t> <t>a</t> <t>list</t> <t>in</t> <t>reverse</t> <t>order</t> <t>in</t> <t>Python</t>"|"<t>So</t> <t>I</t> <t>can</t> <t>start</t> <t>from</t> <code><c>len(</c><c>collection</c>)</code> <t>and</t> <t>end</t> <t>in</t> <code><c>collection</c>[<c>0</c>]</code>.

<t>EDIT</t>: <t>Sorry</t>, <t>I</t> <t>forgot</t> <t>to</t> <t>mention</t> <t>I</t> <t>also</t> <t>want</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>access</t> <t>the</t> <t>loop</t> <t>index</t>.
"
538346|"<t>Iterating</t> <t>over</t> <t>a</t> <t>string</t>"|"<t>In</t> <t>C++</t>, <t>I</t> <t>could</t> <t>do</t>:

<code><c>for</c> (<c>int</c> <c>i</c> <c>=</c> <c>0</c>; <c>i</c> <c>&lt;</c> <c>str</c><c>.</c><c>length(</c>); <c>+</c><c>+</c><c>i</c>)
    <c>std</c>::<c>cout</c> <c>&lt;&lt;</c> <c>str</c>[<c>i</c>] <c>&lt;&lt;</c> <c>std</c>::<c>endl</c>;
</code>

<t>How</t> <t>do</t> <t>I</t> <t>iterate</t> <t>over</t> <t>a</t> <t>string</t> <t>in</t> <t>Python</t>?
"
541390|"<t>Extracting</t> <t>extension</t> <t>from</t> <t>filename</t> <t>in</t> <t>Python</t>"|"<t>Is</t> <t>there</t> <t>a</t> <t>function</t> <t>to</t> <t>extract</t> <t>the</t> <t>extension</t> <t>from</t> <t>a</t> <t>filename</t>?
"
543309|"<t>Programmatically</t> <t>stop</t> <t>execution</t> <t>of</t> <t>python</t> <t>script</t>?"|"
  <t>Possible</t> <t>Duplicate</t>:
  <t>Terminating</t> <t>a</t> <t>Python</t> <t>script</t>  




<t>Is</t> <t>it</t> <t>possible</t> <t>to</t> <t>stop</t> <t>execution</t> <t>of</t> <t>a</t> <t>python</t> <t>script</t> <t>at</t> <t>any</t> <t>line</t> <t>with</t> <t>a</t> <t>command</t>?

<t>Like</t>

<code><c>some</c> <c>code</c>

<c>quit(</c>) # <c>quit</c> <c>at</c> <c>this</c> <c>point</c>

<c>some</c> <c>more</c> <c>code</c> (<c>that</c>'<c>s</c> <c>not</c> <c>executed</c>)
</code>
"
568962|"<t>How</t> <t>do</t> <t>I</t> <t>create</t> <t>an</t> <t>empty</t> <t>array/matrix</t> <t>in</t> <t>NumPy</t>?"|"<t>I</t> <t>can't</t> <t>figure</t> <t>out</t> <t>how</t> <t>to</t> <t>use</t> <t>an</t> <t>array</t> <t>or</t> <t>matrix</t> <t>in</t> <t>the</t> <t>way</t> <t>that</t> <t>I</t> <t>would</t> <t>normally</t> <t>use</t> <t>a</t> <t>list</t>. <t>I</t> <t>want</t> <t>to</t> <t>create</t> <t>an</t> <t>empty</t> <t>array</t> (<t>or</t> <t>matrix</t>) <t>and</t> <t>then</t> <t>add</t> <t>one</t> <t>column</t> (<t>or</t> <t>row</t>) <t>to</t> <t>it</t> <t>at</t> <t>a</t> <t>time</t>.

<t>At</t> <t>the</t> <t>moment</t> <t>the</t> <t>only</t> <t>way</t> <t>I</t> <t>can</t> <t>find</t> <t>to</t> <t>do</t> <t>this</t> <t>is</t> <t>like</t>:

<code><c>mat</c> <c>=</c> <c>None</c>
<c>for</c> <c>col</c> <c>in</c> <c>columns</c>:
    <c>if</c> <c>mat</c> <c>is</c> <c>None</c>:
        <c>mat</c> <c>=</c> <c>col</c>
    <c>else</c>:
        <c>mat</c> <c>=</c> <c>hstack(</c>(<c>mat</c>, <c>col</c>))
</code>

<t>Whereas</t> <t>if</t> <t>it</t> <t>were</t> <t>a</t> <t>list</t>, <t>I'd</t> <t>do</t> <t>something</t> <t>like</t> <t>this</t>:

<code><c>list</c> <c>=</c> []
<c>for</c> <c>item</c> <c>in</c> <c>data</c>:
    <c>list</c><c>.</c><c>append(</c><c>item</c>)
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>use</t> <t>that</t> <t>kind</t> <t>of</t> <t>notation</t> <t>for</t> <t>NumPy</t> <t>arrays</t> <t>or</t> <t>matrices</t>?
"
574730|"<t>Python</t>: <t>How</t> <t>to</t> <t>ignore</t> <t>an</t> <t>exception</t> <t>and</t> <t>proceed</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>try...except</t> <t>block</t> <t>in</t> <t>my</t> <t>code</t> <t>and</t> <t>When</t> <t>an</t> <t>exception</t> <t>is</t> <t>throw</t>. <t>I</t> <t>really</t> <t>just</t> <t>want</t> <t>to</t> <t>continue</t> <t>with</t> <t>the</t> <t>code</t> <t>because</t> <t>in</t> <t>that</t> <t>case</t>, <t>everything</t> <t>is</t> <t>still</t> <t>able</t> <t>to</t> <t>run</t> <t>just</t> <t>fine</t>. <t>The</t> <t>problem</t> <t>is</t> <t>if</t> <t>you</t> <t>leave</t> <t>the</t> <t>except</t>: <t>block</t> <t>empty</t> <t>or</t> <t>with</t> <t>a</t> <t>#do</t> <t>nothing</t>, <t>it</t> <t>gives</t> <t>you</t> <t>a</t> <t>syntax</t> <t>error</t>. <t>I</t> <t>can't</t> <t>use</t> <t>continue</t> <t>because</t> <t>its</t> <t>not</t> <t>in</t> <t>a</t> <t>loop</t>. <t>Is</t> <t>there</t> <t>a</t> <t>keyword</t> <t>i</t> <t>can</t> <t>use</t> <t>that</t> <t>tells</t> <t>the</t> <t>code</t> <t>to</t> <t>just</t> <t>keep</t> <t>going</t>?
"
576169|"<t>Understanding Python</t> <t>super</t>() <t>with</t> <t>__init__</t>() <t>methods</t>"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>understand</t> <code><c>super(</c>)</code>. <t>From</t> <t>the</t> <t>looks</t> <t>of</t> <t>it</t>, <t>both</t> <t>child</t> <t>classes</t> <t>can</t> <t>be</t> <t>created</t> <t>just</t> <t>fine</t>. <t>I'm</t> <t>curious</t> <t>as</t> <t>to</t> <t>what</t> <t>difference</t> <t>there</t> <t>actually</t> <t>is</t> <t>between</t> <t>the</t> <t>following</t> <t>child</t> <t>classes</t>:

<code><c>class</c> <c>Base(</c><c>object</c>):
    <c>def</c> <c>__init__(</c><c>self</c>):
        <c>print</c> ""<c>Base</c> <c>created</c>""

<c>class</c> <c>ChildA(</c><c>Base</c>):
    <c>def</c> <c>__init__(</c><c>self</c>):
        <c>Base</c><c>.</c><c>__init__(</c><c>self</c>)

<c>class</c> <c>ChildB(</c><c>Base</c>):
    <c>def</c> <c>__init__(</c><c>self</c>):
        <c>super(</c><c>ChildB</c>, <c>self</c>)<c>.</c><c>__init__(</c>)

<c>ChildA(</c>) 
<c>ChildB(</c>)
</code>
"
582336|"<t>How</t> <t>can</t> <t>you</t> <t>profile</t> <t>a</t> <t>script</t>?"|"<t>Project Euler</t> <t>and</t> <t>other</t> <t>coding</t> <t>contests</t> <t>often</t> <t>have</t> <t>a</t> <t>maximum</t> <t>time</t> <t>to</t> <t>run</t> <t>or</t> <t>people</t> <t>boast</t> <t>of</t> <t>how</t> <t>fast</t> <t>their</t> <t>particular</t> <t>solution</t> <t>runs</t>.  <t>With</t> <t>python</t>, <t>sometimes</t> <t>the</t> <t>approaches</t> <t>are</t> <t>somewhat</t> <t>kludgey</t> <t>-</t> <t>i.e.,</t> <t>adding</t> <t>timing</t> <t>code</t> <t>to</t> <code><c>__main__</c></code>.

<t>What</t> <t>is</t> <t>a</t> <t>good</t> <t>way</t> <t>to</t> <t>profile</t> <t>how</t> <t>long</t> <t>a</t> <t>python</t> <t>program</t> <t>takes</t> <t>to</t> <t>run</t>?
"
600268|"<t>mkdir</t> <t>-p</t> <t>functionality</t> <t>in</t> <t>Python</t>"|"<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>get</t> <t>functionality</t> <t>similar</t> <t>to</t> <code><c>mkdir</c> <c>-</c><c>p</c></code> <t>on</t> <t>the</t> <t>shell</t> <t>from</t> <t>within</t> <t>Python</t>.  <t>I</t> <t>am</t> <t>looking</t> <t>for</t> <t>a</t> <t>solution</t> <t>other</t> <t>than</t> <t>a</t> <t>system</t> <t>call</t>.  <t>I</t> <t>am</t> <t>sure</t> <t>the</t> <t>code</t> <t>is</t> <t>less</t> <t>than</t> <t>20</t> <t>lines</t>, <t>and</t> <t>I</t> <t>am</t> <t>wondering</t> <t>if</t> <t>someone</t> <t>has</t> <t>already</t> <t>written</t> <t>it</t>?
"
604802|"<t>Python</t>: <t>finding</t> <t>an</t> <t>element</t> <t>in</t> <t>an</t> <t>array</t>"|"<t>What</t> <t>is</t> <t>a</t> <t>good</t> <t>way</t> <t>to</t> <t>find</t> <t>the</t> <t>index</t> <t>of</t> <t>an</t> <t>element</t> <t>in</t> <t>an</t> <t>array</t> <t>in</t> <t>python</t>? 
<t>Note</t> <t>that</t> <t>the</t> <t>array</t> <t>may</t> <t>not</t> <t>be</t> <t>sorted</t>.
<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>specify</t> <t>what</t> <t>comparison</t> <t>operator</t> <t>to</t> <t>use</t>?
"
606191|"<t>Convert</t> <t>bytes</t> <t>to</t> <t>a</t> <t>Python</t> <t>string</t>"|"<t>I'm</t> <t>using</t> <t>this</t> <t>code</t> <t>to</t> <t>get</t> <t>standard</t> <t>output</t> <t>from</t> <t>an</t> <t>external</t> <t>program</t>:

<code><c>&gt;&gt;&gt;</c> <c>from</c> <c>subprocess</c> <c>import</c> <c>*</c>
<c>&gt;&gt;&gt;</c> <c>command_stdout</c> <c>=</c> <c>Popen(</c>['<c>ls</c>', '<c>-</c><c>l</c>'], <c>stdout</c><c>=</c><c>PIPE</c>)<c>.</c><c>communicate(</c>)[<c>0</c>]
</code>

<t>The</t> <t>communicate</t>() <t>method</t> <t>returns</t> <t>an</t> <t>array</t> <t>of</t> <t>bytes</t>:

<code><c>&gt;&gt;&gt;</c> <c>command_stdout</c>
<c>b</c>'<c>total</c> <c>0</c><c>\n-rw-rw-r--</c> <c>1</c> <c>thomas</c> <c>thomas</c> <c>0</c> <c>Mar</c>  <c>3</c> <c>0</c><c>7</c>:<c>0</c><c>3</c> <c>file1</c><c>\n-rw-rw-r--</c> <c>1</c> <c>thomas</c> <c>thomas</c> <c>0</c> <c>Mar</c>  <c>3</c> <c>0</c><c>7</c>:<c>0</c><c>3</c> <c>file2</c><c>\n</c>'
</code>

<t>However</t>, <t>I'd</t> <t>like</t> <t>to</t> <t>work</t> <t>with</t> <t>the</t> <t>output</t> <t>as</t> <t>a</t> <t>normal</t> <t>Python</t> <t>string</t>. <t>So</t> <t>that</t> <t>I</t> <t>could</t> <t>print</t> <t>it</t> <t>like</t> <t>this</t>:

<code><c>&gt;&gt;&gt;</c> <c>print(</c><c>command_stdout</c>)
<c>-</c><c>rw-rw-r</c><c>-</c><c>-</c> <c>1</c> <c>thomas</c> <c>thomas</c> <c>0</c> <c>Mar</c>  <c>3</c> <c>0</c><c>7</c>:<c>0</c><c>3</c> <c>file1</c>
<c>-</c><c>rw-rw-r</c><c>-</c><c>-</c> <c>1</c> <c>thomas</c> <c>thomas</c> <c>0</c> <c>Mar</c>  <c>3</c> <c>0</c><c>7</c>:<c>0</c><c>3</c> <c>file2</c>
</code>

<t>I</t> <t>thought</t> <t>that's</t> <t>what</t> <t>the</t> <t>binascii</t>.<t>b2a_qp</t>() <t>method</t> <t>is</t> <t>for</t>, <t>but</t> <t>when</t> <t>I</t> <t>tried</t> <t>it</t>, <t>I</t> <t>got</t> <t>the</t> <t>same</t> <t>byte</t> <t>array</t> <t>again</t>:

<code><c>&gt;&gt;&gt;</c> <c>binascii</c><c>.</c><c>b2a_qp(</c><c>command_stdout</c>)
<c>b</c>'<c>total</c> <c>0</c><c>\n-rw-rw-r--</c> <c>1</c> <c>thomas</c> <c>thomas</c> <c>0</c> <c>Mar</c>  <c>3</c> <c>0</c><c>7</c>:<c>0</c><c>3</c> <c>file1</c><c>\n-rw-rw-r--</c> <c>1</c> <c>thomas</c> <c>thomas</c> <c>0</c> <c>Mar</c>  <c>3</c> <c>0</c><c>7</c>:<c>0</c><c>3</c> <c>file2</c><c>\n</c>'
</code>

<t>Does</t> <t>anybody</t> <t>know</t> <t>how</t> <t>to</t> <t>convert</t> <t>the</t> <t>bytes</t> <t>value</t> <t>back</t> <t>to</t> <t>string</t>? <t>I</t> <t>mean</t>, <t>using</t> <t>the</t> ""<t>batteries</t>"" <t>instead</t> <t>of</t> <t>doing</t> <t>it</t> <t>manually</t>. <t>And I'd</t> <t>like</t> <t>it</t> <t>to</t> <t>be</t> <t>ok</t> <t>with</t> <t>Python</t> <t>3</t>.
"
610883|"<t>How</t> <t>to</t> <t>know</t> <t>if</t> <t>an</t> <t>object</t> <t>has</t> <t>an</t> <t>attribute</t> <t>in</t> <t>Python</t>"|"<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>in</t> <t>Python</t> <t>to</t> <t>determine</t> <t>if</t> <t>an</t> <t>object</t> <t>has</t> <t>some</t> <t>attribute</t>?  <t>For</t> <t>example</t>:

<code><c>&gt;&gt;&gt;</c> <c>a</c> <c>=</c> <c>SomeClass(</c>)
<c>&gt;&gt;&gt;</c> <c>a</c><c>.</c><c>someProperty</c> <c>=</c> <c>value</c>
<c>&gt;&gt;&gt;</c> <c>a</c><c>.</c><c>property</c>
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>&lt;</c><c>stdin</c><c>&gt;</c>"", <c>line</c> <c>1</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
<c>AttributeError</c>: <c>SomeClass</c> <c>instance</c> <c>has</c> <c>no</c> <c>attribute</c> '<c>property</c>'
</code>

<t>How</t> <t>can</t> <t>you</t> <t>tell</t> <t>if</t> <code><c>a</c></code> <t>has</t> <t>the</t> <t>attribute</t> <code><c>property</c></code> <t>before</t> <t>using</t> <t>it</t>?
"
613183|"<t>Sort</t> <t>a</t> <t>Python</t> <t>dictionary</t> <t>by</t> <t>value</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>dictionary</t> <t>of</t> <t>values</t> <t>read</t> <t>from</t> <t>two</t> <t>fields</t> <t>in</t> <t>a</t> <t>database</t>: <t>a</t> <t>string</t> <t>field</t> <t>and</t> <t>a</t> <t>numeric</t> <t>field</t>. <t>The</t> <t>string</t> <t>field</t> <t>is</t> <t>unique</t>, <t>so</t> <t>that</t> <t>is</t> <t>the</t> <t>key</t> <t>of</t> <t>the</t> <t>dictionary</t>.

<t>I</t> <t>can</t> <t>sort</t> <t>on</t> <t>the</t> <t>keys</t>, <t>but</t> <t>how</t> <t>can</t> <t>I</t> <t>sort</t> <t>based</t> <t>on</t> <t>the</t> <t>values</t>?

<t>Note</t>: <t>I</t> <t>have</t> <t>read</t> <t>Stack Overflow</t> <t>question</t> <t>How</t> <t>do</t> <t>I</t> <t>sort</t> <t>a</t> <t>list</t> <t>of</t> <t>dictionaries</t> <t>by</t> <t>values</t> <t>of</t> <t>the</t> <t>dictionary</t> <t>in</t> <t>Python</t>? <t>and</t> <t>probably</t> <t>could</t> <t>change</t> <t>my</t> <t>code</t> <t>to</t> <t>have</t> <t>a</t> <t>list</t> <t>of</t> <t>dictionaries</t>, <t>but</t> <t>since</t> <t>I</t> <t>do</t> <t>not</t> <t>really</t> <t>need</t> <t>a</t> <t>list</t> <t>of</t> <t>dictionaries</t> <t>I</t> <t>wanted</t> <t>to</t> <t>know</t> <t>if</t> <t>there</t> <t>is</t> <t>a</t> <t>simpler</t> <t>solution</t>.
"
625083|"<t>Python</t> <t>__init__</t> <t>and</t> <t>self</t> <t>what</t> <t>do</t> <t>they</t> <t>do</t>?"|"<t>I'm</t> <t>learning</t> <t>the</t> <t>Python</t> <t>programming</t> <t>language</t> <t>and</t> <t>I've</t> <t>came</t> <t>across</t> <t>something</t> <t>I</t> <t>don't</t> <t>fully</t> <t>understand</t>. 

<t>In</t> <t>a</t> <t>method</t> <t>like</t>:

<code><c>def</c> <c>method(</c><c>self</c>, <c>blah</c>):
    <c>def</c> <c>__init__(</c><c>?</c>):
        <c>.</c><c>.</c>..
    ....
</code>

<t>What</t> <t>does</t> <code><c>self</c></code> <t>do</t>?  <t>What</t> <t>is</t> <t>it</t> <t>meant</t> <t>to</t> <t>be</t>?  <t>Is</t> <t>it</t> <t>mandatory</t>?

<t>What</t> <t>does</t> <t>the</t> <code><c>__init__</c></code> <t>method</t> <t>do</t>?  <t>Why</t> <t>is</t> <t>it</t> <t>necessary</t>? (<t>etc</t>.)

<t>I</t> <t>think</t> <t>they</t> <t>might</t> <t>be</t> <t>OOP</t> <t>constructs</t>, <t>but</t> <t>I</t> <t>don't</t> <t>know</t> <t>very</t> <t>much</t>.
"
626759|"<t>What's</t> <t>the</t> <t>difference</t> <t>between</t> <t>lists</t> <t>and</t> <t>tuples</t>?"|"<t>What's</t> <t>the</t> <t>difference</t>?

<t>What</t> <t>are</t> <t>the</t> <t>advantages</t> <t>/</t> <t>disadvantages</t> <t>of</t> <t>tuples</t> <t>/</t> <t>lists</t>?
"
627435|"<t>How</t> <t>to</t> <t>remove</t> <t>an</t> <t>element</t> <t>from</t> <t>a</t> <t>list</t> <t>by</t> <t>index</t> <t>in</t> <t>Python</t>?"|"<t>How</t> <t>to</t> <t>remove</t> <t>an</t> <t>element</t> <t>from</t> <t>a</t> <t>list</t> <t>by</t> <t>index</t> <t>in</t> <t>Python</t>?

<t>I</t> <t>found</t> <t>the</t> <code><c>list</c><c>.</c><c>remove</c></code> <t>method</t>, <t>but</t> <t>say</t> <t>I</t> <t>want</t> <t>to</t> <t>remove</t> <t>the</t> <t>last</t> <t>element</t>, <t>how</t> <t>do</t> <t>I</t> <t>do</t> <t>this</t>? <t>It</t> <t>seems</t> <t>like</t> <t>the</t> <t>default</t> <t>remove</t> <t>searches</t> <t>the</t> <t>list</t>, <t>but</t> <t>I</t> <t>don't</t> <t>want</t> <t>any</t> <t>search</t> <t>to</t> <t>be</t> <t>performed</t>.
"
642154|"<t>How</t> <t>to</t> <t>convert</t> <t>strings</t> <t>into</t> <t>integers</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>tuple</t> <t>of</t> <t>tuples</t> <t>from</t> <t>a</t> <t>MySQL</t> <t>query</t> <t>like</t> <t>this</t>:

<code><c>T1</c> <c>=</c> (('<c>13</c>', '<c>17</c>', '<c>18</c>', '<c>21</c>', '<c>32</c>'),
      ('<c>0</c><c>7</c>', '<c>11</c>', '<c>13</c>', '<c>14</c>', '<c>28</c>'),
      ('<c>0</c><c>1</c>', '<c>0</c><c>5</c>', '<c>0</c><c>6</c>', '<c>0</c><c>8</c>', '<c>15</c>', '<c>16</c>'))
</code>

<t>I'd</t> <t>like</t> <t>to</t> <t>convert</t> <t>all</t> <t>the</t> <t>string</t> <t>elements</t> <t>into</t> <t>integers</t> <t>and</t> <t>put</t> <t>them</t> <t>back</t> <t>into</t> <t>a</t> <t>list</t> <t>of</t> <t>lists</t>:

<code><c>T2</c> <c>=</c> [[<c>13</c>, <c>17</c>, <c>18</c>, <c>21</c>, <c>32</c>], [<c>7</c>, <c>11</c>, <c>13</c>, <c>14</c>, <c>28</c>], [<c>1</c>, <c>5</c>, <c>6</c>, <c>8</c>, <c>15</c>, <c>16</c>]]
</code>

<t>I</t> <t>tried</t> <t>to</t> <t>achieve</t> <t>it</t> <t>with</t> <code><c>eval</c></code> <t>but</t> <t>didn't</t> <t>get</t> <t>any</t> <t>decent</t> <t>result</t> <t>yet</t>.
"
642763|"<t>Find</t> <t>intersection</t> <t>of</t> <t>two</t> <t>lists</t>?"|"<t>I</t> <t>know</t> <t>how</t> <t>to</t> <t>get</t> <t>an</t> <t>intersection</t> <t>of</t> <t>two</t> <t>flat</t> <t>lists</t>:

<code><c>b1</c> <c>=</c> [<c>1</c>,<c>2</c>,<c>3</c>,<c>4</c>,<c>5</c>,<c>9</c>,<c>11</c>,<c>15</c>]
<c>b2</c> <c>=</c> [<c>4</c>,<c>5</c>,<c>6</c>,<c>7</c>,<c>8</c>]
<c>b3</c> <c>=</c> [<c>val</c> <c>for</c> <c>val</c> <c>in</c> <c>b1</c> <c>if</c> <c>val</c> <c>in</c> <c>b2</c>]
</code>

<t>or</t> 

<code><c>def</c> <c>intersect(</c><c>a</c>, <c>b</c>):
    <c>return</c> <c>list(</c><c>set(</c><c>a</c>) <c>&</c><c>amp</c>; <c>set(</c><c>b</c>))

<c>print</c> <c>intersect(</c><c>b1</c>, <c>b2</c>)
</code>

<t>But</t> <t>when</t> <t>I</t> <t>have</t> <t>to</t> <t>find</t> <t>intersection</t> <t>for</t> <t>nested</t> <t>lists</t> <t>then</t> <t>my</t> <t>problems</t> <t>starts</t>:

<code><c>c1</c> <c>=</c> [<c>1</c>, <c>6</c>, <c>7</c>, <c>10</c>, <c>13</c>, <c>28</c>, <c>32</c>, <c>41</c>, <c>58</c>, <c>63</c>]
<c>c2</c> <c>=</c> [[<c>13</c>, <c>17</c>, <c>18</c>, <c>21</c>, <c>32</c>], [<c>7</c>, <c>11</c>, <c>13</c>, <c>14</c>, <c>28</c>], [<c>1</c>, <c>5</c>, <c>6</c>, <c>8</c>, <c>15</c>, <c>16</c>]]
</code>

<t>In</t> <t>the</t> <t>end</t> <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>receive</t>:

<code><c>c3</c> <c>=</c> [[<c>13</c>,<c>32</c>],[<c>7</c>,<c>13</c>,<c>28</c>],[<c>1</c>,<c>6</c>]]
</code>

<t>Can</t> <t>you</t> <t>guys</t> <t>give</t> <t>me</t> <t>a</t> <t>hand</t> <t>with</t> <t>this</t>?

<t>Related</t>


<t>Flattening</t> <t>a</t> <t>shallow</t> <t>list</t> <t>in</t> <t>python</t>

"
645312|"<t>What</t> <t>is</t> <t>the</t> <t>quickest</t> <t>way</t> <t>to</t> <t>HTTP GET</t> <t>in</t> <t>Python</t>?"|"<t>What</t> <t>is</t> <t>the</t> <t>quickest</t> <t>way</t> <t>to</t> <t>HTTP GET</t> <t>in</t> <t>Python</t> <t>if</t> <t>I</t> <t>know</t> <t>the</t> <t>content</t> <t>will</t> <t>be</t> <t>a</t> <t>string</t>? <t>I</t> <t>am</t> <t>searching</t> <t>the</t> <t>docs</t> <t>for</t> <t>a</t> <t>quick</t> <t>one-liner</t> <t>like</t>:

<code><c>contents</c> <c>=</c> <c>url</c><c>.</c><c>get(</c>""<c>htt</c><c>p://example.com/foo/bar</c>"")
</code>

<t>But</t> <t>all</t> <t>I</t> <t>can</t> <t>find</t> <t>using</t> <t>Google</t> <t>are</t> <code><c>httplib</c></code> <t>and</t> <code><c>urllib</c></code> <t>-</t> <t>and</t> <t>I</t> <t>am</t> <t>unable</t> <t>to</t> <t>find</t> <t>a</t> <t>shortcut</t> <t>in</t> <t>those</t> <t>libraries</t>.

<t>Does</t> <t>standard</t> <t>Python</t> <t>2.5</t> <t>have</t> <t>a</t> <t>shortcut</t> <t>in</t> <t>some</t> <t>form</t> <t>as</t> <t>above</t>, <t>or</t> <t>should</t> <t>I</t> <t>write</t> <t>a</t> <t>function</t> <code><c>url_get</c></code>?


<t>I</t> <t>would</t> <t>prefer</t> <t>not</t> <t>to</t> <t>capture</t> <t>the</t> <t>output</t> <t>of</t> <t>shelling</t> <t>out</t> <t>to</t> <code><c>wget</c></code> <t>or</t> <code><c>curl</c></code>.

"
663171|"<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>substring</t> <t>a</t> <t>string</t> <t>in</t> <t>Python</t>?"|"<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>substring</t> <t>a</t> <t>string</t> <t>in</t> <t>Python</t>, <t>to</t> <t>get</t> <t>a</t> <t>new</t> <t>string</t> <t>from</t> <t>the</t> <t>3rd</t> <t>character</t> <t>to</t> <t>the</t> <t>end</t> <t>of</t> <t>the</t> <t>string</t>?

<t>Maybe</t> <t>like</t> <code><c>myString</c>[<c>2</c>:<c>end</c>]</code>?

<t>If</t> <t>leaving</t> <t>the</t> <t>second</t> <t>part</t> <t>means</t> '<t>till</t> <t>the</t> <t>end</t>', <t>if</t> <t>you</t> <t>leave</t> <t>the</t> <t>first</t> <t>part</t>, <t>does</t> <t>it</t> <t>start</t> <t>from</t> <t>the</t> <t>start</t>?
"
664294|"<t>Is</t> <t>it</t> <t>possible</t> <t>only</t> <t>to</t> <t>declare</t> <t>a</t> <t>variable</t> <t>without</t> <t>assigning</t> <t>any</t> <t>value</t> <t>in</t> <t>Python</t>?"|"<t>Is</t> <t>it</t> <t>possible</t> <t>to</t> <t>declare</t> <t>a</t> <t>variable</t> <t>in</t> <t>Python</t>, <t>like</t> <t>so</t>?:

<code><c>var</c>
</code>

<t>so</t> <t>that</t> <t>it</t> <t>initialized</t> <t>to</t> <t>None</t>? <t>It</t> <t>seems</t> <t>like</t> <t>Python</t> <t>allows</t> <t>this</t>, <t>but</t> <t>as</t> <t>soon</t> <t>as</t> <t>you</t> <t>access</t> <t>it</t>, <t>it</t> <t>crashes</t>. <t>Is</t> <t>this</t> <t>possible</t>? <t>If</t> <t>not</t>, <t>why</t>?

<t>EDIT</t>: <t>I</t> <t>want</t> <t>to</t> <t>do</t> <t>this</t> <t>for</t> <t>cases</t> <t>like</t> <t>this</t>:

<code><c>value</c>

<c>for</c> <c>index</c> <c>in</c> <c>sequence</c>:

   <c>if</c> <c>value</c> <c>==</c> <c>None</c> <c>and</c> <c>conditionMet</c>:
       <c>value</c> <c>=</c> <c>index</c>
       <c>break</c>
</code>

<t>Duplicate</t>


<t>Uninitialised</t> <t>value</t> <t>in</t> <t>python</t> (<t>by</t> <t>same</t> <t>author</t>)
<t>Are</t> <t>there</t> <t>any</t> <t>declaration</t> <t>keywords</t> <t>in</t> <t>Python</t>? (<t>by</t> <t>the</t> <t>same</t> <t>author</t>)


<t>Related</t>


<t>Python</t>: <t>variable</t> <t>scope</t> <t>and</t> <t>function</t> <t>calls</t>
<t>Other</t> <t>languages</t> <t>have</t> ""<t>variables</t>""

"
672172|"<t>Using</t> <t>python</t> <t>map</t> <t>and</t> <t>other</t> <t>functional</t> <t>tools</t>"|"<t>This</t> <t>is</t> <t>quite</t> <t>n00bish</t>, <t>but</t> <t>I'm</t> <t>trying</t> <t>to</t> <t>learn/understand</t> <t>functional</t> <t>programming</t> <t>in</t> <t>python</t>. <t>The</t> <t>following</t> <t>code</t>:

<code><c>foos</c> <c>=</c> [<c>1.0</c>,<c>2.0</c>,<c>3.0</c>,<c>4.0</c>,<c>5.0</c>]
<c>bars</c> <c>=</c> [<c>1</c>,<c>2</c>,<c>3</c>]

<c>def</c> <c>maptest(</c><c>foo</c>, <c>bar</c>):
    <c>print</c> <c>foo</c>, <c>bar</c>

<c>map(</c><c>maptest</c>, <c>foos</c>, <c>bars</c>)
</code>

<t>produces</t>:

<code><c>1.0</c> <c>1</c>
<c>2.0</c> <c>2</c>
<c>3.0</c> <c>3</c>
<c>4.0</c> <c>None</c>
<c>5.0</c> <c>None</c>
</code>

<t>Q</t>. <t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>use</t> <t>map</t> <t>or</t> <t>any</t> <t>other</t> <t>functional</t> <t>tools</t> <t>in</t> <t>python</t> <t>to</t> <t>produce</t> <t>the</t> <t>following</t> <t>without</t> <t>loops</t> <t>etc</t>.

<code><c>1.0</c> [<c>1</c>,<c>2</c>,<c>3</c>]
<c>2.0</c> [<c>1</c>,<c>2</c>,<c>3</c>]
<c>3.0</c> [<c>1</c>,<c>2</c>,<c>3</c>]
<c>4.0</c> [<c>1</c>,<c>2</c>,<c>3</c>]
<c>5.0</c> [<c>1</c>,<c>2</c>,<c>3</c>]
</code>

<t>Just</t> <t>as</t> <t>a</t> <t>side</t> <t>note</t> <t>how</t> <t>would</t> <t>the</t> <t>implementation</t> <t>change</t> <t>if</t> <t>there</t> <t>is</t> <t>a</t> <t>dependency</t> <t>between</t> <t>foo</t> <t>and</t> <t>bar</t>. <t>e.g.</t>

<code><c>foos</c> <c>=</c> [<c>1.0</c>,<c>2.0</c>,<c>3.0</c>,<c>4.0</c>,<c>5.0</c>]
<c>bars</c> <c>=</c> [<c>1</c>,<c>2</c>,<c>3</c>,<c>4</c>,<c>5</c>]
</code>

<t>and</t> <t>print</t>:

<code><c>1.0</c> [<c>2</c>,<c>3</c>,<c>4</c>,<c>5</c>]
<c>2.0</c> [<c>1</c>,<c>3</c>,<c>4</c>,<c>5</c>]
<c>3.0</c> [<c>1</c>,<c>2</c>,<c>4</c>,<c>5</c>]
...
</code>

<t>P</t>.<t>S</t>: <t>I</t> <t>know</t> <t>how</t> <t>to</t> <t>do</t> <t>it</t> <t>naively</t> <t>using</t> <t>if</t>, <t>loops</t> <t>and/or</t> <t>generators</t>, <t>but</t> <t>I'd</t> <t>like</t> <t>to</t> <t>learn</t> <t>how</t> <t>to</t> <t>achieve</t> <t>the</t> <t>same</t> <t>using</t> <t>functional</t> <t>tools</t>. <t>Is</t> <t>it</t> <t>just</t> <t>a</t> <t>case</t> <t>of</t> <t>adding</t> <t>an</t> <t>if</t> <t>statement</t> <t>to</t> <t>maptest</t> <t>or</t> <t>apply</t> <t>another</t> <t>filter</t> <t>map</t> <t>to</t> <t>bars</t> <t>internally</t> <t>within</t> <t>maptest</t>?
"
674764|"<t>Examples</t> <t>for</t> <t>string</t> <t>find</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>find</t> <t>some</t> <t>examples</t> <t>but</t> <t>no</t> <t>luck</t>. <t>Does</t> <t>anyone</t> <t>know</t> <t>of</t> <t>some</t> <t>examples</t> <t>on</t> <t>the</t> <t>net</t>? <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>know</t> <t>what</t> <t>it</t> <t>returns</t> <t>when</t> <t>it</t> <t>can't</t> <t>find</t>, <t>and</t> <t>how</t> <t>to</t> <t>specify</t> <t>from</t> <t>start</t> <t>to</t> <t>end</t>, <t>which</t> <t>I</t> <t>guess</t> <t>is</t> <t>going</t> <t>to</t> <t>be</t> <t>0</t>, <t>-1</t>.
"
675442|"<t>Comment</t> <t>out</t> <t>a</t> <t>Python</t> <t>code</t> <t>block</t>"|"<t>Is</t> <t>there</t> <t>a</t> <t>mechanism</t> <t>to</t> <t>comment</t> <t>out</t> <t>large</t> <t>blocks</t> <t>of</t> <t>Python</t> <t>code</t>?

<t>Right</t> <t>now</t>, <t>the</t> <t>only</t> <t>ways</t> <t>I</t> <t>can</t> <t>see</t> <t>of</t> <t>commenting</t> <t>out</t> <t>code</t> <t>are</t> <t>to</t> <t>either</t> <t>start</t> <t>every</t> <t>line</t> <t>with</t> <t>a</t> <code>#</code>, <t>or</t> <t>to</t> <t>enclose</t> <t>the</t> <t>code</t> <t>in</t> <t>triple</t> <t>quotes</t>: <code>""""""</code>.

<t>The</t> <t>problem</t> <t>with</t> <t>these</t> <t>is</t> <t>that</t> <t>inserting</t> <code>#</code> <t>before</t> <t>every</t> <t>line</t> <t>is</t> <t>cumbersome</t> <t>and</t> <code>""""""</code> <t>makes</t> <t>the</t> <t>string</t> <t>I</t> <t>want</t> <t>to</t> <t>use</t> <t>as</t> <t>a</t> <t>comment</t> <t>show</t> <t>up</t> <t>in</t> <t>generated</t> <t>documentation</t>.

<t>After</t> <t>reading</t> <t>all</t> <t>comments</t>, <t>the</t> <t>answer</t> <t>seems</t> <t>to</t> <t>be</t> ""<t>No</t>"".
"
676172|"<t>Full</t> <t>examples</t> <t>of</t> <t>using</t> <t>pySerial</t> <t>package</t>"|"<t>Can</t> <t>someone</t> <t>please</t> <t>show</t> <t>me</t> <t>a</t> <t>full</t> <t>python</t> <t>sample</t> <t>code</t> <t>that</t> <t>uses</t> <t>pyserial</t>, <t>i</t> <t>have</t> <t>the</t> <t>package</t> <t>and</t> <t>am</t> <t>wondering</t> <t>how</t> <t>to</t> <t>send</t> <t>the</t> <t>AT</t> <t>commands</t> <t>and</t> <t>read</t> <t>them</t> <t>back</t>!
"
678236|"<t>How</t> <t>to</t> <t>get</t> <t>the</t> <t>filename</t> <t>without</t> <t>the</t> <t>extension</t> <t>from</t> <t>a</t> <t>path</t> <t>in</t> <t>Python</t>?"|"<t>How</t> <t>to</t> <t>get</t> <t>the</t> <t>filename</t> <t>without</t> <t>the</t> <t>extension</t> <t>from</t> <t>a</t> <t>path</t> <t>in</t> <t>Python</t>?

<t>I</t> <t>found</t> <t>out</t> <t>a</t> <t>method</t> <t>called</t> <code><c>os</c><c>.</c><c>path</c><c>.</c><c>basename</c></code> <t>to</t> <t>get</t> <t>the</t> <t>filename</t> <t>with</t> <t>extension</t>. <t>But</t> <t>even</t> <t>when</t> <t>I</t> <t>import</t> <t>os</t>, <t>I</t> <t>am</t> <t>not</t> <t>able</t> <t>to</t> <t>call</t> <t>it</t> <code><c>path</c><c>.</c><c>basename</c></code>. <t>Is</t> <t>it</t> <t>possible</t> <t>to</t> <t>call</t> <t>it</t> <t>as</t> <t>directly</t> <t>as</t> <t>basename</t>?
"
699866|"<t>Python</t> <t>int</t> <t>to</t> <t>binary</t>?"|"<t>Are</t> <t>there</t> <t>any</t> <t>canned</t> <t>Python</t> <t>methods</t> <t>to</t> <t>convert</t> <t>an</t> <t>Integer</t> (<t>or</t> <t>Long</t>) <t>into</t> <t>a</t> <t>binary</t> <t>string</t> <t>in</t> <t>Python</t>?

<t>There</t> <t>are</t> <t>a</t> <t>myriad</t> <t>of</t> <t>dec2bin</t>() <t>functions</t> <t>out</t> <t>on</t> <t>Google...</t> <t>But</t> <t>I</t> <t>was</t> <t>hoping</t> <t>I</t> <t>could</t> <t>use</t> <t>a</t> <t>built-in</t> <t>function</t> <t>/</t> <t>library</t>.
"
704152|"<t>How</t> <t>can</t> <t>I</t> <t>convert</t> <t>a</t> <t>character</t> <t>to</t> <t>a</t> <t>integer</t> <t>in</t> <t>Python</t>, <t>and</t> <t>viceversa</t>?"|"<t>I</t> <t>want</t> <t>to</t> <t>get</t>, <t>given</t> <t>a</t> <t>character</t>, <t>its</t> <code><c>ASCII</c></code> <t>value</t>.

<t>For</t> <t>example</t>, <t>for</t> <t>the</t> <t>character</t> <code><c>a</c></code>, <t>I</t> <t>want</t> <t>to</t> <t>get</t> <code><c>97</c></code>, <t>and</t> <t>vice</t> <t>versa</t>.
"
713847|"<t>Recommendations</t> <t>of</t> <t>Python REST</t> (<t>web</t> <t>services</t>) <t>framework</t>?"|"<t>Is</t> <t>there</t> <t>a</t> <t>list</t> <t>somewhere</t> <t>of</t> <t>recommendations</t> <t>of</t> <t>different</t> <t>Python-based REST</t> <t>frameworks</t> <t>for</t> <t>use</t> <t>on</t> <t>the</t> <t>serverside</t> <t>to</t> <t>write</t> <t>your</t> <t>own</t> <t>RESTful</t> <t>APIs</t>? <t>Preferably</t> <t>with</t> <t>pros</t> <t>and</t> <t>cons</t>.

<t>Please</t> <t>feel</t> <t>free</t> <t>to</t> <t>add</t> <t>recommendations</t> <t>here</t>. :)
"
714063|"<t>Importing</t> <t>modules</t> <t>from</t> <t>parent</t> <t>folder</t>"|"<t>I</t> <t>am</t> <t>running</t> <t>Python</t> <t>2.5.</t>

<t>This</t> <t>is</t> <t>my</t> <t>folder</t> <t>tree</t>:

<code><c>ptdraft</c><c>/
</c>  <c>nib</c><c>.</c><c>py</c>
  <c>simulations</c><c>/
</c>    <c>life</c><c>/
</c>      <c>life</c><c>.</c><c>py</c>
</code>

(<t>I</t> <t>also</t> <t>have</t> <code><c>__init__</c><c>.</c><c>py</c></code> <t>in</t> <t>each</t> <t>folder</t>, <t>omitted</t> <t>here</t> <t>for</t> <t>readability</t>)

<t>How</t> <t>do</t> <t>I</t> <t>import</t> <t>the</t> <code><c>nib</c></code> <t>module</t> <t>from</t> <t>inside</t> <t>the</t> <code><c>life</c></code> <t>module</t>? <t>I</t> <t>am</t> <t>hoping</t> <t>it</t> <t>is</t> <t>possible</t> <t>to</t> <t>do</t> <t>without</t> <t>tinkering</t> <t>with</t> <t>sys.path.</t>

<t>Note</t>: <t>The</t> <t>main</t> <t>module</t> <t>being</t> <t>run</t> <t>is</t> <t>in</t> <t>the</t> <code><c>ptdraft</c></code> <t>folder</t>.
"
715417|"<t>Converting</t> <t>from</t> <t>a</t> <t>string</t> <t>to</t> <t>boolean</t> <t>in</t> <t>Python</t>?"|"<t>Does</t> <t>anyone</t> <t>know</t> <t>how</t> <t>to</t> <t>do</t> <t>convert</t> <t>from</t> <t>a</t> <t>string</t> <t>to</t> <t>a</t> <t>boolean</t> <t>in</t> <t>Python</t>? <t>I</t> <t>found</t> <t>this</t> <t>link</t>. <t>But</t> <t>it</t> <t>doesn't</t> <t>look</t> <t>like</t> <t>a</t> <t>proper</t> <t>way</t> <t>to</t> <t>do</t> <t>it</t>.  <t>I.e.</t> <t>using</t> <t>a</t> <t>built</t> <t>in</t> <t>functionality</t>, <t>etc</t>.

<t>EDIT</t>:

<t>The</t> <t>reason</t> <t>I</t> <t>asked</t> <t>this</t> <t>is</t> <t>because</t> <t>I</t> <t>learned</t> <code><c>int(</c>""<c>string</c>"")</code>, <t>from</t> <t>here</t>. <t>I</t> <t>tried</t> <code><c>bool(</c>""<c>string</c>"")</code> <t>but</t> <t>always</t> <t>got</t> <code><c>True</c></code>.

<code><c>&gt;&gt;&gt;</c> <c>bool(</c>""<c>False</c>"")
<c>True</c>
</code>
"
730764|"<t>Try/Except</t> <t>in</t> <t>Python</t>: <t>How</t> <t>do</t> <t>you</t> <t>properly</t> <t>ignore</t> <t>Exceptions</t>?"|"<t>When</t> <t>you</t> <t>just</t> <t>want</t> <t>to</t> <t>do</t> <t>a</t> <t>try-except</t> <t>without</t> <t>handling</t> <t>the</t> <t>exception</t>, <t>how</t> <t>do</t> <t>you</t> <t>do</t> <t>it</t> <t>in</t> <t>Python</t>?

<t>Is</t> <t>the</t> <t>following</t> <t>the</t> <t>right</t> <t>way</t> <t>to</t> <t>do</t> <t>it</t>?

<code><c>try</c>:
    <c>shutil</c><c>.</c><c>rmtree(</c><c>path</c>)
<c>except</c>:
    <c>pass</c>
</code>
"
733454|"<t>Best</t> <t>way</t> <t>to</t> <t>format</t> <t>integer</t> <t>as</t> <t>string</t> <t>with</t> <t>leading</t> <t>zeros</t>?"|"<t>I</t> <t>need</t> <t>to</t> <t>add</t> <t>leading</t> <t>zeros</t> <t>to</t> <t>integer</t> <t>to</t> <t>make</t> <t>a</t> <t>string</t> <t>with</t> <t>defined</t> <t>quantity</t> <t>of</t> <t>digits</t> (<t>$cnt</t>).
<t>What</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>translate</t> <t>this</t> <t>simple</t> <t>function</t> <t>from</t> <t>PHP</t> <t>to</t> <t>Python</t>:

<code><c>function</c> <c>add_nulls(</c><c>$</c><c>int</c>, <c>$</c><c>cnt</c><c>=</c><c>2</c>) {
    <c>$</c><c>int</c> <c>=</c> <c>intval(</c><c>$</c><c>int</c>);
    <c>for(</c><c>$</c><c>i</c><c>=</c><c>0</c>; <c>$</c><c>i</c><c>&lt;</c>(<c>$</c><c>cnt-strlen</c>(<c>$</c><c>int</c>)); <c>$</c><c>i</c><c>+</c><c>+</c>)
        <c>$</c><c>nulls</c> <c>.</c><c>=</c> '<c>0</c>';
    <c>return</c> <c>$</c><c>nulls</c><c>.</c><c>$</c><c>int</c>;
}
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>function</t> <t>that</t> <t>can</t> <t>do</t> <t>this</t>?
"
735975|"<t>Static</t> <t>methods</t> <t>in</t> <t>Python</t>?"|"<t>Is</t> <t>it</t> <t>possible</t> <t>to</t> <t>have</t> <t>static</t> <t>methods</t> <t>in</t> <t>Python</t> <t>so</t> <t>I</t> <t>can</t> <t>call</t> <t>them</t> <t>without</t> <t>initializing</t> <t>a</t> <t>class</t>, <t>like</t>:

<code><c>ClassName</c><c>.</c><c>StaticMethod</c> ( )
</code>
"
739654|"<t>How</t> <t>to</t> <t>make</t> <t>a</t> <t>chain</t> <t>of</t> <t>function</t> <t>decorators</t>?"|"<t>How</t> <t>can</t> <t>I</t> <t>make</t> <t>two</t> <t>decorators</t> <t>in</t> <t>Python</t> <t>that</t> <t>would</t> <t>do</t> <t>the</t> <t>following</t>?

<code><c>@</c><c>makebold</c>
<c>@</c><c>makeitalic</c>
<c>def</c> <c>say(</c>):
   <c>return</c> ""<c>Hello</c>""
</code>

<t>...which</t> <t>should</t> <t>return</t>:

<code>""<c>&lt;</c><c>b</c><c>&gt;&lt;</c><c>i</c><c>&gt;</c><c>Hello</c><c>&lt;/i&gt;&lt;/b&gt;</c>""
</code>

<t>I'm</t> <t>not</t> <t>trying</t> <t>to</t> <t>make</t> <code><c>HTML</c></code> <t>this</t> <t>way</t> <t>in</t> <t>a</t> <t>real</t> <t>application</t> <t>-</t> <t>just</t> <t>trying</t> <t>to</t> <t>understand</t> <t>how</t> <t>decorators</t> <t>and</t> <t>decorator</t> <t>chaining</t> <t>works</t>.
"
739993|"<t>How</t> <t>can</t> <t>I</t> <t>get</t> <t>a</t> <t>list</t> <t>of</t> <t>locally</t> <t>installed</t> <t>Python</t> <t>modules</t>?"|"<t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>get</t> <t>a</t> <t>list</t> <t>of</t> <t>Python</t> <t>modules</t>, <t>which</t> <t>are</t> <t>in</t> <t>my</t> <t>Python</t> <t>installation</t> (<t>UNIX</t> <t>server</t>).

<t>How</t> <t>can</t> <t>you</t> <t>get</t> <t>a</t> <t>list</t> <t>of</t> <t>Python</t> <t>modules</t> <t>installed</t> <t>in</t> <t>your</t> <t>computer</t>?
"
740287|"<t>How</t> <t>to</t> <t>check</t> <t>if</t> <t>one</t> <t>of</t> <t>the</t> <t>following</t> <t>items</t> <t>is</t> <t>in</t> <t>a</t> <t>list</t>?"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>find</t> <t>a</t> <t>short</t> <t>way</t> <t>to</t> <t>see</t> <t>if</t> <t>any</t> <t>of</t> <t>the</t> <t>following</t> <t>items</t> <t>is</t> <t>in</t> <t>a</t> <t>list</t>, <t>but</t> <t>my</t> <t>first</t> <t>attempt</t> <t>does</t> <t>not</t> <t>work</t>. <t>Besides</t> <t>writing</t> <t>a</t> <t>function</t> <t>to</t> <t>accomplish</t> <t>this</t>, <t>is</t> <t>the</t> <t>any</t> <t>short</t> <t>way</t> <t>to</t> <t>check</t> <t>if</t> <t>one</t> <t>of</t> <t>multiple</t> <t>items</t> <t>is</t> <t>in</t> <t>a</t> <t>list</t>.

<code><c>&gt;&gt;&gt;</c> <c>a</c> <c>=</c> [<c>2</c>,<c>3</c>,<c>4</c>]
<c>&gt;&gt;&gt;</c> <c>print</c> (<c>1</c> <c>or</c> <c>2</c>) <c>in</c> <c>a</c>
<c>False</c>
<c>&gt;&gt;&gt;</c> <c>print</c> (<c>2</c> <c>or</c> <c>1</c>) <c>in</c> <c>a</c>
<c>True</c>
</code>
"
743164|"<t>Emulate</t> <t>a</t> <t>do-while</t> <t>loop</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>need</t> <t>to</t> <t>emulate</t> <t>a</t> <t>do-while</t> <t>loop</t> <t>in</t> <t>a</t> <t>Python</t> <t>program</t>. <t>Unfortunately</t>, <t>the</t> <t>following</t> <t>straightforward</t> <t>code</t> <t>does</t> <t>not</t> <t>work</t>:

<code><c>l</c> <c>=</c> [ <c>1</c>, <c>2</c>, <c>3</c> ]
<c>i</c> <c>=</c> <c>l</c><c>.</c><c>__iter__(</c>)
<c>s</c> <c>=</c> <c>None</c>
<c>while</c> <c>True</c> :
  <c>if</c> <c>s</c> :
    <c>print</c> <c>s</c>
  <c>try</c> :
    <c>s</c> <c>=</c> <c>i</c><c>.</c><c>next(</c>)
  <c>except</c> <c>StopIteration</c> :
    <c>break</c>
<c>print</c> ""<c>done</c>""
</code>

<t>Instead</t> <t>of</t> ""<t>1</t>,<t>2</t>,<t>3</t>,<t>done</t>"", <t>it</t> <t>prints</t> <t>the</t> <t>following</t> <t>output</t>:

<code>[<c>stdout</c>:]<c>1</c>
[<c>stdout</c>:]<c>2</c>
[<c>stdout</c>:]<c>3</c>
<c>None</c>['<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
', '  <c>File</c> ""<c>test_python</c><c>.</c><c>py</c>"", <c>line</c> <c>8</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>s</c> <c>=</c> <c>i</c><c>.</c><c>next(</c>)
', '<c>StopIteration</c>
']
</code>

<t>What</t> <t>can</t> <t>I</t> <t>do</t> <t>in</t> <t>order</t> <t>to</t> <t>catch</t> <t>the</t> '<t>stop</t> <t>iteration</t>' <t>exception</t> <t>and</t> <t>break</t> <t>a</t> <t>while</t>
<t>loop</t> <t>properly</t>?

<t>An</t> <t>example</t> <t>of</t> <t>why</t> <t>such</t> <t>a</t> <t>thing</t> <t>may</t> <t>be</t> <t>needed</t> <t>is</t> <t>shown</t> <t>below</t> <t>as</t> <t>pseudocode</t>.

<t>State</t> <t>machine</t>:

<code><c>s</c> <c>=</c> """"
<c>while</c> <c>True</c> :
  <c>if</c> <c>state</c> <c>is</c> <c>STATE_CODE</c> :
    <c>if</c> ""<c>//</c>"" <c>in</c> <c>s</c> :
      <c>tokens</c><c>.</c><c>add(</c> <c>TOKEN_COMMENT</c>, <c>s</c><c>.</c><c>split(</c> ""<c>//</c>"" )[<c>1</c>] )
      <c>state</c> <c>=</c> <c>STATE_COMMENT</c>
    <c>else</c> :
      <c>tokens</c><c>.</c><c>add(</c> <c>TOKEN_CODE</c>, <c>s</c> )
  <c>if</c> <c>state</c> <c>is</c> <c>STATE_COMMENT</c> :
    <c>if</c> ""<c>//</c>"" <c>in</c> <c>s</c> :
      <c>tokens</c><c>.</c><c>append(</c> <c>TOKEN_COMMENT</c>, <c>s</c><c>.</c><c>split(</c> ""<c>//</c>"" )[<c>1</c>] )
    <c>else</c>
      <c>state</c> <c>=</c> <c>STATE_CODE</c>
      # <c>Re-evaluate</c> <c>same</c> <c>line</c>
      <c>continue</c>
  <c>try</c> :
    <c>s</c> <c>=</c> <c>i</c><c>.</c><c>next(</c>)
  <c>except</c> <c>StopIteration</c> :
    <c>break</c>
</code>
"
743806|"<t>How</t> <t>to</t> <t>split</t> <t>a</t> <t>string</t> <t>into</t> <t>a</t> <t>list</t>?"|"<t>I</t> <t>want</t> <t>my</t> <t>python</t> <t>function</t> <t>to</t> <t>split</t> <t>a</t> <t>sentence</t> (<t>input</t>) <t>and</t> <t>store</t> <t>each</t> <t>word</t> <t>in</t> <t>a</t> <t>list</t>. <t>The</t> <t>code</t> <t>that</t> <t>I've</t> <t>written</t> <t>so</t> <t>far</t> <t>splits</t> <t>the</t> <t>sentence</t>, <t>but</t> <t>does</t> <t>not</t> <t>store</t> <t>the</t> <t>words</t> <t>as</t> <t>a</t> <t>list</t>. <t>How</t> <t>do</t> <t>I</t> <t>do</t> <t>that</t>?

<code><c>def</c> <c>split_line(</c><c>text</c>):

    # <c>split</c> <c>the</c> <c>text</c>
    <c>words</c> <c>=</c> <c>text</c><c>.</c><c>split(</c>)

    # <c>for</c> <c>each</c> <c>word</c> <c>in</c> <c>the</c> <c>line</c>:
    <c>for</c> <c>word</c> <c>in</c> <c>words</c>:

        # <c>print</c> <c>the</c> <c>word</c>
        <c>print(</c><c>word</c>)
</code>
"
750136|"<t>How</t> <t>is</t> <t>returning</t> <t>the</t> <t>output</t> <t>of</t> <t>a</t> <t>function</t> <t>different</t> <t>than</t> <t>printing</t> <t>it</t>?"|"<t>In</t> <t>my</t> <t>previous</t> <t>question</t>, <t>Andrew Jaffe</t> <t>writes</t>: 


  <t>In</t> <t>addition</t> <t>to</t> <t>all</t> <t>of</t> <t>the</t> <t>other</t> <t>hints</t> <t>and</t> <t>tips</t>, <t>I</t> <t>think</t> <t>you're</t> <t>missing</t> <t>something</t> <t>crucial</t>: <t>your</t> <t>functions</t> <t>actually</t> <t>need</t> <t>to</t> <t>return</t> <t>something</t>.
  <t>When</t> <t>you</t> <t>create</t> <code><c>autoparts(</c>)</code> <t>or</t> <code><c>splittext(</c>)</code>, <t>the</t> <t>idea</t> <t>is</t> <t>that</t> <t>this</t> <t>will</t> <t>be</t> <t>a</t> <t>function</t> <t>that</t> <t>you</t> <t>can</t> <t>call</t>, <t>and</t> <t>it</t> <t>can</t> (<t>and</t> <t>should</t>) <t>give</t> <t>something</t> <t>back</t>.
  <t>Once</t> <t>you</t> <t>figure</t> <t>out</t> <t>the</t> <t>output</t> <t>that</t> <t>you</t> <t>want</t> <t>your</t> <t>function</t> <t>to</t> <t>have</t>, <t>you</t> <t>need</t> <t>to</t> <t>put</t> <t>it</t> <t>in</t> <t>a</t> <code><c>return</c></code> <t>statement</t>.


<code><c>def</c> <c>autoparts(</c>):
    <c>parts_dict</c> <c>=</c> {}
    <c>list_of_parts</c> <c>=</c> <c>open(</c>'<c>list_of_parts</c><c>.</c><c>txt</c>', '<c>r</c>')

    <c>for</c> <c>line</c> <c>in</c> <c>list_of_parts</c>:
        <c>k</c>, <c>v</c> <c>=</c> <c>line</c><c>.</c><c>split(</c>)
        <c>parts_dict</c>[<c>k</c>] <c>=</c> <c>v</c>

    <c>print(</c><c>parts_dict</c>)

<c>&gt;&gt;&gt;</c> <c>autoparts(</c>)
{'<c>part</c> <c>A</c>': <c>1</c>, '<c>part</c> <c>B</c>': <c>2</c>, ...}
</code>

<t>This</t> <t>function</t> <t>creates</t> <t>a</t> <t>dictionary</t>, <t>but</t> <t>it</t> <t>does</t> <t>not</t> <t>return</t> <t>something</t>.  <t>However</t>, <t>since</t> <t>I</t> <t>added</t> <t>the</t> <code><c>print</c></code>, <t>the</t> <t>output</t> <t>of</t> <t>the</t> <t>function</t> <t>is</t> <t>shown</t> <t>when</t> <t>I</t> <t>run</t> <t>the</t> <t>function</t>.  <t>What</t> <t>is</t> <t>the</t> <t>difference</t> <t>between</t> <code><c>return</c></code><t>ing</t> <t>something</t> <t>and</t> <code><c>print</c></code><t>ing</t> <t>it</t>?
"
761804|"<t>Trimming</t> <t>a</t> <t>string</t> <t>in</t> <t>Python</t>"|"<t>How</t> <t>do</t> <t>I</t> <t>remove</t> <t>leading</t> <t>and</t> <t>trailing</t> <t>whitespace</t> <t>from</t> <t>a</t> <t>string</t> <t>in</t> <t>Python</t>?

<t>For</t> <t>example</t>:

<code>"" <c>Hello</c> "" <c>-</c><c>-</c><c>&gt;</c> ""<c>Hello</c>""
"" <c>Hello</c>""  <c>-</c><c>-</c><c>&gt;</c> ""<c>Hello</c>""
""<c>Hello</c> ""  <c>-</c><c>-</c><c>&gt;</c> ""<c>Hello</c>""
""<c>Bob</c> <c>has</c> <c>a</c> <c>cat</c>"" <c>-</c><c>-</c><c>&gt;</c> ""<c>Bob</c> <c>has</c> <c>a</c> <c>cat</c>""
</code>
"
773814|"<t>Plot</t> <t>logarithmic</t> <t>axes</t> <t>with</t> <t>matplotlib</t> <t>in</t> <t>python</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>plot</t> <t>a</t> <t>graph</t> <t>with</t> <t>one</t> <t>logarithmic</t> <t>axis</t> <t>using</t> <t>matplotlib</t>. 

<t>I've</t> <t>been</t> <t>reading</t> <t>the</t> <t>docs</t>, <t>but</t> <t>can't</t> <t>figure</t> <t>out</t> <t>the</t> <t>syntax</t>. <t>I</t> <t>know</t> <t>that</t> <t>it's</t> <t>probably</t> <t>something</t> <t>simple</t> <t>like</t> '<t>scale=linear</t>' <t>in</t> <t>the</t> <t>plot</t> <t>arguments</t>, <t>but</t> <t>I</t> <t>can't</t> <t>seem</t> <t>to</t> <t>get</t> <t>it</t> <t>right</t>

<t>Sample</t> <t>program</t>: 

<code><c>from</c> <c>pylab</c> <c>import</c> <c>*</c>
<c>import</c> <c>matplotlib</c><c>.</c><c>pyplot</c>  <c>as</c> <c>pyplot</c>
<c>a</c> <c>=</c> [ <c>pow(</c><c>10</c>,<c>i</c>) <c>for</c> <c>i</c> <c>in</c> <c>range(</c><c>10</c>) ]
<c>fig</c> <c>=</c> <c>pyplot</c><c>.</c><c>figure(</c>)
<c>ax</c> <c>=</c> <c>fig</c><c>.</c><c>add_subplot(</c><c>2</c>,<c>1</c>,<c>1</c>)

<c>line</c>, <c>=</c> <c>ax</c><c>.</c><c>plot(</c><c>a</c>, <c>color</c><c>=</c>'<c>blue</c>', <c>lw</c><c>=</c><c>2</c>)
<c>show(</c>)
</code>
"
805066|"<t>Call</t> <t>a</t> <t>parent</t> <t>class's</t> <t>method</t> <t>from</t> <t>child</t> <t>class</t> <t>in</t> <t>Python</t>?"|"<t>When</t> <t>creating</t> <t>a</t> <t>simple</t> <t>object</t> <t>hierarchy</t> <t>in</t> <t>Python</t>, <t>I'd</t> <t>like</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>invoke</t> <t>methods</t> <t>of</t> <t>the</t> <t>parent</t> <t>class</t> <t>from</t> <t>a</t> <t>derived</t> <t>class</t>.  <t>In Perl</t> <t>and</t> <t>Java</t>, <t>there</t> <t>is</t> <t>a</t> <t>keyword</t> <t>for</t> <t>this</t> (<t>super</t>).  <t>In</t> <t>Perl</t>, <t>I</t> <t>might</t> <t>do</t> <t>this</t>:

<code><c>package</c> <c>Foo</c>;

<c>sub</c> <c>frotz</c> {
    <c>return</c> ""<c>Bamf</c>"";
}

<c>package</c> <c>Bar</c>;
<c>@</c><c>ISA</c> <c>=</c> <c>qw(</c><c>Foo</c>);

<c>sub</c> <c>frotz</c> {
   <c>my</c> <c>$</c><c>str</c> <c>=</c> <c>SUPER</c>::<c>frotz(</c>);
   <c>return</c> <c>uc(</c><c>$</c><c>str</c>);
}
</code>

<t>In</t> <t>python</t>, <t>it</t> <t>appears</t> <t>that</t> <t>I</t> <t>have</t> <t>to</t> <t>name</t> <t>the</t> <t>parent</t> <t>class</t> <t>explicitly</t> <t>from</t> <t>the</t> <t>child</t>.
<t>In</t> <t>the</t> <t>example</t> <t>above</t>, <t>I'd</t> <t>have</t> <t>to</t> <t>do</t> <t>something</t> <t>like</t> <t>Foo</t>::<t>frotz</t>().  

<t>This</t> <t>doesn't</t> <t>seem</t> <t>right</t>, <t>since</t> <t>this</t> <t>behavior</t> <t>makes</t> <t>it</t> <t>hard</t> <t>to</t> <t>make</t> <t>deep</t> <t>hierarchies</t>.  <t>If</t> <t>children</t> <t>need</t> <t>to</t> <t>know</t> <t>what</t> <t>class</t> <t>defined</t> <t>an</t> <t>inherited</t> <t>method</t>, <t>then</t> <t>all</t> <t>sorts</t> <t>of</t> <t>information</t> <t>pain</t> <t>is</t> <t>created</t>.  

<t>Is</t> <t>this</t> <t>an</t> <t>actual</t> <t>limitation</t> <t>in</t> <t>python</t>, <t>a</t> <t>gap</t> <t>in</t> <t>my</t> <t>understanding</t> <t>or</t> <t>both</t>?
"
817087|"<t>Call</t> <t>a</t> <t>function</t> <t>with</t> <t>argument</t> <t>list</t> <t>in</t> <t>python</t>"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>call</t> <t>a</t> <t>function</t> <t>inside</t> <t>another</t> <t>function</t> <t>in</t> <t>python</t>, <t>but</t> <t>can't</t> <t>find</t> <t>the</t> <t>right</t> <t>syntax</t>. <t>What</t> <t>I</t> <t>want</t> <t>to</t> <t>do</t> <t>is</t> <t>something</t> <t>like</t> <t>this</t>:

<code><c>def</c> <c>wrapper(</c><c>func</c>, <c>args</c>):
    <c>func(</c><c>args</c>)

<c>def</c> <c>func1(</c><c>x</c>):
    <c>print(</c><c>x</c>)

<c>def</c> <c>func2(</c><c>x</c>, <c>y</c>, <c>z</c>):
    <c>return</c> <c>x</c><c>+</c><c>y</c><c>+</c><c>z</c>

<c>wrapper(</c><c>func1</c>, [<c>x</c>])
<c>wrapper(</c><c>func2</c>, [<c>x</c>, <c>y</c>, <c>z</c>])
</code>

<t>In</t> <t>this</t> <t>case</t> <t>first</t> <t>call</t> <t>will</t> <t>work</t>, <t>and</t> <t>second</t> <t>won't</t>.
<t>What</t> <t>I</t> <t>want</t> <t>to</t> <t>modify</t> <t>is</t> <t>the</t> <t>wrapper</t> <t>function</t> <t>and</t> <t>not</t> <t>the</t> <t>called</t> <t>functions</t>.
"
842059|"<t>Is</t> <t>there</t> <t>a</t> <t>portable</t> <t>way</t> <t>to</t> <t>get</t> <t>the</t> <t>current</t> <t>username</t> <t>in</t> <t>Python</t>?"|"<t>Is</t> <t>there</t> <t>a</t> <t>portable</t> <t>way</t> <t>to</t> <t>get</t> <t>the</t> <t>current</t> <t>user's</t> <t>username</t> <t>in</t> <t>Python</t> (<t>i.e.,</t> <t>one</t> <t>that</t> <t>works</t> <t>under</t> <t>both</t> <t>Linux</t> <t>and</t> <t>Windows</t>, <t>at</t> <t>least</t>).  <t>It</t> <t>would</t> <t>work</t> <t>like</t> <code><c>os</c><c>.</c><c>getuid</c></code>:

<code><c>&gt;&gt;&gt;</c> <c>os</c><c>.</c><c>getuid(</c>)
<c>42</c>
<c>&gt;&gt;&gt;</c> <c>os</c><c>.</c><c>getusername(</c>)
'<c>slartibartfast</c>'
</code>

<t>I</t> <t>googled</t> <t>around</t> <t>and</t> <t>was</t> <t>surprised</t> <t>not</t> <t>to</t> <t>find</t> <t>a</t> <t>definitive</t> <t>answer</t> (<t>although</t> <t>perhaps</t> <t>I</t> <t>was</t> <t>just</t> <t>googling</t> <t>poorly</t>).  <t>The</t> <t>pwd</t> <t>module</t> <t>provides</t> <t>a</t> <t>relatively</t> <t>easy</t> <t>way</t> <t>to</t> <t>achieve</t> <t>this</t> <t>under</t>, <t>say</t>, <t>Linux</t>, <t>but</t> <t>it</t> <t>is</t> <t>not</t> <t>present</t> <t>on</t> <t>Windows</t>.  <t>Some</t> <t>of</t> <t>the</t> <t>search</t> <t>results</t> <t>suggested</t> <t>that</t> <t>getting</t> <t>the</t> <t>username</t> <t>under</t> <t>Windows</t> <t>can</t> <t>be</t> <t>complicated</t> <t>in</t> <t>certain</t> <t>circumstances</t> (<t>e.g.,</t> <t>running</t> <t>as</t> <t>a</t> <t>Windows</t> <t>service</t>), <t>although</t> <t>I</t> <t>haven't</t> <t>verified</t> <t>that</t>.
"
843277|"<t>How</t> <t>do</t> <t>I</t> <t>check</t> <t>if</t> <t>a</t> <t>variable</t> <t>exists</t>?"|"<t>I</t> <t>want</t> <t>to</t> <t>check</t> <t>if</t> <t>a</t> <t>variable</t> <t>exists</t>. <t>Now I'm</t> <t>doing</t> <t>something</t> <t>like</t> <t>this</t>:

<code><c>try</c>:
   <c>myVar</c>
<c>except</c> <c>NameError</c>:
   # <c>Do</c> <c>something</c><c>.</c>
</code>

<t>Are</t> <t>there</t> <t>other</t> <t>ways</t> <t>without</t> <t>exceptions</t>?
"
845058|"<t>How</t> <t>to</t> <t>get</t> <t>line</t> <t>count</t> <t>cheaply</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>need</t> <t>to</t> <t>get</t> <t>a</t> <t>line</t> <t>count</t> <t>of</t> <t>a</t> <t>large</t> <t>file</t> (<t>hundreds</t> <t>of</t> <t>thousands</t> <t>of</t> <t>lines</t>) <t>in</t> <t>python</t>. <t>What</t> <t>is</t> <t>the</t> <t>most</t> <t>efficient</t> <t>way</t> <t>both</t> <t>memory-</t> <t>and</t> <t>time-wise</t>?

<t>At</t> <t>the</t> <t>moment</t> <t>I</t> <t>do</t>:

<code><c>def</c> <c>file_len(</c><c>fname</c>):
    <c>with</c> <c>open(</c><c>fname</c>) <c>as</c> <c>f</c>:
        <c>for</c> <c>i</c>, <c>l</c> <c>in</c> <c>enumerate(</c><c>f</c>):
            <c>pass</c>
    <c>return</c> <c>i</c> <c>+</c> <c>1</c>
</code>

<t>is</t> <t>it</t> <t>possible</t> <t>to</t> <t>do</t> <t>any</t> <t>better</t>?
"
850795|"<t>Different</t> <t>ways</t> <t>of</t> <t>clearing</t> <t>lists</t>"|"<t>Is</t> <t>there</t> <t>any</t> <t>reason</t> <t>to</t> <t>do</t> <t>anything</t> <t>more</t> <t>complicated</t> <t>than</t> <t>one</t> <t>of</t> <t>these</t> <t>two</t> <t>lines</t> <t>when</t> <t>you</t> <t>want</t> <t>to</t> <t>clear</t> <t>a</t> <t>list</t> <t>in</t> <t>Python</t>?

<code><c>old_list</c> <c>=</c> []
<c>old_list</c> <c>=</c> <c>list(</c>)
</code>

<t>The</t> <t>reason</t> <t>I</t> <t>ask</t> <t>is</t> <t>that</t> <t>I</t> <t>just</t> <t>saw</t> <t>this</t> <t>in</t> <t>some</t> <t>running</t> <t>code</t>:

<code><c>del</c> <c>old_list</c>[ <c>0</c>:<c>len(</c><c>old_list</c>) ]
</code>
"
865115|"<t>How</t> <t>do</t> <t>I</t> <t>correctly</t> <t>clean</t> <t>up</t> <t>a</t> <t>Python</t> <t>object</t>?"|"<code><c>class</c> <c>Package</c>:
    <c>def</c> <c>__init__(</c><c>self</c>):
        <c>self</c><c>.</c><c>files</c> <c>=</c> []

    # ...

    <c>def</c> <c>__del__(</c><c>self</c>):
        <c>for</c> <c>file</c> <c>in</c> <c>self</c><c>.</c><c>files</c>:
            <c>os</c><c>.</c><c>unlink(</c><c>file</c>)
</code>

<code><c>__del__(</c><c>self</c>)</code> <t>above</t> <t>fails</t> <t>with</t> <t>an</t> <t>AttributeError</t> <t>exception</t>.  <t>I</t> <t>understand</t> <t>Python</t> <t>doesn't</t> <t>guarantee</t> <t>the</t> <t>existence</t> <t>of</t> ""<t>global</t> <t>variables</t>"" (<t>member</t> <t>data</t> <t>in</t> <t>this</t> <t>context</t>?) <t>when</t> <code><c>__del__(</c>)</code> <t>is</t> <t>invoked</t>.  <t>If</t> <t>that</t> <t>is</t> <t>the</t> <t>case</t> <t>and</t> <t>this</t> <t>is</t> <t>the</t> <t>reason</t> <t>for</t> <t>the</t> <t>exception</t>, <t>how</t> <t>do</t> <t>I</t> <t>make</t> <t>sure</t> <t>the</t> <t>object</t> <t>destructs</t> <t>properly</t>?
"
890128|"<t>Why</t> <t>are</t> <t>Python</t> <t>lambdas</t> <t>useful</t>?"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>figure</t> <t>out</t> <t>Python</t> <t>lambdas</t>.  <t>Is</t> <t>lambda</t> <t>one</t> <t>of</t> <t>those</t> ""<t>interesting</t>"" <t>language</t> <t>items</t> <t>that</t> <t>in</t> <t>real</t> <t>life</t> <t>should</t> <t>be</t> <t>forgotten</t>? 

<t>I'm</t> <t>sure</t> <t>there</t> <t>are</t> <t>some</t> <t>edge</t> <t>cases</t> <t>where</t> <t>it</t> <t>might</t> <t>be</t> <t>needed</t>, <t>but</t> <t>given</t> <t>the</t> <t>obscurity</t> <t>of</t> <t>it</t>, <t>the</t> <t>potential</t> <t>of</t> <t>it</t> <t>being</t> <t>redefined</t> <t>in</t> <t>future</t> <t>releases</t> (<t>my</t> <t>assumption</t> <t>based</t> <t>on</t> <t>the</t> <t>various</t> <t>definitions</t> <t>of</t> <t>it</t>) <t>and</t> <t>the</t> <t>reduced</t> <t>coding</t> <t>clarity</t> <t>-</t> <t>should</t> <t>it</t> <t>be</t> <t>avoided</t>?  

<t>This</t> <t>reminds</t> <t>me</t> <t>of</t> <t>overflowing</t> (<t>buffer</t> <t>overflow</t>) <t>of</t> <t>C</t> <t>types</t> <t>-</t> <t>pointing</t> <t>to</t> <t>the</t> <t>top</t> <t>variable</t> <t>and</t> <t>overloading</t> <t>to</t> <t>set</t> <t>the</t> <t>other</t> <t>field</t> <t>values</t>.  <t>It</t> <t>feels</t> <t>like</t> <t>sort</t> <t>of</t> <t>a</t> <t>techie</t> <t>showmanship</t> <t>but</t> <t>maintenance</t> <t>coder</t> <t>nightmare</t>.
"
893162|"<t>What's</t> <t>a</t> <t>good</t> <t>IDE</t> <t>for</t> <t>Python</t> <t>on</t> <t>Mac OS</t> <t>X</t>?"|"<t>I'm</t> <t>about</t> <t>to</t> <t>start</t> <t>a</t> <t>new</t> <t>job</t> <t>where</t> <t>the</t> <t>coding</t> <t>practices</t> <t>are</t> <t>heavily</t> <t>centered</t> <t>around</t> <t>TDD</t> <t>and</t> <t>refactoring</t>, <t>and</t> <t>whose</t> <t>primary</t> <t>development</t> <t>language</t> <t>is</t> <t>Python</t>.  <t>I</t> <t>come</t> <t>from</t> <t>the</t> <t>Java</t> <t>world</t>, <t>and</t> <t>have</t> <t>been</t> <t>a</t> <t>confident</t> <t>user</t> <t>of</t> <t>Eclipse</t> <t>for</t> <t>a</t> <t>good</t>, <t>long</t> <t>time</t>.  <t>When</t> <t>not</t> <t>working</t> <t>in</t> <t>Java</t>, <t>I</t> <t>use</t> <t>emacs</t>.

<t>I'm</t> <t>looking</t> <t>for</t> <t>an</t> <t>IDE</t> <t>for</t> <t>Python</t> <t>that</t> <t>will</t> <t>give</t> <t>me</t> <t>a</t> <t>lot</t> <t>of</t> <t>the</t> <t>capabilities</t> <t>I've</t> <t>grown</t> <t>used</t> <t>to</t> <t>with</t> <t>Eclipse</t>, <t>not</t> <t>only</t> <t>for</t> <t>refactoring</t> <t>but</t> <t>in</t> <t>terms</t> <t>of</t> <t>code</t> <t>completion</t>, <t>project</t> <t>management</t>, <t>SCM</t> <t>integration</t> (<t>currently</t> <t>CVS</t>, <t>but</t> <t>likely</t> <t>to</t> <t>switch</t> <t>to</t> <t>git</t> <t>one</t> <t>of</t> <t>these</t> <t>days</t>) <t>et</t> <t>al</t>.

<t>What IDE</t> <t>should</t> <t>I</t> <t>use</t>?
"
899103|"<t>Writing</t> <t>a</t> <t>list</t> <t>to</t> <t>a</t> <t>file</t> <t>with</t> <t>Python</t>"|"<t>Is</t> <t>this</t> <t>the</t> <t>cleanest</t> <t>way</t> <t>to</t> <t>write</t> <t>a</t> <t>list</t> <t>to</t> <t>a</t> <t>file</t>, <t>since</t> <code><c>writelines(</c>)</code> <t>doesn't</t> <t>insert</t> <t>newline</t> <t>characters</t>?

<code><c>file</c><c>.</c><c>writelines(</c>[""<c>%</c><c>s</c><c>\n</c>"" <c>%</c> <c>item</c>  <c>for</c> <c>item</c> <c>in</c> <c>list</c>])
</code>

<t>It</t> <t>seems</t> <t>like</t> <t>there</t> <t>would</t> <t>be</t> <t>a</t> <t>standard</t> <t>way...</t>
"
903853|"<t>How</t> <t>do</t> <t>you</t> <t>extract</t> <t>a</t> <t>column</t> <t>from</t> <t>a</t> <t>multi-dimensional</t> <t>array</t>?"|"<t>Does</t> <t>anybody</t> <t>know</t> <t>how</t> <t>to</t> <t>extract</t> <t>a</t> <t>column</t> <t>from</t> <t>a</t> <t>multi-dimensional</t> <t>array</t> <t>in</t> <t>Python</t>?
"
919680|"<t>Can</t> <t>a</t> <t>variable</t> <t>number</t> <t>of</t> <t>arguments</t> <t>be</t> <t>passed</t> <t>to</t> <t>a</t> <t>function</t>?"|"<t>In</t> <t>a</t> <t>similar</t> <t>way</t> <t>to</t> <t>using</t> <t>varargs</t> <t>in</t> <t>C</t> <t>or</t> <t>C++</t>:

<code><c>fn(</c><c>a</c>, <c>b</c>)
<c>fn(</c><c>a</c>, <c>b</c>, <c>c</c>, <c>d</c>, ...)
</code>
"
930397|"<t>Getting</t> <t>the</t> <t>last</t> <t>element</t> <t>of</t> <t>a</t> <t>list</t> <t>in</t> <t>Python</t>"|"<t>In</t> <t>Python</t>, <t>how</t> <t>do</t> <t>you</t> <t>get</t> <t>the</t> <t>last</t> <t>element</t> <t>of</t> <t>a</t> <t>list</t>?
"
931092|"<t>Reverse</t> <t>a</t> <t>string</t> <t>in</t> <t>Python</t>"|"<t>There</t> <t>is</t> <t>no</t> <t>built</t> <t>in</t> <code><c>reverse</c></code> <t>function</t> <t>in</t> <t>Python's</t> <code><c>str</c></code> <t>object</t>. <t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>of</t> <t>implementing</t> <t>this</t>?

<t>If</t> <t>supplying</t> <t>a</t> <t>very</t> <t>concise</t> <t>answer</t>, <t>please</t> <t>elaborate</t> <t>on</t> <t>it's</t> <t>efficiency</t>. <t>Is</t> <t>the</t> <code><c>str</c></code> <t>converted</t> <t>to</t> <t>a</t> <t>different</t> <t>object</t>, <t>etc</t>. 
"
944700|"<t>How</t> <t>to</t> <t>check</t> <t>for</t> <t>NaN</t> <t>in</t> <t>python</t>?"|"<code><c>float(</c>'<c>nan</c>')</code> <t>results</t> <t>in</t> <t>Nan</t> (<t>not</t> <t>a</t> <t>number</t>). <t>But</t> <t>how</t> <t>do</t> <t>I</t> <t>check</t> <t>for</t> <t>it</t>? <t>Should</t> <t>be</t> <t>very</t> <t>easy</t>, <t>but</t> <t>I</t> <t>cannot</t> <t>find</t> <t>it</t>.
"
952914|"<t>Making</t> <t>a</t> <t>flat</t> <t>list</t> <t>out</t> <t>of</t> <t>list</t> <t>of</t> <t>lists</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>wonder</t> <t>whether</t> <t>there</t> <t>is</t> <t>a</t> <t>shortcut</t> <t>to</t> <t>make</t> <t>a</t> <t>simple</t> <t>list</t> <t>out</t> <t>of</t> <t>list</t> <t>of</t> <t>lists</t> <t>in</t> <t>Python</t>.

<t>I</t> <t>can</t> <t>do</t> <t>that</t> <t>in</t> <t>a</t> <t>for</t> <t>loop</t>, <t>but</t> <t>maybe</t> <t>there</t> <t>is</t> <t>some</t> <t>cool</t> ""<t>one-liner</t>""? <t>I</t> <t>tried</t> <t>it</t> <t>with</t> <t>reduce</t>, <t>but</t> <t>I</t> <t>get</t> <t>an</t> <t>error</t>.

<t>Code</t>

<code><c>l</c> <c>=</c> [[<c>1</c>, <c>2</c>, <c>3</c>], [<c>4</c>, <c>5</c>, <c>6</c>], [<c>7</c>], [<c>8</c>, <c>9</c>]]
<c>reduce(</c><c>lambda</c> <c>x</c>, <c>y</c>: <c>x</c><c>.</c><c>extend(</c><c>y</c>), <c>l</c>)
</code>

<t>Error</t> <t>message</t>

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>&lt;</c><c>stdin</c><c>&gt;</c>"", <c>line</c> <c>1</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
  <c>File</c> ""<c>&lt;</c><c>stdin</c><c>&gt;</c>"", <c>line</c> <c>1</c>, <c>in</c> <c>&lt;</c><c>lambda</c><c>&gt;</c>
<c>AttributeError</c>: '<c>NoneType</c>' <c>object</c> <c>has</c> <c>no</c> <c>attribute</c> '<c>extend</c>'
</code>
"
954834|"<t>How</t> <t>do</t> <t>I</t> <t>use</t> <t>raw_input</t> <t>in</t> <t>Python</t> <t>3</t>"|"<code><c>import</c> <c>sys</c>
<c>print</c> (<c>sys</c><c>.</c><c>platform</c>)
<c>print</c> (<c>2</c> <c>**</c> <c>100</c>)
<c>raw_input(</c> )
</code>

<t>I</t> <t>am</t> <t>using</t> <t>Python</t> <t>3.1</t> <t>and</t> <t>can't</t> <t>get</t> <t>the</t> <t>raw_input</t> <t>to</t> ""<t>freeze</t>"" <t>the</t> <t>dos</t> <t>pop-up</t>. <t>The</t> <t>book</t> <t>I'm</t> <t>reading</t> <t>is</t> <t>for</t> <t>2.5</t> <t>and</t> <t>I'm</t> <t>using</t> <t>3.1</t>

<t>What</t> <t>should</t> <t>I</t> <t>do</t> <t>to</t> <t>fix</t> <t>this</t>?
"
960733|"<t>Python</t> <t>creating</t> <t>a</t> <t>dictionary</t> <t>of</t> <t>lists</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>create</t> <t>a</t> <t>dictionary</t> <t>whose</t> <t>values</t> <t>are</t> <t>lists</t>.  <t>For</t> <t>example</t>: 

<code>{
  <c>1</c>: ['<c>1</c>'],
  <c>2</c>: ['<c>1</c>','<c>2</c>'],
  <c>3</c>: ['<c>2</c>']
}
</code>

<t>If</t> <t>I</t> <t>do</t>:

<code><c>d</c> <c>=</c> <c>dict(</c>)
<c>a</c> <c>=</c> ['<c>1</c>', '<c>2</c>']
<c>for</c> <c>i</c> <c>in</c> <c>a</c>:
    <c>for</c> <c>j</c> <c>in</c> <c>range(</c><c>int(</c><c>i</c>), <c>int(</c><c>i</c>) <c>+</c> <c>2</c>): 
        <c>d</c>[<c>j</c>]<c>.</c><c>append(</c><c>i</c>)
</code>

<t>I</t> <t>get</t> <t>a</t> <t>KeyError</t>, <t>because</t> <t>d[...]</t> <t>isn't</t> <t>a</t> <t>list</t>.  <t>In</t> <t>this</t> <t>case</t>, <t>I</t> <t>can</t> <t>add</t> <t>the</t> <t>following</t> <t>code</t> <t>after</t> <t>the</t> <t>assignment</t> <t>of</t> <t>a</t> <t>to</t> <t>initialize</t> <t>the</t> <t>dictionary</t>. 

<code><c>for</c> <c>x</c> <c>in</c> <c>range(</c><c>1</c>, <c>4</c>):
    <c>d</c>[<c>x</c>] <c>=</c> <c>list(</c>)
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>better</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>?  <t>Lets</t> <t>say</t> <t>I</t> <t>don't</t> <t>know</t> <t>the</t> <t>keys</t> <t>I</t> <t>am</t> <t>going</t> <t>to</t> <t>need</t> <t>until</t> <t>I</t> <t>am</t> <t>in</t> <t>the</t> <t>second</t> <code><c>for</c></code> <t>loop</t>.  <t>For</t> <t>example</t>:

<code><c>class</c> <c>relation</c>:
    <c>scope_list</c> <c>=</c> <c>list(</c>)
...
<c>d</c> <c>=</c> <c>dict(</c>)
<c>for</c> <c>relation</c> <c>in</c> <c>relation_list</c>:
    <c>for</c> <c>scope_item</c> <c>in</c> <c>relation</c><c>.</c><c>scope_list</c>:
        <c>d</c>[<c>scope_item</c>]<c>.</c><c>append(</c><c>relation</c>)
</code>

<t>An</t> <t>alternative</t> <t>would</t> <t>then</t> <t>be</t> <t>replacing</t> 

<code><c>d</c>[<c>scope_item</c>]<c>.</c><c>append(</c><c>relation</c>)
</code>

<t>with</t> 

<code><c>if</c> <c>d</c><c>.</c><c>has_key(</c><c>scope_item</c>):
    <c>d</c>[<c>scope_item</c>]<c>.</c><c>append(</c><c>relation</c>)
<c>else</c>:
    <c>d</c>[<c>scope_item</c>] <c>=</c> [<c>relation</c>,]
</code>

<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>handle</t> <t>this</t>?  <t>Ideally</t>, <t>appending</t> <t>would</t> ""<t>just</t> <t>work</t>"".  <t>Is</t> <t>there</t> <t>some</t> <t>way</t> <t>to</t> <t>express</t> <t>that</t> <t>I</t> <t>want</t> <t>a</t> <t>dictionary</t> <t>of</t> <t>empty</t> <t>lists</t>, <t>even</t> <t>if</t> <t>I</t> <t>don't</t> <t>know</t> <t>every</t> <t>key</t> <t>when</t> <t>I</t> <t>first</t> <t>create</t> <t>the</t> <t>list</t>?
"
961632|"<t>Converting</t> <t>integer</t> <t>to</t> <t>string</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>want</t> <t>to</t> <t>convert</t> <t>an</t> <t>integer</t> <t>to</t> <t>a</t> <t>string</t> <t>in</t> <t>Python</t>. <t>I</t> <t>am</t> <t>typecasting</t> <t>it</t> <t>in</t> <t>vain</t>:

<code><c>t</c><c>=</c><c>raw_input(</c>)
<c>c</c><c>=</c>[]
<c>for</c> <c>j</c> <c>in</c> <c>range(</c><c>0</c>,<c>int(</c><c>t</c>)):
    <c>n</c><c>=</c><c>raw_input(</c>)
    <c>a</c><c>=</c>[]
    <c>a</c>,<c>b</c><c>=</c> (<c>int(</c><c>i</c>) <c>for</c> <c>i</c> <c>in</c> <c>n</c><c>.</c><c>split(</c>' '))
    <c>d</c><c>=</c><c>pow(</c><c>a</c>,<c>b</c>)
    <c>d</c><c>.</c><c>str(</c>)
    <c>c</c><c>.</c><c>append(</c><c>d</c>[<c>0</c>])
<c>for</c> <c>j</c> <c>in</c> <c>c</c>:
    <c>print</c> <c>j</c>
</code>

<t>When</t> <t>I</t> <t>try</t> <t>to</t> <t>convert</t> <t>it</t> <t>to</t> <t>string</t>, <t>it's</t> <t>showing</t> <t>an</t> <t>error</t> <t>like</t> <code><c>int</c></code> <t>doesn't</t> <t>have</t> <t>any</t> <t>attribute</t> <t>called</t> <code><c>str</c></code>.
"
973473|"<t>Getting</t> <t>a</t> <t>list</t> <t>of</t> <t>all</t> <t>subdirectories</t> <t>in</t> <t>the</t> <t>current</t> <t>directory</t>"|"<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>return</t> <t>a</t> <t>list</t> <t>of</t> <t>all</t> <t>the</t> <t>subdirectories</t> <t>in</t> <t>the</t> <t>current</t> <t>directory</t> <t>in</t> <t>Python</t>?

<t>I</t> <t>know</t> <t>you</t> <t>can</t> <t>do</t> <t>this</t> <t>with</t> <t>files</t>, <t>but</t> <t>I</t> <t>need</t> <t>to</t> <t>get</t> <t>the</t> <t>list</t> <t>of</t> <t>directories</t> <t>instead</t>.
"
976882|"<t>Shuffling</t> <t>a</t> <t>list</t> <t>of</t> <t>objects</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>list</t> <t>of</t> <t>objects</t> <t>in</t> <t>Python</t> <t>and</t> <t>I</t> <t>want</t> <t>to</t> <t>shuffle</t> <t>them</t>. <t>I</t> <t>thought</t> <t>I</t> <t>could</t> <t>use</t> <t>the</t> <code><c>random</c><c>.</c><c>shuffle</c></code> <t>method</t>, <t>but</t> <t>this</t> <t>seems</t> <t>to</t> <t>fail</t> <t>when</t> <t>the</t> <t>list</t> <t>is</t> <t>of</t> <t>objects</t>. <t>Is</t> <t>there</t> <t>a</t> <t>method</t> <t>for</t> <t>shuffling</t> <t>object</t> <t>or</t> <t>another</t> <t>way</t> <t>around</t> <t>this</t>?

<code><c>import</c> <c>random</c>

<c>class</c> <c>a</c>:
    <c>foo</c> <c>=</c> ""<c>bar</c>""

<c>a1</c> <c>=</c> <c>a(</c>)
<c>a2</c> <c>=</c> <c>a(</c>)
<c>b</c> <c>=</c> [<c>a1</c>,<c>a2</c>]

<c>print</c> <c>random</c><c>.</c><c>shuffle(</c><c>b</c>)
</code>

<t>This</t> <t>will</t> <t>fail</t>.
"
983354|"<t>How</t> <t>do</t> <t>I</t> <t>make</t> <t>python</t> <t>to</t> <t>wait</t> <t>for</t> <t>a</t> <t>pressed</t> <t>key</t>"|"<t>I</t> <t>want</t> <t>my</t> <t>script</t> <t>to</t> <t>wait</t> <t>until</t> <t>the</t> <t>user</t> <t>presses</t> <t>any</t> <t>key</t>.

<t>How</t> <t>do</t> <t>I</t> <t>do</t> <t>that</t>?
"
986006|"<t>How</t> <t>do</t> <t>I</t> <t>pass</t> <t>a</t> <t>variable</t> <t>by</t> <t>reference</t>?"|"<t>The Python</t> <t>documentation</t> <t>seems</t> <t>unclear</t> <t>about</t> <t>whether</t> <t>parameters</t> <t>are</t> <t>passed</t> <t>by</t> <t>reference</t> <t>or</t> <t>value</t>, <t>and</t> <t>the</t> <t>following</t> <t>code</t> <t>produces</t> <t>the</t> <t>unchanged</t> <t>value</t> '<t>Original</t>'

<code><c>class</c> <c>PassByReference</c>:
    <c>def</c> <c>__init__(</c><c>self</c>):
        <c>self</c><c>.</c><c>variable</c> <c>=</c> '<c>Original</c>'
        <c>self</c><c>.</c><c>change(</c><c>self</c><c>.</c><c>variable</c>)
        <c>print(</c><c>self</c><c>.</c><c>variable</c>)

    <c>def</c> <c>change(</c><c>self</c>, <c>var</c>):
        <c>var</c> <c>=</c> '<c>Changed</c>'
</code>

<t>Is</t> <t>there</t> <t>something</t> <t>I</t> <t>can</t> <t>do</t> <t>to</t> <t>pass</t> <t>the</t> <t>variable</t> <t>by</t> <t>actual</t> <t>reference</t>?
"
988228|"<t>Convert</t> <t>a</t> <t>String</t> <t>representation</t> <t>of</t> <t>a</t> <t>Dictionary</t> <t>to</t> <t>a</t> <t>dictionary</t>?"|"<t>How</t> <t>can</t> <t>I</t> <t>convert</t> <t>the</t> <code><c>str</c></code> <t>representation</t> <t>of</t> <t>a</t> <code><c>dict</c></code>, <t>such</t> <t>as</t> <t>the</t> <t>following</t> <t>string</t>, <t>into</t> <t>a</t> <code><c>dict</c></code>?

<code><c>s</c> <c>=</c> ""{'<c>muffin</c>' : '<c>lolz</c>', '<c>foo</c>' : '<c>kitty</c>'}""
</code>

<t>I</t> <t>prefer</t> <t>not</t> <t>to</t> <t>use</t> <code><c>eval</c></code>. <t>What</t> <t>else</t> <t>can</t> <t>I</t> <t>use</t>?

<t>The</t> <t>main</t> <t>reason</t> <t>for</t> <t>this</t>, <t>is</t> <t>one</t> <t>of</t> <t>my</t> <t>coworkers</t> <t>classes</t> <t>he</t> <t>wrote</t>, <t>converts</t> <t>all</t> <t>input</t> <t>into</t> <t>strings</t>. <t>I'm</t> <t>not</t> <t>in</t> <t>the</t> <t>mood</t> <t>to</t> <t>go</t> <t>and</t> <t>modify</t> <t>his</t> <t>classes</t>, <t>to</t> <t>deal</t> <t>with</t> <t>this</t> <t>issue</t>.
"
990754|"<t>How</t> <t>to</t> <t>leave/exit/deactivate</t> <t>a</t> <t>python</t> <t>virtualenv</t>?"|"<t>I'm</t> <t>using</t> <t>virtualenv</t> <t>and</t> <t>the</t> <t>virtualenvwrapper</t>. <t>I</t> <t>can</t> <t>switch</t> <t>between</t> <t>virtualenv's</t> <t>just</t> <t>fine</t> <t>using</t> <t>the</t> <t>workon</t> <t>command</t>. 

<code><c>me</c><c>@</c><c>mymachine</c>:<c>~</c><c>$</c> <c>workon</c> <c>env1</c>
(<c>env1</c>)<c>me</c><c>@</c><c>mymachine</c>:<c>~</c><c>$</c> <c>workon</c> <c>env2</c>
(<c>env2</c>)<c>me</c><c>@</c><c>mymachine</c>:<c>~</c><c>$</c> <c>workon</c> <c>env1</c>
(<c>env1</c>)<c>me</c><c>@</c><c>mymachine</c>:<c>~</c><c>$</c> 
</code>

<t>However</t>, <t>how</t> <t>do</t> <t>I</t> <t>exit</t> <t>all</t> <t>virtual</t> <t>machines</t> <t>and</t> <t>workon</t> <t>my</t> <t>real</t> <t>machine</t> <t>again</t>? <t>Right</t> <t>now</t>, <t>the</t> <t>only</t> <t>way</t> <t>I</t> <t>have</t> <t>of</t> <t>getting</t> <t>back</t> <t>to</t>

<code><c>me</c><c>@</c><c>mymachine</c>:<c>~</c><c>$</c> 
</code>

<t>is</t> <t>to</t> <t>exit</t> <t>the</t> <t>shell</t> <t>and</t> <t>start</t> <t>a</t> <t>new</t> <t>one</t>. <t>That's</t> <t>kind</t> <t>of</t> <t>annoying</t>. <t>Is</t> <t>there</t> <t>a</t> <t>command</t> <t>to</t> <t>workon</t> ""<t>nothing</t>"", <t>and</t> <t>if</t> <t>so</t>, <t>what</t> <t>is</t> <t>it</t>? <t>If</t> <t>such</t> <t>a</t> <t>command</t> <t>does</t> <t>not</t> <t>exist</t>, <t>how</t> <t>would</t> <t>I</t> <t>go</t> <t>about</t> <t>creating</t> <t>it</t>?
"
991027|"<t>How</t> <t>to</t> <t>calculate</t> <t>a</t> <t>mod</t> <t>b</t> <t>in</t> <t>python</t>?"|"<t>Is</t> <t>there</t> <t>a</t> <t>modulo</t> <t>function</t> <t>in</t> <t>the</t> <t>python</t> <code><c>math</c></code> <t>library</t>?

<t>Isn't</t> <code><c>15</c> <c>%</c> <c>4</c></code>, <t>3</t>? <t>But</t> <code><c>15</c> <c>mod</c> <c>4</c></code> <t>is</t> <t>1</t>, <t>right</t>?
"
997797|"<t>What</t> <t>does</t> <t>%s</t> <t>mean</t> <t>in</t> <t>Python</t>?"|"<t>What</t> <t>does</t> <t>%s</t> <t>mean</t> <t>in</t> <t>Python</t>? <t>And</t> <t>what</t> <t>does</t> <t>the</t> <t>following</t> <t>bit</t> <t>of</t> <t>code</t> <t>do</t>?

<t>For</t> <t>instance...</t> 

<code> <c>if</c> <c>len(</c><c>sys</c><c>.</c><c>argv</c>) <c>&lt;</c> <c>2</c>:
     <c>sys</c><c>.</c><c>exit(</c>'<c>Usage</c>: <c>%</c><c>s</c> <c>database-name</c>' <c>%</c> <c>sys</c><c>.</c><c>argv</c>[<c>0</c>])

 <c>if</c> <c>not</c> <c>os</c><c>.</c><c>path</c><c>.</c><c>exists(</c><c>sys</c><c>.</c><c>argv</c>[<c>1</c>]):
     <c>sys</c><c>.</c><c>exit(</c>'<c>ERROR</c>: <c>Database</c> <c>%</c><c>s</c> <c>was</c> <c>not</c> <c>found</c><c>!</c>' <c>%</c> <c>sys</c><c>.</c><c>argv</c>[<c>1</c>])
</code>
"
1009860|"<t>Command Line Arguments In</t> <t>Python</t>"|"<t>I</t> <t>am</t> <t>originally</t> <t>a</t> <t>C</t> <t>programmer</t>. <t>I</t> <t>have</t> <t>seen</t> <t>numerous</t> <t>tricks</t> <t>and</t> ""<t>hacks</t>"" <t>to</t> <t>read</t> <t>many</t> <t>different</t> <t>arguments</t>. 

<t>What</t> <t>are</t> <t>some</t> <t>of</t> <t>the</t> <t>ways</t> <t>Python</t> <t>programmers</t> <t>can</t> <t>do</t> <t>this</t>?

<t>Related</t>


<t>What’s</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>grab/parse</t> <t>command</t> <t>line</t> <t>arguments</t> <t>passed</t> <t>to</t> <t>a</t> <t>Python</t> <t>script</t>?
<t>Implementing</t> <t>a</t> <t>“[command]</t> <t>[action]</t> <t>[parameter]”</t> <t>style</t> <t>command-line</t> <t>interfaces</t>?
<t>How</t> <t>can</t> <t>I</t> <t>process</t> <t>command</t> <t>line</t> <t>arguments</t> <t>in</t> <t>Python</t>?
<t>How</t> <t>do</t> <t>I</t> <t>format</t> <t>positional</t> <t>argument</t> <t>help</t> <t>using</t> <t>Python’s</t> <t>optparse</t>?

"
1016814|"<t>What</t> <t>to</t> <t>do</t> <t>with</t> ""<t>Unexpected</t> <t>indent</t>"" <t>in</t> <t>python</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>rectify</t> <t>the</t> <t>error</t> ""<t>unexpected</t> <t>indent</t>"" <t>in</t> <t>python</t>?
"
1024847|"<t>Add</t> <t>new</t> <t>keys</t> <t>to</t> <t>a</t> <t>dictionary</t>?"|"<t>Is</t> <t>it</t> <t>possible</t> <t>to</t> <t>add</t> <t>a</t> <t>key</t> <t>to</t> <t>a</t> <t>Python</t> <t>dictionary</t> <t>after</t> <t>it</t> <t>has</t> <t>been</t> <t>created</t>? <t>It</t> <t>doesn't</t> <t>seem</t> <t>to</t> <t>have</t> <t>an</t> <code><c>.</c><c>add(</c>)</code> <t>method</t>.
"
1027714|"<t>How</t> <t>to</t> <t>execute</t> <t>a</t> <t>file</t> <t>within</t> <t>the</t> <t>python</t> <t>interpreter</t>?"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>execute</t> <t>a</t> <t>file</t> <t>with</t> <t>python</t> <t>commands</t> <t>from</t> <t>within</t> <t>the</t> <t>interpreter</t>. 

<t>EDIT</t>: <t>I'm</t> <t>trying</t> <t>to</t> <t>use</t> <t>variables</t> <t>and</t> <t>settings</t> <t>from</t> <t>that</t> <t>file</t>, <t>not</t> <t>to</t> <t>invoke</t> <t>a</t> <t>separate</t> <t>process</t>.
"
1035340|"<t>Reading</t> <t>binary</t> <t>file</t> <t>and</t> <t>looping</t> <t>over</t> <t>each</t> <t>byte</t>"|"<t>In</t> <t>Python</t>, <t>how</t> <t>do</t> <t>I</t> <t>read</t> <t>in</t> <t>a</t> <t>binary</t> <t>file</t> <t>and</t> <t>loop</t> <t>over</t> <t>each</t> <t>byte</t> <t>of</t> <t>that</t> <t>file</t>?
"
1038824|"<t>How</t> <t>do</t> <t>I</t> <t>remove</t> <t>a</t> <t>substring</t> <t>from</t> <t>the</t> <t>end</t> <t>of</t> <t>a</t> <t>string</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>have</t> <t>the</t> <t>following</t> <t>code</t>:

<code><c>url</c> <c>=</c> '<c>abcdc</c><c>.</c><c>com</c>'
<c>print(</c><c>url</c><c>.</c><c>strip(</c>'<c>.</c><c>com</c>'))
</code>

<t>I</t> <t>expected</t>: <code><c>abcdc</c></code>

<t>I</t> <t>got</t>: <code><c>abcd</c></code>

<t>Now</t> <t>I</t> <t>do</t> 

<code><c>url</c><c>.</c><c>rsplit(</c>'<c>.</c><c>com</c>', <c>1</c>)
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>better</t> <t>way</t>?
"
1059559|"<t>Split Strings</t> <t>with</t> <t>Multiple</t> <t>Delimiters</t>?"|"<t>I</t> <t>think</t> <t>what</t> <t>I</t> <t>want</t> <t>to</t> <t>do</t> <t>is</t> <t>a</t> <t>fairly</t> <t>common</t> <t>task</t> <t>but</t> <t>I've</t> <t>found</t> <t>no</t> <t>reference</t> <t>on</t> <t>the</t> <t>web</t>. <t>I</t> <t>have</t> <t>text</t>, <t>with</t> <t>punctuation</t>, <t>and</t> <t>I</t> <t>want</t> <t>list</t> <t>of</t> <t>the</t> <t>words</t>. 

<code>""<c>Hey</c>, <c>you</c> <c>-</c> <c>what</c> <c>are</c> <c>you</c> <c>doing</c> <c>here</c><c>!</c><c>?</c>""
</code>

<t>should</t> <t>be</t>

<code>['<c>hey</c>', '<c>you</c>', '<c>what</c>', '<c>are</c>', '<c>you</c>', '<c>doing</c>', '<c>here</c>']
</code>

<t>But Python's</t> <code><c>str</c><c>.</c><c>split(</c>)</code> <t>only</t> <t>works</t> <t>with</t> <t>one</t> <t>argument...</t> <t>So</t> <t>I</t> <t>have</t> <t>all</t> <t>words</t> <t>with</t> <t>the</t> <t>punctuation</t> <t>after</t> <t>I</t> <t>split</t> <t>with</t> <t>whitespace</t>. <t>Any</t> <t>ideas</t>?
"
1093322|"<t>How</t> <t>do</t> <t>I</t> <t>check</t> <t>what</t> <t>version</t> <t>of</t> <t>Python</t> <t>is</t> <t>running</t> <t>my</t> <t>script</t>?"|"<t>How</t> <t>can</t> <t>I</t> <t>check</t> <t>what</t> <t>version</t> <t>of</t> <t>the</t> <t>Python Interpreter</t> <t>is</t> <t>interpreting</t> <t>my</t> <t>script</t>?
"
1098549|"<t>Proper</t> <t>way</t> <t>to</t> <t>use</t> <t>**kwargs</t> <t>in</t> <t>Python</t>"|"<t>What</t> <t>is</t> <t>the</t> <t>proper</t> <t>way</t> <t>to</t> <t>use</t> <code><c>**</c><c>kwargs</c></code> <t>in</t> <t>Python</t> <t>when</t> <t>it</t> <t>comes</t> <t>to</t> <t>default</t> <t>values</t>?

<code><c>kwargs</c></code> <t>returns</t> <t>a</t> <t>dictionary</t>, <t>but</t> <t>what</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>set</t> <t>default</t> <t>values</t>, <t>or</t> <t>is</t> <t>there</t> <t>one</t>?  <t>Should</t> <t>I</t> <t>just</t> <t>access</t> <t>it</t> <t>as</t> <t>a</t> <t>dictionary</t>?  <t>Use</t> <t>get</t> <t>function</t>?  

<code><c>class</c> <c>ExampleClass</c>:
    <c>def</c> <c>__init__(</c><c>self</c>, <c>**</c><c>kwargs</c>):
        <c>self</c><c>.</c><c>val</c> <c>=</c> <c>kwargs</c>['<c>val</c>']
        <c>self</c><c>.</c><c>val2</c> <c>=</c> <c>kwargs</c><c>.</c><c>get(</c>'<c>val2</c>')
</code>

<t>A</t> <t>simple</t> <t>question</t>, <t>but</t> <t>one</t> <t>that</t> <t>I</t> <t>can't</t> <t>find</t> <t>good</t> <t>resources</t> <t>on</t>.  <t>People</t> <t>do</t> <t>it</t> <t>different</t> <t>ways</t> <t>in</t> <t>code</t> <t>that</t> <t>I've</t> <t>seen</t> <t>and</t> <t>it's</t> <t>hard</t> <t>to</t> <t>know</t> <t>what</t> <t>to</t> <t>use</t>.
"
1112343|"<t>How</t> <t>do</t> <t>I</t> <t>capture</t> <t>SIGINT</t> <t>in</t> <t>Python</t>?"|"<t>I'm</t> <t>working</t> <t>on</t> <t>a</t> <t>python</t> <t>script</t> <t>that</t> <t>starts</t> <t>several</t> <t>processes</t> <t>and</t> <t>database</t> <t>connections</t>. <t>Every</t> <t>now</t> <t>and</t> <t>then</t> <t>I</t> <t>want</t> <t>to</t> <t>kill</t> <t>the</t> <t>script</t> <t>with</t> <t>a</t> <t>Ctrl+C</t> <t>signal</t>, <t>and</t> <t>I'd</t> <t>like</t> <t>to</t> <t>do</t> <t>some</t> <t>cleanup</t>.

<t>In Perl I'd</t> <t>do</t> <t>this</t>:

<code><c>$</c><c>SIG</c>{'<c>INT</c>'} <c>=</c> '<c>exit_gracefully</c>';

<c>sub</c> <c>exit_gracefully</c> {
    <c>print</c> ""<c>Caught</c> <c>^</c><c>C</c> <c>\n</c>"";
    <c>exit</c> (<c>0</c>);
}
</code>

<t>How</t> <t>do</t> <t>I</t> <t>do</t> <t>the</t> <t>analogue</t> <t>of</t> <t>this</t> <t>in</t> <t>Python</t>?
"
1155617|"<t>Count</t> <t>occurrence</t> <t>of</t> <t>a</t> <t>character</t> <t>in</t> <t>a</t> <t>string</t>"|"<t>What's</t> <t>the</t> <t>simplest</t> <t>way</t> <t>to</t> <t>count</t> <t>the</t> <t>number</t> <t>of</t> <t>occurrences</t> <t>of</t> <t>a</t> <t>character</t> <t>in</t> <t>a</t> <t>string</t>?

<t>e.g.</t> <t>count</t> <t>the</t> <t>number</t> <t>of</t> <t>times</t> <code>'<c>a</c>'</code> <t>appears</t> <t>in</t> <code>'<c>Mary</c> <c>had</c> <c>a</c> <c>little</c> <c>lamb</c>'</code>
"
1157106|"<t>Remove</t> <t>all</t> <t>occurrences</t> <t>of</t> <t>a</t> <t>value</t> <t>from</t> <t>a</t> <t>list</t>?"|"<t>In Python</t> <code><c>remove(</c>)</code> <t>will</t> <t>remove</t> <t>the</t> <t>first</t> <t>occurrence</t> <t>of</t> <t>value</t> <t>in</t> <t>a</t> <t>list</t>.

<t>How</t> <t>to</t> <t>remove</t> <t>all</t> <t>occurrences</t> <t>of</t> <t>a</t> <t>value</t> <t>from</t> <t>a</t> <t>list</t>, <t>without</t> <t>sorting</t> <t>the</t> <t>list</t>?

<t>This</t> <t>is</t> <t>what</t> <t>I</t> <t>have</t> <t>in</t> <t>mind</t>.

<code><c>&gt;&gt;&gt;</c> <c>x</c> <c>=</c> [<c>1</c>, <c>2</c>, <c>3</c>, <c>4</c>, <c>2</c>, <c>2</c>, <c>3</c>]
<c>&gt;&gt;&gt;</c> <c>def</c> <c>remove_values_from_list(</c><c>the_list</c>, <c>val</c>):
        <c>while</c> <c>val</c> <c>in</c> <c>the_list</c>:
            <c>the_list</c><c>.</c><c>remove(</c><c>val</c>)
<c>&gt;&gt;&gt;</c> <c>remove_values_from_list(</c><c>x</c>, <c>2</c>)
<c>&gt;&gt;&gt;</c> <c>x</c>
[<c>1</c>, <c>3</c>, <c>4</c>, <c>3</c>]
</code>
"
1185524|"<t>How</t> <t>to</t> <t>trim</t> <t>whitespace</t> (<t>including</t> <t>tabs</t>)?"|"<t>Is</t> <t>there</t> <t>a</t> <t>function</t> <t>that</t> <t>will</t> <t>trim</t> <t>not</t> <t>only</t> <t>spaces</t> <t>for</t> <t>whitespace</t>, <t>but</t> <t>also</t> <t>tabs</t>?
"
1186789|"<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>call</t> <t>a</t> <t>Python</t> <t>script</t> <t>from</t> <t>another</t> <t>Python</t> <t>script</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>script</t> <t>named</t> <t>test1</t>.<t>py</t> <t>which</t> <t>is</t> <t>not</t> <t>in</t> <t>a</t> <t>module</t>. <t>It</t> <t>just</t> <t>has</t> <t>code</t> <t>that</t> <t>should</t> <t>execute</t> <t>when</t> <t>the</t> <t>script</t> <t>itself</t> <t>is</t> <t>run</t>. <t>There</t> <t>are</t> <t>no</t> <t>functions</t>, <t>classes</t>, <t>methods</t>, <t>etc</t>. <t>I</t> <t>have</t> <t>another</t> <t>script</t> <t>which</t> <t>runs</t> <t>as</t> <t>a</t> <t>service</t>. <t>I</t> <t>want</t> <t>to</t> <t>call</t> <t>test1</t>.<t>py</t> <t>from</t> <t>the</t> <t>script</t> <t>running</t> <t>as</t> <t>a</t> <t>service</t>.

<t>For</t> <t>example</t>:

<t>File</t> <t>test1</t>.<t>py</t>

<code><c>print</c> ""<c>I</c> <c>am</c> <c>a</c> <c>test</c>""
<c>print</c> ""<c>see</c><c>!</c> <c>I</c> <c>do</c> <c>nothing</c> <c>productive</c><c>.</c>""
</code>

<t>File</t> <t>service</t>.<t>py</t>

<code># <c>Lots</c> <c>of</c> <c>stuff</c> <c>here</c>
<c>test1</c><c>.</c><c>py</c> # <c>do</c> <c>whatever</c> <c>is</c> <c>in</c> <c>test1</c><c>.</c><c>py</c>
</code>

<t>I'm</t> <t>aware</t> <t>of</t> <t>one</t> <t>method</t> <t>which</t> <t>is</t> <t>opening</t> <t>the</t> <t>file</t>, <t>reading</t> <t>the</t> <t>contents</t>, <t>and</t> <t>basically</t> <t>eval'ing</t> <t>it</t>. <t>I'm</t> <t>assuming</t> <t>there's</t> <t>a</t> <t>better</t> <t>way</t> <t>of</t> <t>doing</t> <t>this</t>. <t>Or</t> <t>at</t> <t>least</t> <t>I</t> <t>hope</t> <t>so</t>.
"
1187970|"<t>How</t> <t>to</t> <t>exit</t> <t>from</t> <t>Python</t> <t>without</t> <t>traceback</t>?"|"<t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>know</t> <t>how</t> <t>to</t> <t>I</t> <t>exit</t> <t>from</t> <t>Python</t> <t>without</t> <t>having</t> <t>an</t> <t>traceback</t> <t>dump</t> <t>on</t> <t>the</t> <t>output</t>. 

<t>I</t> <t>still</t> <t>want</t> <t>want</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>return</t> <t>an</t> <t>error</t> <t>code</t> <t>but</t> <t>I</t> <t>do</t> <t>not</t> <t>want</t> <t>to</t> <t>display</t> <t>the</t> <t>traceback</t> <t>log</t>.

<t>I</t> <t>want</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>exit</t> <t>using</t> <code><c>exit(</c><c>number</c>)</code> <t>without</t> <t>trace</t> <t>but</t> <t>in</t> <t>case</t> <t>of</t> <t>an</t> <t>Exception</t> (<t>not</t> <t>an</t> <t>exit</t>) <t>I</t> <t>want</t> <t>the</t> <t>trace</t>.
"
1196074|"<t>How</t> <t>to</t> <t>start</t> <t>a</t> <t>background</t> <t>process</t> <t>in</t> <t>Python</t>?"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>port</t> <t>a</t> <t>shell</t> <t>script</t> <t>to</t> <t>the</t> <t>much</t> <t>more</t> <t>readable</t> <t>python</t> <t>version</t>. <t>The</t> <t>original</t> <t>shell</t> <t>script</t> <t>starts</t> <t>several</t> <t>processes</t> (<t>utilities</t>, <t>monitors</t>, <t>etc</t>.) <t>in</t> <t>the</t> <t>background</t> <t>with</t> ""<t>&amp;</t>"". <t>How</t> <t>can</t> <t>I</t> <t>achieve</t> <t>the</t> <t>same</t> <t>effect</t> <t>in</t> <t>python</t>? <t>I'd</t> <t>like</t> <t>these</t> <t>processes</t> <t>not</t> <t>to</t> <t>die</t> <t>when</t> <t>the</t> <t>python</t> <t>scripts</t> <t>complete</t>. <t>I</t> <t>am</t> <t>sure</t> <t>it's</t> <t>related</t> <t>to</t> <t>the</t> <t>concept</t> <t>of</t> <t>a</t> <t>daemon</t> <t>somehow</t>, <t>but</t> <t>I</t> <t>couldn't</t> <t>find</t> <t>how</t> <t>to</t> <t>do</t> <t>this</t> <t>easily</t>.
"
1207406|"<t>Remove</t> <t>items</t> <t>from</t> <t>a</t> <t>list</t> <t>while</t> <t>iterating</t>"|"<t>I'm</t> <t>iterating</t> <t>over</t> <t>a</t> <t>list</t> <t>of</t> <t>tuples</t> <t>in</t> <t>Python</t>, <t>and</t> <t>am</t> <t>attempting</t> <t>to</t> <t>remove</t> <t>them</t> <t>if</t> <t>they</t> <t>meet</t> <t>certain</t> <t>criteria</t>. 

<code><c>for</c> <c>tup</c> <c>in</c> <c>somelist</c>:
    <c>if</c> <c>determine(</c><c>tup</c>):
         <c>code_to_remove_tup</c>
</code>

<t>What</t> <t>should</t> <t>I</t> <t>use</t> <t>in</t> <t>place</t> <t>of</t> <code><c>code_to_remove_tup</c></code>? <t>I</t> <t>can't</t> <t>figure</t> <t>out</t> <t>how</t> <t>to</t> <t>remove</t> <t>the</t> <t>item</t> <t>in</t> <t>this</t> <t>fashion</t>.
"
1207457|"<t>Convert</t> <t>a</t> <t>Unicode</t> <t>string</t> <t>to</t> <t>a</t> <t>string</t> <t>in</t> <t>Python</t> (<t>containing</t> <t>extra</t> <t>symbols</t>)"|"<t>How</t> <t>do</t> <t>you</t> <t>convert</t> <t>a</t> <t>Unicode</t> <t>string</t> (<t>containing</t> <t>extra</t> <t>characters</t> <t>like</t> <t>£</t> <t>$</t>, <t>etc</t>.) <t>into</t> <t>a</t> <t>Python</t> <t>string</t>?
"
1228299|"<t>Change</t> <t>one</t> <t>character</t> <t>in</t> <t>a</t> <t>string</t>?"|"<t>What</t> <t>is</t> <t>the</t> <t>easiest</t> <t>way</t> <t>in</t> <t>Python</t> <t>to</t> <t>replace</t> <t>a</t> <t>character</t> <t>in</t> <t>a</t> <t>string</t> <t>like</t>: 

<code><c>text</c> <c>=</c> ""<c>abcdefg</c>"";
<c>text</c>[<c>1</c>] <c>=</c> ""<c>Z</c>"";
           <c>^</c>
</code>
"
1231688|"<t>How</t> <t>do</t> <t>I</t> <t>remove</t> <t>packages</t> <t>installed</t> <t>with</t> <t>Python's</t> <t>easy_install</t>?"|"<t>Python's</t> <code><c>easy_install</c></code> <t>makes</t> <t>installing</t> <t>new</t> <t>packages</t> <t>extremely</t> <t>convenient</t>. <t>However</t>, <t>as</t> <t>far</t> <t>as</t> <t>I</t> <t>can</t> <t>tell</t>, <t>it</t> <t>doesn't</t> <t>implement</t> <t>the</t> <t>other</t> <t>common</t> <t>features</t> <t>of</t> <t>a</t> <t>dependency</t> <t>manager</t> <t>-</t> <t>listing</t> <t>and</t> <t>removing</t> <t>installed</t> <t>packages</t>.

<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>of</t> <t>finding</t> <t>out</t> <t>what's</t> <t>installed</t>, <t>and</t> <t>what</t> <t>is</t> <t>the</t> <t>preferred</t> <t>way</t> <t>of</t> <t>removing</t> <t>installed</t> <t>packages</t>? <t>Are</t> <t>there</t> <t>any</t> <t>files</t> <t>that</t> <t>need</t> <t>to</t> <t>be</t> <t>updated</t> <t>if</t> <t>I</t> <t>remove</t> <t>packages</t> <t>manually</t> (<t>e.g.</t> <t>by</t> <code><c>rm</c> <c>/usr/local/lib/python2.6/dist-packages/my_installed_pkg.egg</c></code> <t>or</t> <t>similar</t>)?
"
1250103|"<t>AttributeError</t>: '<t>module</t>' <t>object</t> <t>has</t> <t>no</t> <t>attribute</t>"|"<t>I</t> <t>have</t> <t>two</t> <t>python</t> <t>modules</t>:

<t>a</t>.<t>py</t>

<code><c>import</c> <c>b</c>

<c>def</c> <c>hello(</c>):
  <c>print</c> ""<c>hello</c>""

<c>print</c> ""<c>a</c><c>.</c><c>py</c>""
<c>print</c> <c>hello(</c>)
<c>print</c> <c>b</c><c>.</c><c>hi(</c>)
</code>

<t>b</t>.<t>py</t>

<code><c>import</c> <c>a</c>

<c>def</c> <c>hi(</c>):
  <c>print</c> ""<c>hi</c>""
</code>

<t>When</t> <t>I</t> <t>run</t> <code><c>a</c><c>.</c><c>py</c></code>, <t>I</t> <t>get</t>:

<code><c>AttributeError</c>: '<c>module</c>' <c>object</c> <c>has</c> <c>no</c> <c>attribute</c> '<c>hi</c>'
</code>

<t>What</t> <t>does</t> <t>the</t> <t>error</t> <t>mean</t>?  <t>How</t> <t>do</t> <t>I</t> <t>fix</t> <t>it</t>?
"
1260792|"<t>Import</t> <t>a</t> <t>file</t> <t>from</t> <t>a</t> <t>subdirectory</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>file</t> <t>called</t> <code><c>tester</c><c>.</c><c>py</c></code>, <t>located</t> <t>on</t> <code><c>/project</c></code>.

<code><c>/project</c></code> <t>has</t> <t>a</t> <t>subdirectory</t> <t>called</t> <code><c>lib</c></code>, <t>with</t> <t>a</t> <t>file</t> <t>called</t> <code><c>BoxTime</c><c>.</c><c>py</c></code>:

<code><c>/project/tester.py
/project/lib/BoxTime.py
</c></code>

<t>I</t> <t>want</t> <t>to</t> <t>import</t> <code><c>BoxTime</c></code> <t>from</t> <code><c>tester</c></code>. <t>I</t> <t>have</t> <t>tried</t> <t>this</t>:

<code><c>import</c> <c>lib</c><c>.</c><c>BoxTime</c>
</code>

<t>Which</t> <t>resulted</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>.</c><c>/tester.py</c>"", <c>line</c> <c>3</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>import</c> <c>lib</c><c>.</c><c>BoxTime</c>
<c>ImportError</c>: <c>No</c> <c>module</c> <c>named</c> <c>lib</c><c>.</c><c>BoxTime</c>
</code>

<t>Any</t> <t>ideas</t> <t>how</t> <t>to</t> <t>import</t> <code><c>BoxTime</c></code> <t>from</t> <t>the</t> <t>subdirectory</t>?

<t>EDIT</t>

<t>The</t> <code><c>__init__</c><c>.</c><c>py</c></code> <t>was</t> <t>the</t> <t>problem</t>, <t>but</t> <t>don't</t> <t>forget</t> <t>to</t> <t>refer</t> <t>to</t> <code><c>BoxTime</c></code> <t>as</t> <code><c>lib</c><c>.</c><c>BoxTime</c></code>, <t>or</t> <t>use</t>:

<code><c>import</c> <c>lib</c><c>.</c><c>BoxTime</c> <c>as</c> <c>BT</c>
...
<c>BT</c><c>.</c><c>bt_function(</c>)
</code>
"
1265665|"<t>Python</t>: <t>Check</t> <t>if</t> <t>a</t> <t>string</t> <t>represents</t> <t>an</t> <t>int</t>, <t>Without</t> <t>using</t> <t>Try/Except</t>?"|"<t>Is</t> <t>there</t> <t>any</t> <t>way</t> <t>to</t> <t>tell</t> <t>whether</t> <t>a</t> <t>string</t> <t>represents</t> <t>an</t> <t>integer</t> (<t>e.g.,</t> <code>'<c>3</c>'</code>, <code>'<c>-</c><c>17</c>'</code> <t>but</t> <t>not</t> <code>'<c>3.14</c>'</code> <t>or</t> <code>'<c>asfasfas</c>'</code>) <t>Without</t> <t>using</t> <t>a</t> <t>try/except</t> <t>mechanism</t>?

<code><c>is_int(</c>'<c>3.14</c>') <c>=</c> <c>False</c>
<c>is_int(</c>'<c>-</c><c>7</c>')   <c>=</c> <c>True</c>
</code>
"
1267869|"<t>How</t> <t>can</t> <t>I</t> <t>force</t> <t>division</t> <t>to</t> <t>be</t> <t>floating</t> <t>point</t>? <t>Division</t> <t>keeps</t> <t>rounding</t> <t>down</t> <t>to</t> <t>0</t>"|"<t>I</t> <t>have</t> <t>two</t> <t>integer</t> <t>values</t> <code><c>a</c></code> <t>and</t> <code><c>b</c></code>, <t>but</t> <t>I</t> <t>need</t> <t>their</t> <t>ratio</t> <t>in</t> <t>floating</t> <t>point</t>.  <t>I</t> <t>know</t> <t>that</t> <code><c>a</c><c>&lt;</c><c>b</c></code> <t>and</t> <t>I</t> <t>want</t> <t>to</t> <t>calculate</t> <code><c>a</c><c>/b</c></code>, <t>so</t> <t>if</t> <t>I</t> <t>use</t> <t>integer</t> <t>division</t> <t>I'll</t> <t>always</t> <t>get</t> <t>0</t> <t>with</t> <t>a</t> <t>remainder</t> <t>of</t> <code><c>a</c></code>.

<t>How</t> <t>can</t> <t>I</t> <t>force</t> <code><c>c</c></code> <t>to</t> <t>be</t> <t>a</t> <t>floating</t> <t>point</t> <t>number</t> <t>in</t> <t>Python</t> <t>in</t> <t>the</t> <t>following</t>?

<code><c>c</c> <c>=</c> <c>a</c> <c>/</c> <c>b</c>
</code>
"
1301346|"<t>What</t> <t>is</t> <t>the</t> <t>meaning</t> <t>of</t> <t>a</t> <t>single-</t> <t>and</t> <t>a</t> <t>double-underscore</t> <t>before</t> <t>an</t> <t>object</t> <t>name</t>?"|"<t>I</t> <t>want</t> <t>to</t> <t>clear</t> <t>this</t> <t>up</t> <t>once</t> <t>and</t> <t>for</t> <t>all</t>. <t>Can</t> <t>someone</t> <t>please</t> <t>explain</t> <t>the</t> <t>exact</t> <t>meaning</t> <t>of</t> <t>having</t> <t>leading</t> <t>underscores</t> <t>before</t> <t>an</t> <t>object's</t> <t>name</t> <t>in</t> <t>Python</t>? <t>Also</t> <t>explain</t> <t>the</t> <t>difference</t> <t>between</t> <t>a</t> <t>single</t> <t>and</t> <t>a</t> <t>double</t> <t>leading</t> <t>underscore</t>. <t>Also</t>, <t>does</t> <t>that</t> <t>meaning</t> <t>stay</t> <t>the</t> <t>same</t> <t>whether</t> <t>the</t> <t>object</t> <t>in</t> <t>question</t> <t>is</t> <t>a</t> <t>variable</t>, <t>a</t> <t>function</t>, <t>a</t> <t>method</t>, <t>etc</t>?
"
1319615|"<t>Proper</t> <t>way</t> <t>to</t> <t>declare</t> <t>custom</t> <t>exceptions</t> <t>in</t> <t>modern</t> <t>Python</t>?"|"<t>What's</t> <t>the</t> <t>proper</t> <t>way</t> <t>to</t> <t>declare</t> <t>custom</t> <t>exception</t> <t>classes</t> <t>in</t> <t>modern</t> <t>Python</t>? <t>My</t> <t>primary</t> <t>goal</t> <t>is</t> <t>to</t> <t>follow</t> <t>whatever</t> <t>standard</t> <t>other</t> <t>exception</t> <t>classes</t> <t>have</t>, <t>so</t> <t>that</t> (<t>for</t> <t>instance</t>) <t>any</t> <t>extra</t> <t>string</t> <t>I</t> <t>include</t> <t>in</t> <t>the</t> <t>exception</t> <t>is</t> <t>printed</t> <t>out</t> <t>by</t> <t>whatever</t> <t>tool</t> <t>caught</t> <t>the</t> <t>exception</t>.

<t>By</t> ""<t>modern</t> <t>Python</t>"" <t>I</t> <t>mean</t> <t>something</t> <t>that</t> <t>will</t> <t>run</t> <t>in</t> <t>Python</t> <t>2.5</t> <t>but</t> <t>be</t> '<t>correct</t>' <t>for</t> <t>the</t> <t>Python</t> <t>2.6</t> <t>and</t> <t>Python</t> <t>3</t>.<t>*</t> <t>way</t> <t>of</t> <t>doing</t> <t>things</t>. <t>And</t> <t>by</t> ""<t>custom</t>"" <t>I</t> <t>mean</t> <t>an</t> <t>Exception</t> <t>object</t> <t>that</t> <t>can</t> <t>include</t> <t>extra</t> <t>data</t> <t>about</t> <t>the</t> <t>cause</t> <t>of</t> <t>the</t> <t>error</t>: <t>a</t> <t>string</t>, <t>maybe</t> <t>also</t> <t>some</t> <t>other</t> <t>arbitrary</t> <t>object</t> <t>relevant</t> <t>to</t> <t>the</t> <t>exception</t>.

<t>I</t> <t>was</t> <t>tripped</t> <t>up</t> <t>by</t> <t>the</t> <t>following</t> <t>deprecation</t> <t>warning</t> <t>in</t> <t>Python</t> <t>2.6.2</t>:

<code><c>&gt;&gt;&gt;</c> <c>class</c> <c>MyError(</c><c>Exception</c>):
...     <c>def</c> <c>__init__(</c><c>self</c>, <c>message</c>):
...         <c>self</c><c>.</c><c>message</c> <c>=</c> <c>message</c>
... 
<c>&gt;&gt;&gt;</c> <c>MyError(</c>""<c>foo</c>"")
<c>_sandbox</c><c>.</c><c>py</c>:<c>3</c>: <c>DeprecationWarning</c>: <c>BaseException</c><c>.</c><c>message</c> <c>has</c> <c>been</c> <c>deprecated</c> <c>as</c> <c>of</c> <c>Python</c> <c>2.6</c>
</code>

<t>It</t> <t>seems</t> <t>crazy</t> <t>that</t> <code><c>BaseException</c></code> <t>has</t> <t>a</t> <t>special</t> <t>meaning</t> <t>for</t> <t>attributes</t> <t>named</t> <code><c>message</c></code>. <t>I</t> <t>gather</t> <t>from</t> <t>PEP-352</t> <t>that</t> <t>attribute</t> <t>did</t> <t>have</t> <t>a</t> <t>special</t> <t>meaning</t> <t>in</t> <t>2.5</t> <t>they're</t> <t>trying</t> <t>to</t> <t>deprecate</t> <t>away</t>, <t>so</t> <t>I</t> <t>guess</t> <t>that</t> <t>name</t> (<t>and</t> <t>that</t> <t>one</t> <t>alone</t>) <t>is</t> <t>now</t> <t>forbidden</t>? <t>Ugh</t>.

<t>I'm</t> <t>also</t> <t>fuzzily</t> <t>aware</t> <t>that</t> <code><c>Exception</c></code> <t>has</t> <t>some</t> <t>magic</t> <t>parameter</t> <code><c>args</c></code>, <t>but</t> <t>I've</t> <t>never</t> <t>known</t> <t>how</t> <t>to</t> <t>use</t> <t>it</t>. <t>Nor</t> <t>am</t> <t>I</t> <t>sure</t> <t>it's</t> <t>the</t> <t>right</t> <t>way</t> <t>to</t> <t>do</t> <t>things</t> <t>going</t> <t>forward;</t> <t>a</t> <t>lot</t> <t>of</t> <t>the</t> <t>discussion</t> <t>I</t> <t>found</t> <t>online</t> <t>suggested</t> <t>they</t> <t>were</t> <t>trying</t> <t>to</t> <t>do</t> <t>away</t> <t>with</t> <t>args</t> <t>in</t> <t>Python</t> <t>3</t>.

<t>Update</t>: <t>two</t> <t>answers</t> <t>have</t> <t>suggested</t> <t>overriding</t> <code><c>__init__</c></code>, <t>and</t> <code><c>__str__</c></code><t>/</t><code><c>__unicode__</c></code><t>/</t><code><c>__repr__</c></code>. <t>That</t> <t>seems</t> <t>like</t> <t>a</t> <t>lot</t> <t>of</t> <t>typing</t>, <t>is</t> <t>it</t> <t>necessary</t>?
"
1323410|"'<t>has_key</t>()' <t>or</t> '<t>in</t>'?"|"<t>I</t> <t>wonder</t> <t>what</t> <t>is</t> <t>better</t> <t>to</t> <t>do</t>:

<code><c>d</c> <c>=</c> {'<c>a</c>': <c>1</c>, '<c>b</c>': <c>2</c>}
'<c>a</c>' <c>in</c> <c>d</c>
<c>True</c>
</code>

<t>or</t>:

<code><c>d</c> <c>=</c> {'<c>a</c>': <c>1</c>, '<c>b</c>': <c>2</c>}
<c>d</c><c>.</c><c>has_key(</c>'<c>a</c>')
<c>True</c>
</code>
"
1380860|"<t>Add Variables</t> <t>to</t> <t>Tuple</t>"|"<t>I</t> <t>am</t> <t>learning</t> <t>Python</t> <t>and</t> <t>creating</t> <t>a</t> <t>database</t> <t>connection</t>.
<t>While</t> <t>trying</t> <t>to</t> <t>add</t> <t>to</t> <t>the</t> <t>DB</t>, <t>I</t> <t>am</t> <t>thinking</t> <t>of</t> <t>creating</t> <t>tuples</t> <t>out</t> <t>of</t> <t>information</t> <t>and</t> <t>then</t> <t>add</t> <t>them</t> <t>to</t> <t>the</t> <t>DB</t>. 

<t>What</t> <t>I</t> <t>am</t> <t>Doing</t>:
<t>I</t> <t>am</t> <t>taking</t> <t>information</t> <t>from</t> <t>the</t> <t>user</t> <t>and</t> <t>store</t> <t>it</t> <t>in</t> <t>variables</t>. 
<t>Can</t> <t>I</t> <t>add</t> <t>these</t> <t>variables</t> <t>into</t> <t>a</t> <t>tuple</t>?  <t>Can</t> <t>you</t> <t>please</t> <t>help</t> <t>me</t> <t>with</t> <t>the</t> <t>syntax</t>?

<t>Also</t> <t>if</t> <t>there</t> <t>is</t> <t>an</t> <t>efficient</t> <t>way</t> <t>of</t> <t>doing</t> <t>this</t>, <t>please</t> <t>share...</t>

<t>EDIT</t>
<t>Let</t> <t>me</t> <t>edit</t> <t>this</t> <t>question</t> <t>a</t> <t>bit...I</t> <t>only</t> <t>need</t> <t>the</t> <t>tuple</t> <t>to</t> <t>enter</t> <t>info</t> <t>into</t> <t>the</t> <t>DB</t>.  <t>Once</t> <t>the</t> <t>information</t> <t>is</t> <t>added</t> <t>to</t> <t>the</t> <t>DB</t>, <t>should</t> <t>I</t> <t>delete</t> <t>the</t> <t>tuple</t>?  <t>I</t> <t>mean</t> <t>I</t> <t>don't</t> <t>need</t> <t>the</t> <t>tuple</t> <t>anymore</t>.
"
1388818|"<t>How</t> <t>can</t> <t>I</t> <t>compare</t> <t>two</t> <t>lists</t> <t>in</t> <t>python</t> <t>and</t> <t>return</t> <t>matches</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>take</t> <t>two</t> <t>lists</t> <t>and</t> <t>find</t> <t>the</t> <t>values</t> <t>that</t> <t>appear</t> <t>in</t> <t>both</t>.

<code><c>a</c> <c>=</c> [<c>1</c>, <c>2</c>, <c>3</c>, <c>4</c>, <c>5</c>]
<c>b</c> <c>=</c> [<c>9</c>, <c>8</c>, <c>7</c>, <c>6</c>, <c>5</c>]

<c>returnMatches(</c><c>a</c>, <c>b</c>)
</code>

<t>would</t> <t>return</t> <code>[<c>5</c>]</code>, <t>for</t> <t>instance</t>.
"
1400608|"<t>How</t> <t>to</t> <t>empty</t> <t>a</t> <t>list</t> <t>in</t> <t>Python</t>?"|"<t>It</t> <t>seems</t> <t>so</t> ""<t>dirty</t>"" <t>emptying</t> <t>a</t> <t>list</t> <t>in</t> <t>this</t> <t>way</t>:

<code><c>while</c> <c>len(</c><c>alist</c>) <c>&gt;</c> <c>0</c> : <c>alist</c><c>.</c><c>pop(</c>)
</code>

<t>Does</t> <t>a</t> <t>clear</t> <t>way</t> <t>exist</t> <t>to</t> <t>do</t> <t>that</t>?
"
1401712|"<t>How</t> <t>can</t> <t>the</t> <t>euclidean</t> <t>distance</t> <t>be</t> <t>calculated</t> <t>with</t> <t>numpy</t>?"|"<t>I</t> <t>have</t> <t>two</t> <t>points</t> <t>in</t> <t>3D</t>:

<code>(<c>xa</c>, <c>ya</c>, <c>za</c>)
(<c>xb</c>, <c>yb</c>, <c>zb</c>)
</code>

<t>And</t> <t>I</t> <t>want</t> <t>to</t> <t>calculate</t> <t>the</t> <t>distance</t>:

<code><c>dist</c> <c>=</c> <c>sqrt(</c>(<c>xa-xb</c>)<c>^</c><c>2</c> <c>+</c> (<c>ya-yb</c>)<c>^</c><c>2</c> <c>+</c> (<c>za-zb</c>)<c>^</c><c>2</c>)
</code>

<t>What's</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t> <t>with</t> <t>Numpy</t>, <t>or</t> <t>with</t> <t>Python</t> <t>in</t> <t>general</t>?  <t>I</t> <t>have</t>:

<code><c>a</c> <c>=</c> <c>numpy</c><c>.</c><c>array(</c>(<c>xa</c> ,<c>ya</c>, <c>za</c>))
<c>b</c> <c>=</c> <c>numpy</c><c>.</c><c>array(</c>(<c>xb</c>, <c>yb</c>, <c>zb</c>))
</code>
"
1432480|"<t>Any</t> <t>way</t> <t>to</t> <t>clear</t> <t>python's</t> <t>IDLE</t> <t>window</t>?"|"<t>I</t> <t>know</t> <t>there's</t> <t>a</t> <t>similar</t> <t>topic</t> <t>about</t> <t>python</t> <t>console</t>, <t>but</t> <t>I</t> <t>do</t> <t>not</t> <t>know</t> <t>if</t> <t>they</t> <t>are</t> <t>the</t> <t>same</t>. <t>I</t> <t>tried</t> <t>system(""clear</t>"") <t>and</t> <t>it</t> <t>didn't</t> <t>work</t> <t>here</t>.

<t>How</t> <t>do</t> <t>I</t> <t>clear</t> <t>python's</t> <t>IDLE</t> <t>window</t>?
"
1436703|"<t>Difference</t> <t>between</t> <t>__str__</t> <t>and</t> <t>__repr__</t> <t>in</t> <t>Python</t>"|"<t>What</t> <t>is</t> <t>the</t> <t>difference</t> <t>between</t> <code><c>__str__</c></code> <t>and</t> <code><c>__repr__</c></code> <t>in</t> <code><c>Python</c></code>?
"
1449494|"<t>How</t> <t>do</t> <t>I</t> <t>install</t> <t>Python</t> <t>packages</t> <t>on</t> <t>Windows</t>?"|"<t>I'm</t> <t>having</t> <t>a</t> <t>hard</t> <t>time</t> <t>setting</t> <t>up</t> <t>python</t> <t>packages</t>. <t>EasyInstall</t> <t>from</t> <t>SetupTools</t> <t>is</t> <t>supposed</t> <t>to</t> <t>help</t> <t>that</t>, <t>but</t> <t>they</t> <t>don't</t> <t>have</t> <t>an</t> <t>executable</t> <t>for</t> <t>Python</t> <t>2.6.</t>

<t>For</t> <t>instance</t> <t>to</t> <t>install</t> <t>Mechanize</t>, <t>I'm</t> <t>just</t> <t>supposed</t> <t>to</t> <t>put</t> <t>the</t> <t>Mechanize</t> <t>folder</t> <t>in</t> <t>C</t>:<t>\Python24\Lib\site-packages</t> <t>according</t> <t>to</t> <t>INSTALL</t>.<t>txt</t>, <t>but</t> <t>runnning</t> <t>the</t> <t>tests</t> <t>does</t> <t>not</t> <t>work</t>. <t>Can</t> <t>someone</t> <t>help</t> <t>shed</t> <t>some</t> <t>light</t> <t>on</t> <t>this</t>? <t>Thanks</t>!
"
1450393|"<t>How</t> <t>do</t> <t>you</t> <t>read</t> <t>from</t> <t>stdin</t> <t>in</t> <t>Python</t>?"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>do</t> <t>some</t> <t>of</t> <t>the</t> <t>code</t> <t>golf</t> <t>challenges</t>, <t>but</t> <t>they</t> <t>all</t> <t>require</t> <t>the</t> <t>input</t> <t>to</t> <t>be</t> <t>taken</t> <t>from</t> <code><c>stdin</c></code>. <t>How</t> <t>do</t> <t>I</t> <t>get</t> <t>that</t> <t>in</t> <t>Python</t>?
"
1471994|"<t>What</t> <t>is</t> <t>setup</t>.<t>py</t>?"|"<t>Can</t> <t>anyone</t> <t>please</t> <t>explain</t>, <t>what</t> <t>is</t> <code><c>setup</c><c>.</c><c>py</c></code> <t>and</t> <t>how</t> <t>can</t> <t>it</t> <t>be</t> <t>configured</t> <t>or</t> <t>used</t>?
"
1483429|"<t>How</t> <t>to</t> <t>print</t> <t>an</t> <t>error</t> <t>in</t> <t>Python</t>?"|"<code><c>try</c>:
    <c>something</c> <c>here</c>
<c>except</c>:
    <c>print</c> '<c>the</c> <c>whatever</c> <c>error</c> <c>occurred</c><c>.</c>'
</code>

<t>How</t> <t>can</t> <t>I</t> <t>print</t> <t>the</t> <t>error</t> <t>in</t> <t>my</t> <code><c>except</c>:</code> <t>block</t>?
"
1485841|"<t>Behaviour</t> <t>of</t> <t>increment</t> <t>and</t> <t>decrement</t> <t>operators</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>notice</t> <t>that</t> <t>a</t> <t>pre-increment/decrement</t> <t>operator</t> <t>can</t> <t>be</t> <t>applied</t> <t>on</t> <t>a</t> <t>variable</t> (<t>like</t> <code><c>+</c><c>+</c><c>count</c></code>). <t>It</t> <t>compiles</t>, <t>but</t> <t>it</t> <t>does</t> <t>not</t> <t>actually</t> <t>change</t> <t>the</t> <t>value</t> <t>of</t> <t>the</t> <t>variable</t>!

<t>What</t> <t>is</t> <t>the</t> <t>behavior</t> <t>of</t> <t>the</t> <t>pre-increment/decrement</t> <t>operators</t> (<t>++/--</t>) <t>in</t> <t>Python</t>? 

<t>Why</t> <t>does</t> <t>Python</t> <t>deviate</t> <t>from</t> <t>the</t> <t>behavior</t> <t>of</t> <t>these</t> <t>operators</t> <t>seen</t> <t>in</t> <t>C/C++</t>?
"
1504717|"<t>Why</t> <t>does</t> <t>comparing</t> <t>strings</t> <t>in</t> <t>Python</t> <t>using</t> <t>either</t> '<t>==</t>' <t>or</t> '<t>is</t>' <t>sometimes</t> <t>produce</t> <t>a</t> <t>different</t> <t>result</t>?"|"<t>I've</t> <t>got</t> <t>a</t> <t>Python</t> <t>program</t> <t>where</t> <t>two</t> <t>variables</t> <t>are</t> <t>set</t> <t>to</t> <t>the</t> <t>value</t> <code>'<c>public</c>'</code>. <t>In</t> <t>a</t> <t>conditional</t> <t>expression</t> <t>I</t> <t>have</t> <t>the</t> <t>comparison</t> <code><c>var1</c> <c>is</c> <c>var2</c></code> <t>which</t> <t>fails</t>, <t>but</t> <t>if</t> <t>I</t> <t>change</t> <t>it</t> <t>to</t> <code><c>var1</c> <c>==</c> <c>var2</c></code> <t>it</t> <t>returns</t> <code><c>True</c></code>.

<t>Now</t> <t>if</t> <t>I</t> <t>open</t> <t>my</t> <t>Python</t> <t>interpreter</t> <t>and</t> <t>do</t> <t>the</t> <t>same</t> ""<t>is</t>"" <t>comparison</t>, <t>it</t> <t>succeeds</t>.

<code><c>&gt;&gt;&gt;</c> <c>s1</c> <c>=</c> '<c>public</c>'
<c>&gt;&gt;&gt;</c> <c>s2</c> <c>=</c> '<c>public</c>'
<c>&gt;&gt;&gt;</c> <c>s2</c> <c>is</c> <c>s1</c>
<c>True</c>
</code>

<t>What</t> <t>am</t> <t>I</t> <t>missing</t> <t>here</t>?
"
1514553|"<t>How</t> <t>to</t> <t>declare</t> <t>an</t> <t>array</t> <t>in</t> <t>Python</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>declare</t> <t>an</t> <t>array</t> <t>in</t> <t>Python</t>?

<t>I</t> <t>can't</t> <t>find</t> <t>any</t> <t>reference</t> <t>to</t> <t>arrays</t> <t>in</t> <t>the</t> <t>documentation</t>. 
"
1522564|"<t>How</t> <t>do</t> <t>I</t> <t>run</t> <t>a</t> <t>Python</t> <t>program</t>?"|"<t>So I'm</t> <t>starting</t> <t>like</t> <t>Python</t> <t>a</t> <t>bit</t>, <t>but</t> <t>I'm</t> <t>having</t> <t>trouble</t> <t>erm...running</t> <t>it</t>. <t>Lol</t>

<t>I'm</t> <t>using</t> <t>IDLE</t> <t>for</t> <t>now</t>, <t>but</t> <t>its</t> <t>no</t> <t>use</t> <t>whatsoever</t> <t>because</t> <t>you</t> <t>can</t> <t>only</t> <t>run</t> <t>a</t> <t>couple</t> <t>of</t> <t>lines</t> <t>at</t> <t>a</t> <t>time</t>.

<t>I'm</t> <t>also</t> <t>using</t> <t>Komodo Edit</t> <t>to</t> <t>create</t> <t>the</t> <t>actual</t> .<t>py</t> <t>files</t>.

<t>My</t> <t>question</t> <t>is</t>, <t>how</t> <t>can</t> <t>I</t> <t>run</t> <t>the</t> .<t>py</t> <t>files</t> <t>to</t> <t>test</t> <t>out</t> <t>the</t> <t>actual</t> <t>program</t>? 

<t>I'm</t> <t>using</t> <t>Windows</t> <t>7</t>, <t>and</t> <t>Komodo Edit</t> <t>5</t> <t>as</t> <t>my</t> <t>IDE</t>. <t>Pressing F5</t> <t>in</t> <t>Komodo</t> <t>doesn't</t> <t>do</t> <t>anythin</t> <t>at</t> <t>all</t>.


"
1523427|"<t>What</t> <t>is</t> <t>the</t> <t>common</t> <t>header</t> <t>format</t> <t>of</t> <t>Python</t> <t>files</t>?"|"<t>I</t> <t>came</t> <t>across</t> <t>the</t> <t>following</t> <t>header</t> <t>format</t> <t>for</t> <t>Python</t> <t>source</t> <t>files</t> <t>in</t> <t>a</t> <t>document</t> <t>about</t> <t>Python</t> <t>coding</t> <t>guidelines</t>:

<code>#<c>!</c><c>/usr/bin/env</c> <c>python</c>

""""""<c>Foobar</c><c>.</c><c>py</c>: <c>Description</c> <c>of</c> <c>what</c> <c>foobar</c> <c>does</c><c>.</c>""""""

<c>__author__</c>      <c>=</c> ""<c>Barack</c> <c>Obama</c>""
<c>__copyright__</c>   <c>=</c> ""<c>Copyright</c> <c>2009</c>, <c>Planet</c> <c>Earth</c>""
</code>

<t>Is</t> <t>this</t> <t>the</t> <t>standard</t> <t>format</t> <t>of</t> <t>headers</t> <t>in</t> <t>the</t> <t>Python</t> <t>world</t>?
<t>What</t> <t>other</t> <t>fields/information</t> <t>can</t> <t>I</t> <t>put</t> <t>in</t> <t>the</t> <t>header</t>?
<t>Python</t> <t>gurus</t> <t>share</t> <t>your</t> <t>guidelines</t> <t>for</t> <t>good</t> <t>Python</t> <t>source</t> <t>headers</t> :<t>-</t>)
"
1534210|"<t>Use</t> <t>different</t> <t>Python</t> <t>version</t> <t>with</t> <t>virtualenv</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>Debian</t> <t>system</t> <t>currently</t> <t>running</t> <t>with</t> <t>python</t> <t>2.5.4.</t> <t>I</t> <t>got</t> <t>virtualenv</t> <t>properly</t> <t>installed</t>, <t>everything</t> <t>is</t> <t>working</t> <t>fine</t>. <t>Is</t> <t>there</t> <t>a</t> <t>possibility</t> <t>that</t> <t>I</t> <t>can</t> <t>use</t> <t>a</t> <t>virtualenv</t> <t>with</t> <t>a</t> <t>different</t> <t>version</t> <t>of</t> <t>Python</t>?

<t>I</t> <t>compiled</t> <t>Python</t> <t>2.6.2</t> <t>and</t> <t>would</t> <t>like</t> <t>to</t> <t>use</t> <t>it</t> <t>with</t> <t>some</t> <t>virtualenv</t>. <t>Is</t> <t>it</t> <t>enough</t> <t>to</t> <t>overwrite</t> <t>the</t> <t>binary</t> <t>file</t>? <t>Or</t> <t>do</t> <t>I</t> <t>have</t> <t>to</t> <t>change</t> <t>something</t> <t>in</t> <t>respect</t> <t>to</t> <t>the</t> <t>libraries</t>?
"
1535327|"<t>How</t> <t>to</t> <t>print</t> <t>a</t> <t>class</t> <t>or</t> <t>objects</t> <t>of</t> <t>class</t> <t>using</t> <t>print</t>()?"|"<t>I</t> <t>am</t> <t>learning</t> <t>the</t> <t>ropes</t> <t>in</t> <t>Python</t>. <t>When</t> <t>I</t> <t>try</t> <t>to</t> <t>print</t> <t>an</t> <t>object</t> <t>of</t> <t>class</t> <code><c>Foobar</c></code> <t>using</t> <t>the</t> <code><c>print(</c>)</code> <t>function</t>, <t>I</t> <t>get</t> <t>an</t> <t>output</t> <t>like</t> <t>this</t>:

<code><c>&lt;</c><c>__main__</c><c>.</c><c>Foobar</c> <c>instance</c> <c>at</c> 0x7ff2a18c&gt;
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>I</t> <t>can</t> <t>set</t> <t>the</t> <t>printing</t> <t>behaviour</t> (<t>or</t> <t>the</t> <t>string</t> <t>representation</t>) <t>of</t> <t>a</t> <t>class</t> <t>and</t> <t>its</t> <t>objects</t>? <t>For</t> <t>instance</t>, <t>when</t> <t>I</t> <t>call</t> <code><c>print(</c>)</code> <t>on</t> <t>a</t> <t>class</t> <t>object</t>, <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>print</t> <t>its</t> <t>data</t> <t>members</t> <t>in</t> <t>a</t> <t>certain</t> <t>format</t>. <t>How</t> <t>to</t> <t>achieve</t> <t>this</t> <t>in</t> <t>Python</t>?

<t>If</t> <t>you</t> <t>are</t> <t>familiar</t> <t>with</t> <t>C++</t> <t>classes</t>, <t>the</t> <t>above</t> <t>can</t> <t>be</t> <t>achieved</t> <t>for</t> <t>the</t> <t>standard</t> <code><c>ostream</c></code> <t>by</t> <t>adding</t> <t>a</t> <code><c>friend</c> <c>ostream</c><c>&</c><c>amp</c>; <c>operator</c> <c>&lt;&lt;</c> (<c>ostream</c><c>&</c><c>amp</c>;, <c>const</c> <c>Foobar</c><c>&</c><c>amp</c>;)</code> <t>method</t> <t>for</t> <t>the</t> <t>class</t>.
"
1540049|"<t>Replace</t> <t>values</t> <t>in</t> <t>list</t> <t>using</t> <t>Python</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>list</t> <t>where</t> <t>I</t> <t>want</t> <t>to</t> <t>replace</t> <t>values</t> <t>with</t> <t>None</t> <t>where</t> <t>condition</t>() <t>returns</t> <t>True</t>.

<code>[<c>0</c>, <c>1</c>, <c>2</c>, <c>3</c>, <c>4</c>, <c>5</c>, <c>6</c>, <c>7</c>, <c>8</c>, <c>9</c>, <c>10</c>]
</code>

<t>For</t> <t>example</t>, <t>if</t> <t>condition</t> <t>checks</t> <t>bool(item%2</t>) <t>should</t> <t>return</t>:

<code>[<c>None</c>, <c>1</c>, <c>None</c>, <c>3</c>, <c>None</c>, <c>5</c>, <c>None</c>, <c>7</c>, <c>None</c>, <c>9</c>, <c>None</c>]
</code>

<t>What</t> <t>is</t> <t>the</t> <t>most</t> <t>efficient</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>?
"
1549641|"<t>How</t> <t>to</t> <t>capitalize</t> <t>the</t> <t>first</t> <t>letter</t> <t>of</t> <t>each</t> <t>word</t> <t>in</t> <t>a</t> <t>string</t> (<t>Python</t>)?"|"<code><c>s</c> <c>=</c> '<c>the</c> <c>brown</c> <c>fox</c>'
</code>

<t>...do</t> <t>something</t> <t>here...</t>

<code><c>s</c></code> <t>should</t> <t>be</t> :

<code>'<c>The</c> <c>Brown</c> <c>Fox</c>'
</code>

<t>What's</t> <t>the</t> <t>easiest</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>?
"
1549801|"<t>Differences</t> <t>between</t> <t>isinstance</t>() <t>and</t> <t>type</t>() <t>in</t> <t>python</t>"|"<t>What</t> <t>are</t> <t>the</t> <t>differences</t> <t>between</t> <t>these</t> <t>two</t> <t>code</t> <t>fragments</t>? <t>Which</t> <t>way</t> <t>is</t> <t>considered</t> <t>to</t> <t>be</t> <t>more</t> <t>pythonic</t>?

<t>Using</t> <code><c>type(</c>)</code>:

<code><c>import</c> <c>types</c>

<c>if</c> <c>type(</c><c>a</c>) <c>is</c> <c>types</c><c>.</c><c>DictType</c>:
    <c>do_something(</c>)
<c>if</c> <c>type(</c><c>b</c>) <c>in</c> <c>types</c><c>.</c><c>StringTypes</c>:
    <c>do_something_else(</c>)
</code>

<t>Using</t> <code><c>isinstance(</c>)</code>:

<code><c>if</c> <c>isinstance(</c><c>a</c>, <c>dict</c>):
    <c>do_something(</c>)
<c>if</c> <c>isinstance(</c><c>b</c>, <c>str</c>) <c>or</c> <c>isinstance(</c><c>b</c>, <c>unicode</c>):
    <c>do_something_else(</c>)
</code>

<t>Edit</t>: <t>This</t> <t>seems</t> <t>to</t> <t>be</t> <t>discussed</t> <t>already</t>: <t>link</t>.
"
1550226|"<t>python</t> <t>setup</t>.<t>py</t> <t>uninstall</t>"|"<t>I</t> <t>have</t> <t>installed</t> <t>a</t> <t>python</t> <t>package</t> <t>with</t> <code><c>python</c> <c>setup</c><c>.</c><c>py</c> <c>install</c></code>.

<t>How</t> <t>do</t> <t>I</t> <t>uninstall</t> <t>it</t>?
"
1557571|"<t>How</t> <t>do</t> <t>I</t> <t>get</t> <t>time</t> <t>of</t> <t>a</t> <t>Python</t> <t>program's</t> <t>execution</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>command</t> <t>line</t> <t>program</t> <t>in</t> <t>Python</t> <t>that</t> <t>takes</t> <t>a</t> <t>while</t> <t>to</t> <t>finish</t>. <t>I</t> <t>want</t> <t>to</t> <t>know</t> <t>the</t> <t>exact</t> <t>time</t> <t>it</t> <t>takes</t> <t>to</t> <t>finish</t> <t>running</t>.

<t>I've</t> <t>looked</t> <t>at</t> <t>the</t> <code><c>timeit</c></code> <t>module</t>, <t>but</t> <t>it</t> <t>seems</t> <t>it's</t> <t>only</t> <t>for</t> <t>small</t> <t>snippets</t> <t>of</t> <t>code</t>. <t>I</t> <t>want</t> <t>to</t> <t>time</t> <t>the</t> <t>whole</t> <t>program</t>.
"
1592565|"<t>Determine</t> <t>if</t> <t>variable</t> <t>is</t> <t>defined</t> <t>in</t> <t>Python</t>"|"
  <t>Possible</t> <t>Duplicate</t>:
  <t>Easy</t> <t>way</t> <t>to</t> <t>check</t> <t>that</t> <t>variable</t> <t>is</t> <t>defined</t> <t>in</t> <t>python</t>?
  <t>How</t> <t>do</t> <t>I</t> <t>check</t> <t>if</t> <t>a</t> <t>variable</t> <t>exists</t> <t>in</t> <t>Python</t>?  




<t>How</t> <t>do</t> <t>you</t> <t>know</t> <t>whether</t> <t>a</t> <t>variable</t> <t>has</t> <t>been</t> <t>set</t> <t>at</t> <t>a</t> <t>particular</t> <t>place</t> <t>in</t> <t>the</t> <t>code</t> <t>at</t> <t>runtime</t>? <t>This</t> <t>is</t> <t>not</t> <t>always</t> <t>obvious</t> <t>because</t> (<t>1</t>) <t>the</t> <t>variable</t> <t>could</t> <t>be</t> <t>conditionally</t> <t>set</t>, <t>and</t> (<t>2</t>) <t>the</t> <t>variable</t> <t>could</t> <t>be</t> <t>conditionally</t> <t>deleted</t>. <t>I'm</t> <t>looking</t> <t>for</t> <t>something</t> <t>like</t> <code><c>defined(</c>)</code> <t>in</t> <t>Perl</t> <t>or</t> <code><c>isset(</c>)</code> <t>in</t> <t>PHP</t> <t>or</t> <code><c>defined</c><c>?</c></code> <t>in</t> <t>Ruby</t>.

<code><c>if</c> <c>condition</c>:
    <c>a</c> <c>=</c> <c>42</c>

# <c>is</c> ""<c>a</c>"" <c>defined</c> <c>here</c><c>?</c>

<c>if</c> <c>other_condition</c>:
    <c>del</c> <c>a</c>

# <c>is</c> ""<c>a</c>"" <c>defined</c> <c>here</c><c>?</c>
</code>
"
1602934|"<t>Check</t> <t>if</t> <t>a</t> <t>given</t> <t>key</t> <t>already</t> <t>exists</t> <t>in</t> <t>a</t> <t>dictionary</t>"|"<t>I</t> <t>wanted</t> <t>to</t> <t>test</t> <t>if</t> <t>a</t> <t>key</t> <t>exists</t> <t>in</t> <t>a</t> <t>dictionary</t> <t>before</t> <t>updating</t> <t>the</t> <t>value</t> <t>for</t> <t>the</t> <t>key</t>.
<t>I</t> <t>wrote</t> <t>the</t> <t>following</t> <t>code</t>:

<code><c>if</c> '<c>key1</c>' <c>in</c> <c>dict</c><c>.</c><c>keys(</c>):
  <c>print</c> ""<c>blah</c>""
<c>else</c>:
  <c>print</c> ""<c>boo</c>""
</code>

<t>I</t> <t>think</t> <t>this</t> <t>is</t> <t>not</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>accomplish</t> <t>this</t> <t>task</t>. <t>Is</t> <t>there</t> <t>a</t> <t>better</t> <t>way</t> <t>to</t> <t>test</t> <t>for</t> <t>a</t> <t>key</t> <t>in</t> <t>the</t> <t>dictionary</t>?
"
1614236|"<t>In</t> <t>Python</t>, <t>how</t> <t>do</t> <t>I</t> <t>convert</t> <t>all</t> <t>of</t> <t>the</t> <t>items</t> <t>in</t> <t>a</t> <t>list</t> <t>to</t> <t>floats</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>script</t> <t>which</t> <t>reads</t> <t>a</t> <t>text</t> <t>file</t>, <t>pulls</t> <t>decimal</t> <t>numbers</t> <t>out</t> <t>of</t> <t>it</t> <t>as</t> <t>strings</t> <t>and</t> <t>places</t> <t>them</t> <t>into</t> <t>a</t> <t>list</t>.

<t>So</t> <t>I</t> <t>have</t> <t>this</t> <t>list</t>: <code>['<c>0.49</c>', '<c>0.54</c>', '<c>0.54</c>', '<c>0.54</c>', '<c>0.54</c>', '<c>0.54</c>', '<c>0.55</c>', '<c>0.54</c>', '<c>0.54</c>', '<c>0.54</c>', '<c>0.55</c>', '<c>0.55</c>', '<c>0.55</c>', '<c>0.54</c>', '<c>0.55</c>', '<c>0.55</c>', '<c>0.54</c>', '<c>0.55</c>', '<c>0.55</c>', '<c>0.54</c>']</code>

<t>How</t> <t>do</t> <t>I</t> <t>convert</t> <t>each</t> <t>of</t> <t>the</t> <t>values</t> <t>in</t> <t>the</t> <t>list</t> <t>from</t> <t>a</t> <t>string</t> <t>to</t> <t>a</t> <t>float</t>?

<t>I</t> <t>have</t> <t>tried</t>:

<code><c>for</c> <c>item</c> <c>in</c> <c>list</c>:
    <c>float(</c><c>item</c>)
</code>

<t>But</t> <t>this</t> <t>doesn't</t> <t>seem</t> <t>to</t> <t>work</t> <t>for</t> <t>me</t>.
"
1623039|"<t>Python</t> <t>debugging</t> <t>tips</t>"|"<t>What</t> <t>are</t> <t>your</t> <t>best</t> <t>tips</t> <t>for</t> <t>debugging</t> <t>Python</t>?

<t>Please</t> <t>don't</t> <t>just</t> <t>list</t> <t>a</t> <t>particular</t> <t>debugger</t> <t>without</t> <t>saying</t> <t>what</t> <t>it</t> <t>can</t> <t>actually</t> <t>do</t>.

<t>Related</t>


<t>What</t> <t>are</t> <t>good</t> <t>ways</t> <t>to</t> <t>make</t> <t>my</t> <t>Python</t> <t>code</t> <t>run</t> <t>first</t> <t>time</t>? <t>-</t> <t>This</t> <t>discusses</t> <t>minimizing</t> <t>errors</t>

"
1641219|"<t>Does Python</t> <t>have</t> <t>“private”</t> <t>variables</t> <t>in</t> <t>classes</t>?"|"<t>I'm</t> <t>coming</t> <t>from</t> <t>the</t> <t>Java</t> <t>world</t> <t>and</t> <t>reading</t> <t>Bruce</t> <t>Eckels</t>' <t>Python</t> <t>3</t> <t>Patterns</t>, <t>Recipes</t> <t>and</t> <t>Idioms</t>. 

<t>While</t> <t>reading</t> <t>about</t> <t>classes</t>, <t>it</t> <t>goes</t> <t>on</t> <t>to</t> <t>say</t> <t>that</t> <t>in</t> <t>Python</t> <t>there</t> <t>is</t> <t>no</t> <t>need</t> <t>to</t> <t>declare</t> <t>instance</t> <t>variables</t>. <t>You</t> <t>just</t> <t>use</t> <t>them</t> <t>in</t> <t>the</t> <t>constructor</t>, <t>and</t> <t>boom</t>, <t>they</t> <t>are</t> <t>there</t>. 

<t>So</t> <t>for</t> <t>example</t>:

<code><c>class</c> <c>Simple</c>:
    <c>def</c> <c>__init__(</c><c>self1</c>, <c>str</c>):
        <c>print(</c>""<c>inside</c> <c>the</c> <c>simple</c> <c>constructor</c>"")
        <c>self1</c><c>.</c><c>s</c> <c>=</c> <c>str</c>
    <c>def</c> <c>show(</c><c>self1</c>):
        <c>print(</c><c>self1</c><c>.</c><c>s</c>)
    <c>def</c> <c>showMsg</c> (<c>self</c>, <c>msg</c>):
        <c>print</c> (<c>msg</c> <c>+</c> ':', <c>self</c><c>.</c><c>show(</c>))
</code>

<t>If</t> <t>that’s</t> <t>true</t>, <t>then</t> <t>any</t> <t>object</t> <t>of</t> <t>class</t> <code><c>Simple</c></code> <t>can</t> <t>just</t> <t>change</t> <t>the</t> <t>value</t> <t>of</t> <t>variable</t> <code><c>s</c></code> <t>outside</t> <t>of</t> <t>the</t> <t>class</t>. 

<t>For</t> <t>example</t>: 

<code><c>if</c> <c>__name__</c> <c>==</c> ""<c>__main__</c>"":
    <c>x</c> <c>=</c> <c>Simple(</c>""<c>constructor</c> <c>argument</c>"")
    <c>x</c><c>.</c><c>s</c> <c>=</c> ""<c>test15</c>"" # <c>this</c> <c>changes</c> <c>the</c> <c>value</c>
    <c>x</c><c>.</c><c>show(</c>)
    <c>x</c><c>.</c><c>showMsg(</c>""<c>A</c> <c>message</c>"")
</code>

<t>In</t> <t>Java</t>, <t>we</t> <t>have</t> <t>been</t> <t>taught</t> <t>about</t> <t>public/private/protected</t> <t>variables</t>.  <t>Those</t> <t>keywords</t> <t>make</t> <t>sense</t> <t>because</t> <t>at</t> <t>times</t> <t>you</t> <t>want</t> <t>variables</t> <t>in</t> <t>a</t> <t>class</t> <t>to</t> <t>which</t> <t>no</t> <t>one</t> <t>outside</t> <t>the</t> <t>class</t> <t>has</t> <t>access</t> <t>to</t>. 

<t>Why</t> <t>is</t> <t>that</t> <t>not</t> <t>required</t> <t>in</t> <t>Python</t>?
"
1663807|"<t>How</t> <t>can</t> <t>I</t> <t>iterate</t> <t>through</t> <t>two</t> <t>lists</t> <t>in</t> <t>parallel</t>?"|"<t>I</t> <t>have</t> <t>two</t> <t>iterables</t> <t>in</t> <t>Python</t>, <t>and</t> <t>I</t> <t>want</t> <t>to</t> <t>go</t> <t>over</t> <t>them</t> <t>in</t> <t>pairs</t>:

<code><c>foo</c> <c>=</c> (<c>1</c>, <c>2</c>, <c>3</c>)
<c>bar</c> <c>=</c> (<c>4</c>, <c>5</c>, <c>6</c>)

<c>for</c> (<c>f</c>, <c>b</c>) <c>in</c> <c>some_iterator(</c><c>foo</c>, <c>bar</c>):
    <c>print</c> ""<c>f</c>: "", <c>f</c>, ""; <c>b</c>: "", <c>b</c>
</code>

<t>It</t> <t>should</t> <t>result</t> <t>in</t>:

<code><c>f</c>: <c>1</c>; <c>b</c>: <c>4</c>
<c>f</c>: <c>2</c>; <c>b</c>: <c>5</c>
<c>f</c>: <c>3</c>; <c>b</c>: <c>6</c>
</code>

<t>One</t> <t>way</t> <t>to</t> <t>do</t> <t>it</t> <t>is</t> <t>to</t> <t>iterate</t> <t>over</t> <t>the</t> <t>indices</t>:

<code><c>for</c> <c>i</c> <c>in</c> <c>xrange(</c><c>len(</c><c>foo</c>)):
    <c>print</c> ""<c>f</c>: "", <c>foo</c>[<c>i</c>], ""; <c>b</c>: "", <c>b</c>[<c>i</c>]
</code>

<t>But</t> <t>that</t> <t>seems</t> <t>somewhat</t> <t>unpythonic</t> <t>to</t> <t>me</t>. <t>Is</t> <t>there</t> <t>a</t> <t>better</t> <t>way</t> <t>to</t> <t>do</t> <t>it</t>?
"
1679384|"<t>Converting Python Dictionary</t> <t>to</t> <t>List</t>"|"
  <t>Possible</t> <t>Duplicate</t>:
  <t>How</t> <t>can</t> <t>I</t> <t>convert</t> <t>a</t> <t>Python</t> <t>dictionary</t> <t>to</t> <t>a</t> <t>list</t> <t>of</t> <t>tuples</t>?  




<t>I'm</t> <t>trying</t> <t>to</t> <t>convert</t> <t>a</t> <t>Python</t> <t>dictionary</t> <t>into</t> <t>a</t> <t>Python</t> <t>list</t>, <t>in</t> <t>order</t> <t>to</t> <t>perform</t> <t>some</t> <t>calculations</t>.

<code>#<c>My</c> <c>dictionary</c>
<c>dict</c> <c>=</c> {}
<c>dict</c>['<c>Capital</c>']<c>=</c>""<c>London</c>""
<c>dict</c>['<c>Food</c>']<c>=</c>""<c>Fish</c><c>&</c><c>amp</c>;<c>Chips</c>""
<c>dict</c>['<c>2012</c>']<c>=</c>""<c>Olympics</c>""

#<c>lists</c>
<c>temp</c> <c>=</c> []
<c>dictList</c> <c>=</c> []

#<c>My</c> <c>attempt</c>:
<c>for</c> <c>key</c>, <c>value</c> <c>in</c> <c>dict</c><c>.</c><c>iteritems(</c>):
    <c>aKey</c> <c>=</c> <c>key</c>
    <c>aValue</c> <c>=</c> <c>value</c>
    <c>temp</c><c>.</c><c>append(</c><c>aKey</c>)
    <c>temp</c><c>.</c><c>append(</c><c>aValue</c>)
    <c>dictList</c><c>.</c><c>append(</c><c>temp</c>) 
    <c>aKey</c> <c>=</c> """"
    <c>aValue</c> <c>=</c> """"
</code>

<t>That's</t> <t>my</t> <t>attempt</t> <t>at</t> <t>it...</t> <t>but</t> <t>I</t> <t>can't</t> <t>work</t> <t>out</t> <t>what's</t> <t>wrong</t>?
"
1702586|"<t>How</t> <t>to</t> <t>Execute</t> <t>a</t> <t>Python File</t> <t>in</t> <t>Notepad</t> <t>++</t>?"|"<t>I</t> <t>prefer</t> <t>using</t> <t>Notepad</t> <t>++</t> <t>for</t> <t>developing</t>,

<t>How</t> <t>do</t> <t>I</t> <t>execute</t> <t>the</t> <t>files</t> <t>in</t> <t>Python</t> <t>through</t> <t>Notepad++</t>?
"
1712227|"<t>How</t> <t>to</t> <t>get</t> <t>the</t> <t>size</t> <t>of</t> <t>a</t> <t>list</t>"|"<code><c>items</c> <c>=</c> []
<c>items</c><c>.</c><c>append(</c>""<c>apple</c>"")
<c>items</c><c>.</c><c>append(</c>""<c>orange</c>"")
<c>items</c><c>.</c><c>append(</c>""<c>banana</c>"")

# <c>FAKE</c> <c>METHOD</c>::
<c>items</c><c>.</c><c>amount(</c>)  # <c>Should</c> <c>return</c> <c>3</c>
</code>

<t>How</t> <t>do</t> <t>I</t> <t>get</t> <t>the</t> <t>number</t> <t>of</t> <t>elements</t> <t>in</t> <t>the</t> <t>list</t>?
"
1720421|"<t>How</t> <t>to</t> <t>append</t> <t>list</t> <t>to</t> <t>second</t> <t>list</t> (<t>concatenate</t> <t>lists</t>)"|"<t>How</t> <t>do</t> <t>I</t> <t>concatenate</t> <t>two</t> <t>lists</t> <t>in</t> <t>Python</t>?

<t>Example</t>:

<code><c>listone</c> <c>=</c> [<c>1</c>, <c>2</c>, <c>3</c>]
<c>listtwo</c> <c>=</c> [<c>4</c>, <c>5</c>, <c>6</c>]
</code>

<t>Expected</t> <t>outcome</t>:

<code><c>joinedlist</c> <c>==</c> [<c>1</c>, <c>2</c>, <c>3</c>, <c>4</c>, <c>5</c>, <c>6</c>]
</code>
"
1747817|"<t>Create</t> <t>a</t> <t>dictionary</t> <t>with</t> <t>list</t> <t>comprehension</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>like</t> <t>the</t> <t>Python</t> <t>list</t> <t>comprehension</t> <t>syntax</t>.

<t>Can</t> <t>it</t> <t>be</t> <t>used</t> <t>to</t> <t>create</t> <t>dictionaries</t> <t>too</t>? <t>For</t> <t>example</t>, <t>by</t> <t>iterating</t> <t>over</t> <t>pairs</t> <t>of</t> <t>keys</t> <t>and</t> <t>values</t>:

<code><c>mydict</c> <c>=</c> {(<c>k</c>,<c>v</c>) <c>for</c> (<c>k</c>,<c>v</c>) <c>in</c> <c>blah</c> <c>blah</c> <c>blah</c>}  # <c>doesn</c>'<c>t</c> <c>work</c>
</code>
"
1748641|"<t>Boolean</t> <t>in</t> <t>Python</t>"|"<t>Does Python</t> <t>actually</t> <t>contain</t> <t>a</t> <t>Boolean</t> <t>value</t>? <t>I</t> <t>know</t> <t>that</t> <t>you</t> <t>can</t> <t>do</t>:

<code><c>checker</c> <c>=</c> <c>1</c>
<c>if</c> <c>checker</c>:
    #<c>dostuff</c>
</code>

<t>But I'm</t> <t>quite</t> <t>pedantic</t> <t>and</t> <t>enjoy</t> <t>seeing</t> <t>booleans</t> <t>in</t> <t>Java</t>. <t>For</t> <t>instance</t>:

<code><c>Boolean</c> <c>checker</c>;
<c>if</c> (<c>someDecision</c>)
{
    <c>checker</c> <c>=</c> <c>true</c>;
}
<c>if(</c><c>checker</c>)
{
    <c>//some</c> <c>stuff</c>
}
</code>

<t>Is</t> <t>there</t> <t>such</t> <t>a</t> <t>thing</t> <t>as</t> <t>this</t> <t>in</t> <t>Python</t>? <t>I</t> <t>can't</t> <t>seem</t> <t>to</t> <t>find</t> <t>anything</t> <t>like</t> <t>it</t> <t>in</t> <t>the</t> <t>documentation</t>.
"
1769403|"<t>Understanding</t> <t>kwargs</t> <t>in</t> <t>Python</t>"|"<t>What</t> <t>are</t> <t>the</t> <t>uses</t> <t>for</t> <code><c>**</c><c>kwargs</c></code> <t>in</t> <t>Python</t>?

<t>I</t> <t>know</t> <t>you</t> <t>can</t> <t>do</t> <t>an</t> <code><c>objects</c><c>.</c><c>filter</c></code> <t>on</t> <t>a</t> <t>table</t> <t>and</t> <t>pass</t> <t>in</t> <t>a</t> <code><c>**</c><c>kwargs</c></code> <t>argument</t>. <t>&nbsp;</t>

<t>Can</t> <t>I</t> <t>also</t> <t>do</t> <t>this</t> <t>for</t> <t>specifying</t> <t>time</t> <t>deltas</t> <t>i.e.</t> <code><c>timedelta(</c><c>hours</c> <c>=</c> <c>time1</c>)</code>? 

<t>How</t> <t>exactly</t> <t>does</t> <t>it</t> <t>work</t>? <t>Is</t> <t>it</t> <t>classes</t> <t>as</t> '<t>unpacking</t>'? <t>Like</t> <code><c>a</c>,<c>b</c><c>=</c><c>1</c>,<c>2</c></code>?
"
1798796|"<t>python</t> : <t>list</t> <t>index</t> <t>out</t> <t>of</t> <t>range</t> <t>error</t>"|"<t>I</t> <t>have</t> <t>written</t> <t>a</t> <t>simple</t> <t>python</t> <t>program</t> 

<code><c>l</c><c>=</c>[<c>1</c>,<c>2</c>,<c>3</c>,<c>0</c>,<c>0</c>,<c>1</c>]
<c>for</c> <c>i</c> <c>in</c> <c>range(</c><c>0</c>,<c>len(</c><c>l</c>)):
       <c>if</c> <c>l</c>[<c>i</c>]<c>==</c><c>0</c>:
           <c>l</c><c>.</c><c>pop(</c><c>i</c>)
</code>

<t>This</t> <t>gives</t> <t>me</t> <t>error</t> '<t>list</t> <t>index</t> <t>out</t> <t>of</t> <t>range</t>' <t>on</t> <t>line</t> <code><c>if</c> <c>l</c>[<c>i</c>]<c>==</c><c>0</c>:</code>

<t>After</t> <t>debugging</t> <t>I</t> <t>could</t> <t>figure</t> <t>out</t> <t>that</t> <code><c>i</c></code> <t>is</t> <t>getting</t> <t>incremented</t> <t>and</t> <t>list</t> <t>is</t> <t>getting</t> <t>reduced</t>.
<t>However</t>, <t>I</t> <t>have</t> <t>loop</t> <t>termination</t> <t>condition</t> <code><c>i</c> <c>&lt;</c> <c>len(</c><c>l</c>)</code>. <t>Then</t> <t>why</t> <t>I</t> <t>am</t> <t>getting</t> <t>such</t> <t>error</t>? 
"
1810743|"<t>How</t> <t>to</t> <t>set</t> <t>the</t> <t>current</t> <t>working</t> <t>directory</t> <t>in</t> <t>Python</t>?"|"<t>How</t> <t>to</t> <t>set</t> <t>the</t> <t>current</t> <t>working</t> <t>directory</t> <t>in</t> <t>Python</t>?
"
1835018|"<t>How</t> <t>to</t> <t>check</t> <t>if</t> <t>an</t> <t>object</t> <t>is</t> <t>a</t> <t>list</t> <t>or</t> <t>tuple</t> (<t>but</t> <t>not</t> <t>string</t>)?"|"<t>This</t> <t>is</t> <t>what</t> <t>I</t> <t>normally</t> <t>do</t> <t>in</t> <t>order</t> <t>to</t> <t>ascertain</t> <t>that</t> <t>the</t> <t>input</t> <t>is</t> <t>a</t> <code><c>list</c></code><t>/</t><code><c>tuple</c></code> <t>-</t> <t>but</t> <t>not</t> <t>a</t> <code><c>str</c></code>. <t>Because</t> <t>many</t> <t>times</t> <t>I</t> <t>stumbled</t> <t>upon</t> <t>bugs</t> <t>where</t> <t>a</t> <t>function</t> <t>passes</t> <t>a</t> <code><c>str</c></code> <t>object</t> <t>by</t> <t>mistake</t>, <t>and</t> <t>the</t> <t>target</t> <t>function</t> <t>does</t> <code><c>for</c> <c>x</c> <c>in</c> <c>lst</c></code> <t>assuming</t> <t>that</t> <code><c>lst</c></code> <t>is</t> <t>actually</t> <t>a</t> <code><c>list</c></code> <t>or</t> <code><c>tuple</c></code>.

<code><c>assert</c> <c>isinstance(</c><c>lst</c>, (<c>list</c>, <c>tuple</c>))
</code>

<t>My</t> <t>question</t> <t>is</t>: <t>is</t> <t>there</t> <t>a</t> <t>better</t> <t>way</t> <t>of</t> <t>achieving</t> <t>this</t>?
"
1841565|"<t>ValueError</t>: <t>invalid</t> <t>literal</t> <t>for</t> <t>int</t>() <t>with</t> <t>base</t> <t>10</t>: ''"|"<t>I</t> <t>am</t> <t>creating</t> <t>a</t> <t>program</t> <t>that</t> <t>reads</t> <t>a</t> <t>file</t> <t>and</t> <t>if</t> <t>the</t> <t>first</t> <t>line</t> <t>of</t> <t>the</t> <t>file</t> <t>is</t> <t>not</t> <t>blank</t>, <t>it</t> <t>reads</t> <t>the</t> <t>next</t> <t>four</t> <t>lines</t>.  <t>Calculations</t> <t>are</t> <t>performed</t> <t>on</t> <t>those</t> <t>lines</t> <t>and</t> <t>then</t> <t>the</t> <t>next</t> <t>line</t> <t>is</t> <t>read</t>.  <t>If</t> <t>that</t> <t>line</t> <t>is</t> <t>not</t> <t>empty</t> <t>it</t> <t>continues</t>.  <t>However</t>, <t>I</t> <t>am</t> <t>getting</t> <t>this</t> <t>error</t>:

<code><c>ValueError</c>: <c>invalid</c> <c>literal</c> <c>for</c> <c>int(</c>) <c>with</c> <c>base</c> <c>10</c>: ''<c>.</c><c>`</c> 
</code>

<t>It</t> <t>is</t> <t>reading</t> <t>the</t> <t>first</t> <t>line</t> <t>but</t> <t>can't</t> <t>convert</t> <t>it</t> <t>to</t> <t>an</t> <t>integer</t>.  

<t>What</t> <t>can</t> <t>I</t> <t>do</t> <t>to</t> <t>fix</t> <t>this</t> <t>problem</t>?

<t>The</t> <t>Code</t>:

<code><c>file_to_read</c> <c>=</c> <c>raw_input(</c>""<c>Enter</c> <c>file</c> <c>name</c> <c>of</c> <c>tests</c> (<c>empty</c> <c>string</c> <c>to</c> <c>end</c> <c>program</c>):"")
<c>try</c>:
    <c>infile</c> <c>=</c> <c>open(</c><c>file_to_read</c>, '<c>r</c>')
    <c>while</c> <c>file_to_read</c> <c>!=</c> "" "":
        <c>file_to_write</c> <c>=</c> <c>raw_input(</c>""<c>Enter</c> <c>output</c> <c>file</c> <c>name</c> (<c>.</c><c>csv</c> <c>will</c> <c>be</c> <c>appended</c> <c>to</c> <c>it</c>):"")
        <c>file_to_write</c> <c>=</c> <c>file_to_write</c> <c>+</c> ""<c>.</c><c>csv</c>""
        <c>outfile</c> <c>=</c> <c>open(</c><c>file_to_write</c>, ""<c>w</c>"")
        <c>readings</c> <c>=</c> (<c>infile</c><c>.</c><c>readline(</c>))
        <c>print</c> <c>readings</c>
        <c>while</c> <c>readings</c> <c>!=</c> <c>0</c>:
            <c>global</c> <c>count</c>
            <c>readings</c> <c>=</c> <c>int(</c><c>readings</c>)
            <c>minimum</c> <c>=</c> (<c>infile</c><c>.</c><c>readline(</c>))
            <c>maximum</c> <c>=</c> (<c>infile</c><c>.</c><c>readline(</c>))
</code>
"
1876191|"<t>Explain Python</t> .<t>join</t>()"|"<t>I'm</t> <t>pretty</t> <t>new</t> <t>to</t> <t>Python</t> <t>and</t> <t>am</t> <t>completely</t> <t>confused</t> <t>by</t> <code><c>.</c><c>join(</c>)</code> <t>which</t> <t>I</t> <t>have</t> <t>read</t> <t>is</t> <t>the</t> <t>preferred</t> <t>method</t> <t>for</t> <t>concatenating</t> <t>strings</t>.

<t>I</t> <t>try</t>:

<code><c>strid</c> <c>=</c> <c>repr(</c><c>595</c>)
<c>print</c> <c>array</c><c>.</c><c>array(</c>'<c>c</c>', <c>random</c><c>.</c><c>sample(</c><c>string</c><c>.</c><c>ascii_letters</c>, <c>20</c> <c>-</c> <c>len(</c><c>strid</c>)))
    <c>.</c><c>tostring(</c>)<c>.</c><c>join(</c><c>strid</c>)
</code>

<t>and</t> <t>get</t> <t>something</t> <t>like</t>:

<code><c>5</c><c>wlfgALGbXOahekxSs9wlfgALGbXOahekxSs5</c>
</code>

<t>Why</t> <t>does</t> <t>it</t> <t>work</t> <t>like</t> <t>this</t>?  <t>Shouldn't</t> <t>the</t> <code><c>595</c></code> <t>just</t> <t>be</t> <t>automatically</t> <t>appended</t>?
"
1912434|"<t>How</t> <t>do</t> <t>I</t> <t>parse</t> <t>XML</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>have</t> <t>many</t> <t>rows</t> <t>in</t> <t>a</t> <t>database</t> <t>that</t> <t>contains</t> <t>xml</t> <t>and</t> <t>I'm</t> <t>trying</t> <t>to</t> <t>write</t> <t>a</t> <t>Python</t> <t>script</t> <t>that</t> <t>will</t> <t>go</t> <t>through</t> <t>those</t> <t>rows</t> <t>and</t> <t>count</t> <t>how</t> <t>many</t> <t>instances</t> <t>of</t> <t>a</t> <t>particular</t> <t>node</t> <t>attribute</t> <t>show</t> <t>up</t>. <t>For</t> <t>instance</t>, <t>my</t> <t>tree</t> <t>looks</t> <t>like</t>:

<code><c>&lt;</c><c>foo</c><c>&gt;</c>
   <c>&lt;</c><c>bar</c><c>&gt;</c>
      <c>&lt;</c><c>type</c> <c>foobar</c><c>=</c>""<c>1</c>""<c>/&gt;</c>
      <c>&lt;</c><c>type</c> <c>foobar</c><c>=</c>""<c>2</c>""<c>/&gt;</c>
   <c>&lt;/bar&gt;</c>
<c>&lt;/foo&gt;</c>
</code>

<t>How</t> <t>can</t> <t>I</t> <t>access</t> <t>the</t> <t>attributes</t> <t>1</t> <t>and</t> <t>2</t> <t>in</t> <t>the</t> <t>XML</t> <t>using</t> <t>Python</t>?
"
1934675|"<t>How</t> <t>to</t> <t>execute</t> <t>Python</t> <t>scripts</t> <t>in</t> <t>Windows</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>simple</t> <t>script</t> <t>blah</t>.<t>py</t> (<t>using</t> <t>Python</t> <t>2</t>):

<code><c>import</c> <c>sys</c>
<c>print</c> <c>sys</c><c>.</c><c>argv</c>[<c>1</c>]
</code>

<t>If</t> <t>I</t> <t>execute</t> <t>my</t> <t>script</t> <t>by</t>:

<code><c>python</c> <c>c:/..../blah.py</c> <c>argument</c>
</code>

<t>It</t> <t>prints</t> <t>argument</t> <t>but</t> <t>if</t> <t>I</t> <t>execute</t> <t>script</t> <t>by</t>:

<code><c>blah</c><c>.</c><c>py</c> <c>argument</c>
</code>

<t>error</t> <t>occurs</t>:


  <t>IndexError...</t>


<t>So</t> <t>arguments</t> <t>do</t> <t>not</t> <t>pass</t> <t>to</t> <t>script</t>.

<t>python</t>.<t>exe</t> <t>in</t> <t>PATH</t>. <t>Folder</t> <t>with</t> <t>blah</t>.<t>py</t> <t>also</t> <t>in</t> <t>PATH</t>.
<t>python</t>.<t>exe</t> <t>is</t> <t>default</t> <t>program</t> <t>to</t> <t>execute</t> <t>*</t>.<t>py</t> <t>files</t>.

<t>What</t> <t>is</t> <t>the</t> <t>problem</t>?
"
1945920|"<t>Why</t> <t>doesn't</t> <t>os.path.join</t>() <t>work</t> <t>in</t> <t>this</t> <t>case</t>?"|"<t>The</t> <t>below</t> <t>code</t> <t>will</t> <t>not</t> <t>join</t>, <t>when</t> <t>debugged</t> <t>the</t> <t>command</t> <t>does</t> <t>not</t> <t>store</t> <t>the</t> <t>whole</t> <t>path</t> <t>but</t> <t>just</t> <t>the</t> <t>last</t> <t>entry</t>.

<code><c>os</c><c>.</c><c>path</c><c>.</c><c>join(</c>'<c>/home/build/test/sandboxes/</c>', <c>todaystr</c>, '<c>/new_sandbox/</c>')
</code>

<t>When</t> <t>I</t> <t>test</t> <t>this</t> <t>it</t> <t>only</t> <t>stores</t> <t>the</t> <code><c>/new_sandbox/</c></code> <t>part</t> <t>of</t> <t>the</t> <t>code</t>.
"
1952464|"<t>In</t> <t>Python</t>, <t>how</t> <t>do</t> <t>I</t> <t>determine</t> <t>if</t> <t>an</t> <t>object</t> <t>is</t> <t>iterable</t>?"|"<t>Is</t> <t>there</t> <t>a</t> <t>method</t> <t>like</t> <code><c>isiterable</c></code>? <t>The</t> <t>only</t> <t>solution</t> <t>I</t> <t>have</t> <t>found</t> <t>so</t> <t>far</t> <t>is</t> <t>to</t> <t>call</t>

<code><c>hasattr(</c><c>myObj</c>, '<c>__iter__</c>')
</code>

<t>But</t> <t>I</t> <t>am</t> <t>not</t> <t>sure</t> <t>how</t> <t>fool-proof</t> <t>this</t> <t>is</t>.
"
1995615|"<t>How</t> <t>can</t> <t>I</t> <t>format</t> <t>a</t> <t>decimal</t> <t>to</t> <t>always</t> <t>show</t> <t>2</t> <t>decimal</t> <t>places</t>?"|"<t>I</t> <t>want</t> <t>to</t> <t>display</t>:

<code><c>49</c></code> <t>as</t> <code><c>49.00</c></code>

<t>and</t>:

<code><c>54.9</c></code> <t>as</t> <code><c>54.90</c></code>

<t>Regardless</t> <t>of</t> <t>the</t> <t>length</t> <t>of</t> <t>the</t> <t>decimal</t> <t>or</t> <t>whether</t> <t>there</t> <t>are</t> <t>are</t> <t>any</t> <t>decimal</t> <t>places</t>, <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>display</t> <t>a</t> <code><c>Decimal</c></code> <t>with</t> <t>2</t> <t>decimal</t> <t>places</t>, <t>and</t> <t>I'd</t> <t>like</t> <t>to</t> <t>do</t> <t>it</t> <t>in</t> <t>an</t> <t>efficient</t> <t>way</t>. <t>The</t> <t>purpose</t> <t>is</t> <t>to</t> <t>display</t> <t>money</t> <t>values</t>.

<t>eg</t>, <code><c>4898489.00</c></code>
"
2020598|"<t>In Python</t> <t>how</t> <t>should</t> <t>I</t> <t>test</t> <t>if</t> <t>a</t> <t>variable</t> <t>is</t> <t>None</t>, <t>True</t> <t>or</t> <t>False</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>function</t> <t>that</t> <t>can</t> <t>return</t> <t>one</t> <t>of</t> <t>three</t> <t>things</t>:


<t>success</t> (<code><c>True</c></code>)
<t>failure</t> (<code><c>False</c></code>)
<t>error</t> <t>reading/parsing</t> <t>stream</t> (<code><c>None</c></code>)


<t>My</t> <t>question</t> <t>is</t>, <t>if</t> <t>I'm</t> <t>not</t> <t>supposed</t> <t>to</t> <t>test</t> <t>against</t> <code><c>True</c></code> <t>or</t> <code><c>False</c></code>, <t>how</t> <t>should</t> <t>I</t> <t>see</t> <t>what</t> <t>the</t> <t>result</t> <t>is</t>. <t>Below</t> <t>is</t> <t>how</t> <t>I'm</t> <t>currently</t> <t>doing</t> <t>it</t>:

<code><c>result</c> <c>=</c> <c>simulate(</c><c>open(</c>""<c>myfile</c>""))
<c>if</c> <c>result</c> <c>==</c> <c>None</c>:
    <c>print</c> ""<c>error</c> <c>parsing</c> <c>stream</c>""
<c>elif</c> <c>result</c> <c>==</c> <c>True</c>: # <c>shouldn</c>'<c>t</c> <c>do</c> <c>this</c>
    <c>print</c> ""<c>result</c> <c>pass</c>""
<c>else</c>:
    <c>print</c> ""<c>result</c> <c>fail</c>""
</code>

<t>is</t> <t>it</t> <t>really</t> <t>as</t> <t>simple</t> <t>as</t> <t>removing</t> <t>the</t> <code><c>==</c> <c>True</c></code> <t>part</t> <t>or</t> <t>should</t> <t>I</t> <t>add</t> <t>a</t> <t>tri-bool</t> <t>data-type</t>. <t>I</t> <t>do</t> <t>not</t> <t>want</t> <t>the</t> <code><c>simulate</c></code> <t>function</t> <t>to</t> <t>throw</t> <t>an</t> <t>exception</t> <t>as</t> <t>all</t> <t>I</t> <t>want</t> <t>the</t> <t>outer</t> <t>program</t> <t>to</t> <t>do</t> <t>with</t> <t>an</t> <t>error</t> <t>is</t> <t>log</t> <t>it</t> <t>and</t> <t>continue</t>. 
"
2052390|"<t>Manually</t> <t>raising</t> (<t>throwing</t>) <t>an</t> <t>exception</t> <t>in</t> <t>Python</t>"|"<t>How</t> <t>can</t> <t>I</t> <t>raise</t> <t>an</t> <t>exception</t> <t>in</t> <t>Python</t> <t>so</t> <t>that</t> <t>it</t> <t>can</t> <t>later</t> <t>be</t> <t>caught</t> <t>via</t> <t>an</t> <code><c>except</c></code> <t>block</t>?
"
2081836|"<t>Reading</t> <t>specific</t> <t>lines</t> <t>only</t> (<t>Python</t>)"|"<t>I'm</t> <t>using</t> <t>a</t> <t>for</t> <t>loop</t> <t>to</t> <t>read</t> <t>a</t> <t>file</t>, <t>but</t> <t>I</t> <t>only</t> <t>want</t> <t>to</t> <t>read</t> <t>specific</t> <t>lines</t>, <t>say</t> <t>line</t> <t>#26</t> <t>and</t> <t>#30</t>. <t>Is</t> <t>there</t> <t>any</t> <t>built-in</t> <t>feature</t> <t>to</t> <t>achieve</t> <t>this</t>?

<t>Thanks</t>
"
2084069|"<t>Create</t> <t>a</t> .<t>csv</t> <t>file</t> <t>with</t> <t>values</t> <t>from</t> <t>a</t> <t>Python</t> <t>list</t>"|"<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>create</t> <t>a</t> .<t>csv</t> <t>file</t> <t>with</t> <t>the</t> <t>values</t> <t>from</t> <t>a</t> <t>Python</t> <t>list</t>. <t>When</t> <t>I</t> <t>print</t> <t>the</t> <t>values</t> <t>in</t> <t>the</t> <t>list</t> <t>they</t> <t>are</t> <t>all</t> <t>unicode</t> (?), <t>i.e.</t> <t>they</t> <t>look</t> <t>something</t> <t>like</t> <t>this</t> 

<code>[<c>u</c>'<c>value</c> <c>1</c>', <c>u</c>'<c>value</c> <c>2</c>', ...]
</code>

<t>If</t> <t>I</t> <t>iterate</t> <t>through</t> <t>the</t> <t>values</t> <t>in</t> <t>the</t> <t>list</t> <t>i.e.</t> <code><c>for</c> <c>v</c> <c>in</c> <c>mylist</c>: <c>print</c> <c>v</c></code> <t>they</t> <t>appear</t> <t>to</t> <t>be</t> <t>plain</t> <t>text</t>.

<t>And</t> <t>I</t> <t>can</t> <t>put</t> <t>a</t> <code>,</code> <t>between</t> <t>each</t> <t>with</t> <code><c>print</c> ','<c>.</c><c>join(</c><c>mylist</c>)</code>

<t>And</t> <t>I</t> <t>can</t> <t>output</t> <t>to</t> <t>a</t> <t>file</t>, <t>i.e.</t> 

<code><c>myfile</c> <c>=</c> <c>open(</c>...)
<c>print</c> <c>&gt;&gt;</c><c>myfile</c>, ','<c>.</c><c>join(</c><c>mylist</c>)
</code>

<t>But</t> <t>I</t> <t>want</t> <t>to</t> <t>output</t> <t>to</t> <t>a</t> <t>CSV</t> <t>and</t> <t>have</t> <t>delimiters</t> <t>around</t> <t>the</t> <t>values</t> <t>in</t> <t>the</t> <t>list</t> <t>e.g.</t>

<code>""<c>value</c> <c>1</c>"", ""<c>value</c> <c>2</c>"", ... 
</code>

<t>I</t> <t>can't</t> <t>find</t> <t>an</t> <t>easy</t> <t>way</t> <t>to</t> <t>include</t> <t>the</t> <t>delimiters</t> <t>in</t> <t>the</t> <t>formatting</t>, <t>e.g.</t> <t>I</t> <t>have</t> <t>tried</t> <t>through</t> <t>the</t> <code><c>join</c></code> <t>statement</t>. <t>How</t> <t>can</t> <t>I</t> <t>do</t> <t>this</t>?
"
2104080|"<t>How</t> <t>to</t> <t>check</t> <t>file</t> <t>size</t> <t>in</t> <t>python</t>?"|"<t>I</t> <t>am</t> <t>writing</t> <t>a</t> <t>Python</t> <t>script</t> <t>in</t> <t>Windows</t>. <t>I</t> <t>want</t> <t>to</t> <t>do</t> <t>something</t> <t>based</t> <t>on</t> <t>the</t> <t>file</t> <t>size</t>. <t>For</t> <t>example</t>, <t>if</t> <t>the</t> <t>size</t> <t>is</t> <t>greater</t> <t>than</t> <t>0</t>, <t>I</t> <t>will</t> <t>send</t> <t>an</t> <t>email</t> <t>to</t> <t>somebody</t>, <t>otherwise</t> <t>continue</t> <t>to</t> <t>other</t> <t>things</t>. 

<t>How</t> <t>do</t> <t>I</t> <t>check</t> <t>the</t> <t>file</t> <t>size</t>?
"
2186525|"<t>Use</t> <t>a</t> <t>Glob</t>() <t>to</t> <t>find</t> <t>files</t> <t>recursively</t> <t>in</t> <t>Python</t>?"|"<t>This</t> <t>is</t> <t>what</t> <t>I</t> <t>have</t>:

<code><c>glob(</c><c>os</c><c>.</c><c>path</c><c>.</c><c>join(</c>'<c>src</c>','<c>*</c><c>.</c><c>c</c>'))
</code>

<t>but</t> <t>I</t> <t>want</t> <t>to</t> <t>search</t> <t>the</t> <t>subfolders</t> <t>of</t> <t>src</t>. <t>Something</t> <t>like</t> <t>this</t> <t>would</t> <t>work</t>:

<code><c>glob(</c><c>os</c><c>.</c><c>path</c><c>.</c><c>join(</c>'<c>src</c>','<c>*</c><c>.</c><c>c</c>'))
<c>glob(</c><c>os</c><c>.</c><c>path</c><c>.</c><c>join(</c>'<c>src</c>','<c>*</c>','<c>*</c><c>.</c><c>c</c>'))
<c>glob(</c><c>os</c><c>.</c><c>path</c><c>.</c><c>join(</c>'<c>src</c>','<c>*</c>','<c>*</c>','<c>*</c><c>.</c><c>c</c>'))
<c>glob(</c><c>os</c><c>.</c><c>path</c><c>.</c><c>join(</c>'<c>src</c>','<c>*</c>','<c>*</c>','<c>*</c>','<c>*</c><c>.</c><c>c</c>'))
</code>

<t>But</t> <t>this</t> <t>is</t> <t>obviously</t> <t>limited</t> <t>and</t> <t>clunky</t>.
"
2213551|"<t>Installing SciPy</t> <t>with</t> <t>pip</t>"|"<t>It</t> <t>is</t> <t>possible</t> <t>to</t> <t>install</t> <t>NumPy</t> <t>with</t> <t>pip</t> <t>using</t> <code><c>pip</c> <c>install</c> <c>numpy</c></code>. 

<t>Is</t> <t>there</t> <t>a</t> <t>similar</t> <t>possibility</t> <t>with</t> <t>SciPy</t>? (<t>Doing</t> <code><c>pip</c> <c>install</c> <c>scipy</c></code> <t>does</t> <t>not</t> <t>work</t>.)



<t>Update</t>

<t>The</t> <t>package</t> <t>SciPy</t> <t>is</t> <t>now</t> <t>available</t> <t>to</t> <t>be</t> <t>installed</t> <t>with</t> <code><c>pip</c></code>!
"
2225038|"<t>Determine</t> <t>the</t> <t>type</t> <t>of</t> <t>an</t> <t>object</t>?"|"<t>Is</t> <t>there</t> <t>a</t> <t>simple</t> <t>way</t> <t>to</t> <t>determine</t> <t>if</t> <t>a</t> <t>variable</t> <t>is</t> <t>a</t> <t>list</t>, <t>dictionary</t>, <t>or</t> <t>something</t> <t>else</t>? <t>I</t> <t>am</t> <t>getting</t> <t>an</t> <t>object</t> <t>back</t> <t>that</t> <t>may</t> <t>be</t> <t>either</t> <t>type</t> <t>and</t> <t>I</t> <t>need</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>tell</t> <t>the</t> <t>difference</t>.
"
2257441|"<t>Random</t> <t>string</t> <t>generation</t> <t>with</t> <t>upper</t> <t>case</t> <t>letters</t> <t>and</t> <t>digits</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>generate</t> <t>a</t> <t>string</t> <t>of</t> <t>size</t> <t>N</t>.

<t>It</t> <t>should</t> <t>be</t> <t>made</t> <t>up</t> <t>of</t> <t>numbers</t> <t>and</t> <t>uppercase</t> <t>English</t> <t>letters</t> <t>such</t> <t>as</t>:


<t>6U1S75</t>
<t>4Z4UKK</t>
<t>U911K4</t>


<t>How</t> <t>can</t> <t>I</t> <t>achieve</t> <t>this</t> <t>in</t> <t>a</t> <t>pythonic</t> <t>way</t>?
"
2259382|"<t>Pythonic</t> <t>way</t> <t>to</t> <t>check</t> <t>if</t> <t>a</t> <t>file</t> <t>exists</t>?"|"<t>Which</t> <t>is</t> <t>the</t> <t>preferred</t> <t>way</t> <t>to</t> <t>check</t> <t>if</t> <t>a</t> <t>file</t> <t>exists</t> <t>and</t> <t>if</t> <t>not</t> <t>create</t> <t>it</t>?
"
2269827|"<t>How</t> <t>to</t> <t>convert</t> <t>an</t> <t>int</t> <t>to</t> <t>a</t> <t>hex</t> <t>string</t>?"|"<t>I</t> <t>want</t> <t>to</t> <t>take</t> <t>an</t> <t>integer</t> (<t>that</t> <t>will</t> <t>be</t> <t>&lt;=</t> <t>255</t>), <t>to</t> <t>a</t> <t>hex</t> <t>string</t> <t>representation</t>

<t>e.g.</t>: <t>I</t> <t>want</t> <t>to</t> <t>pass</t> <t>in</t> <code><c>65</c></code> <t>and</t> <t>get</t> <t>out</t> <code>'<c>\x41</c>'</code>, <t>or</t> <code><c>255</c></code> <t>and</t> <t>get</t> <code>'<c>\xff</c>'</code>.

<t>I've</t> <t>tried</t> <t>doing</t> <t>this</t> <t>with</t> <t>the</t> <code><c>struct</c><c>.</c><c>pack(</c>'<c>c</c>',</code><t>65</t><code>)</code>, <t>but</t> <t>that</t> <t>chokes</t> <t>on</t> <t>anything</t> <t>above</t> <code><c>9</c></code> <t>since</t> <t>it</t> <t>wants</t> <t>to</t> <t>take</t> <t>in</t> <t>a</t> <t>single</t> <t>character</t> <t>string</t>.
"
2294493|"<t>How</t> <t>to</t> <t>get</t> <t>the</t> <t>position</t> <t>of</t> <t>a</t> <t>character</t> <t>in</t> <t>Python</t>?"|"<t>How</t> <t>can</t> <t>I</t> <t>get</t> <t>the</t> <t>position</t> <t>of</t> <t>a</t> <t>character</t> <t>inside</t> <t>a</t> <t>string</t> <t>in</t> <t>python</t>?
"
2325923|"<t>How</t> <t>to</t> <t>fix</t> ""<t>ImportError</t>: <t>No</t> <t>module</t> <t>named</t> <t>...</t>"" <t>error</t> <t>in</t> <t>Python</t>?"|"<t>What</t> <t>is</t> <t>the</t> <t>correct</t> <t>way</t> <t>to</t> <t>fix</t> <t>this</t> <t>ImportError</t> <t>error</t>?

<t>I</t> <t>have</t> <t>the</t> <t>following</t> <t>directory</t> <t>structure</t>:

<code><c>/home/bodacydo
/home/bodacydo/work
/home/bodacydo/work/project
/home/bodacydo/work/project/programs
/home/bodacydo/work/project/foo
</c></code>

<t>And</t> <t>I</t> <t>am</t> <t>in</t> <t>the</t> <t>directory</t>

<code><c>/home/bodacydo/work/project
</c></code>

<t>Now</t> <t>if</t> <t>I</t> <t>type</t>

<code><c>python</c> <c>.</c><c>/programs/my_python_program.py
</c></code>

<t>I</t> <t>instantly</t> <t>get</t>

<code><c>ImportError</c>: <c>No</c> <c>module</c> <c>named</c> <c>foo</c><c>.</c><c>tasks</c>
</code>

<t>The</t> <code><c>.</c><c>/programs/my_python_program.py</c></code> <t>contains</t> <t>the</t> <t>following</t> <t>line</t>:

<code><c>from</c> <c>foo</c><c>.</c><c>tasks</c> <c>import</c> <c>my_function</c>
</code>

<t>I</t> <t>can't</t> <t>understand</t> <t>why</t> <t>python</t> <t>won't</t> <t>find</t> <code><c>.</c><c>/foo/tasks.py</c></code> <t>-</t> <t>it's</t> <t>there</t>.

<t>If</t> <t>I</t> <t>do</t> <t>it</t> <t>from</t> <t>the</t> <t>Python</t> <t>shell</t>, <t>then</t> <t>it</t> <t>works</t>:

<code><c>python</c>
<c>&gt;&gt;&gt;</c> <c>from</c> <c>foo</c><c>.</c><c>tasks</c> <c>import</c> <c>my_function</c>
</code>

<t>It</t> <t>only</t> <t>doesn't</t> <t>work</t> <t>if</t> <t>I</t> <t>call</t> <t>it</t> <t>via</t> <code><c>python</c> <c>.</c><c>/programs/my_python_program.py</c></code> <t>script</t>.
"
2349991|"<t>Python</t>: <t>How</t> <t>to</t> <t>import</t> <t>other</t> <t>Python</t> <t>files</t>"|"<t>How</t> <t>do</t> <t>I</t> <t>import</t> <t>other</t> <t>files</t> <t>in</t> <t>Python</t>?


<t>How</t> <t>exactly</t> <t>can</t> <t>I</t> <t>import</t> <t>a</t> <t>specific</t> <t>python</t> <t>file</t> <t>like</t> <code><c>import</c> <c>file</c><c>.</c><c>py</c></code>?
<t>How</t> <t>can</t> <t>I</t> <t>import</t> <t>a</t> <t>folder</t> <t>instead</t> <t>of</t> <t>a</t> <t>specific</t> <t>file</t>?
<t>I</t> <t>want</t> <t>to</t> <t>load</t> <t>a</t> <t>Python</t> <t>file</t> <t>dynamically</t> <t>at</t> <t>runtime</t>, <t>based</t> <t>on</t> <t>user</t>
<t>input</t>.
<t>I</t> <t>want</t> <t>to</t> <t>know</t> <t>how</t> <t>to</t> <t>load</t> <t>just</t> <t>one</t> <t>specific</t> <t>part</t> <t>from</t> <t>the</t> <t>file</t>.


<t>For</t> <t>example</t>, <t>in</t> <code><c>main</c><c>.</c><c>py</c></code> <t>I</t> <t>have</t>:

<code><c>from</c> <c>extra</c> <c>import</c> <c>*</c> 
</code>

<t>although</t> <t>this</t> <t>gives</t> <t>me</t> <t>all</t> <t>the</t> <t>definitions</t> <t>in</t> <code><c>extra</c><c>.</c><c>py</c></code> <t>when</t> <t>maybe</t> <t>all</t> <t>I</t> <t>want</t> <t>is</t> <t>a</t> <t>single</t> <t>definition</t>:

<code><c>def</c> <c>gap(</c>):
    <c>print</c>
    <c>print</c>
</code>

<t>What</t> <t>do</t> <t>I</t> <t>add</t> <t>to</t> <t>the</t> <code><c>import</c></code> <t>statement</t> <t>to</t> <t>just</t> <t>get</t> <code><c>gap</c></code> <t>from</t> <code><c>extra</c><c>.</c><c>py</c></code>?
"
2356501|"<t>How</t> <t>do</t> <t>you</t> <t>round</t> <t>UP</t> <t>a</t> <t>number</t> <t>in</t> <t>Python</t>?"|"<t>This</t> <t>problem</t> <t>is</t> <t>killing</t> <t>me</t>. <t>How</t> <t>does</t> <t>one</t> <t>roundup</t> <t>a</t> <t>number</t> <t>UP</t> <t>in</t> <t>Python</t>?

<t>I</t> <t>tried</t> <t>round(number</t>) <t>but</t> <t>it</t> <t>round</t> <t>the</t> <t>number</t> <t>down</t>. <t>Example</t>:

<code><c>round(</c><c>2.3</c>) <c>=</c> <c>2.0</c> <c>and</c> <c>not</c> <c>3</c>, <c>what</c> <c>I</c> <c>would</c> <c>like</c>
</code>

<t>The</t> <t>I</t> <t>tried</t> <t>int(number</t> <t>+</t> <t>.5</t>) <t>but</t> <t>it</t> <t>round</t> <t>the</t> <t>number</t> <t>down</t> <t>again</t>! <t>Example</t>:

<code><c>int(</c><c>2.3</c> <c>+</c> .5) = 2
</code>

<t>Then</t> <t>I</t> <t>tried</t> <t>round(number</t> <t>+</t> <t>.5</t>) <t>but</t> <t>it</t> <t>won't</t> <t>work</t> <t>in</t> <t>edge</t> <t>cases</t>. <t>Example</t>:

<code><c>WAIT</c><c>!</c> <c>THIS</c> <c>WORKED</c><c>!</c>
</code>

<t>Please</t> <t>advise</t>.
"
2365411|"<t>Python</t>: <t>Convert Unicode</t> <t>to</t> <t>ASCII</t> <t>without</t> <t>errors</t>"|"<t>My</t> <t>code</t> <t>just</t> <t>scrapes</t> <t>a</t> <t>web</t> <t>page</t>, <t>then</t> <t>converts</t> <t>it</t> <t>to</t> <t>Unicode</t>.

<code><c>html</c> <c>=</c> <c>urllib</c><c>.</c><c>urlopen(</c><c>link</c>)<c>.</c><c>read(</c>)
<c>html</c><c>.</c><c>encode(</c>""<c>utf8</c>"",""<c>ignore</c>"")
<c>self</c><c>.</c><c>response</c><c>.</c><c>out</c><c>.</c><c>write(</c><c>html</c>)
</code>

<t>But</t> <t>I</t> <t>get</t> <t>a</t> <code><c>UnicodeDecodeError</c></code>:



<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>/Applications/GoogleAppEngineLauncher.app/Contents/Resources/GoogleAppEngine-default.bundle/Contents/Resources/google_appengine/google/appengine/ext/webapp/__init__.py</c>"", <c>line</c> <c>507</c>, <c>in</c> <c>__call__</c>
    <c>handler</c><c>.</c><c>get(</c><c>*</c><c>groups</c>)
  <c>File</c> ""<c>/Users/greg/clounce/main.py</c>"", <c>line</c> <c>55</c>, <c>in</c> <c>get</c>
    <c>html</c><c>.</c><c>encode(</c>""<c>utf8</c>"",""<c>ignore</c>"")
<c>UnicodeDecodeError</c>: '<c>ascii</c>' <c>codec</c> <c>can</c>'<c>t</c> <c>decode</c> <c>byte</c> 0xa0 in position 2818: ordinal not in range(128)
</code>

<t>So</t> <t>I</t> <t>assume</t> <t>that</t> <t>means</t> <t>the</t> <t>HTML</t> <t>contains</t> <t>some</t> <t>wrongly-formed</t> <t>attempt</t> <t>at</t> <t>Unicode</t> <t>somewhere</t>. <t>Can</t> <t>I</t> <t>just</t> <t>drop</t> <t>whatever</t> <t>code</t> <t>bytes</t> <t>are</t> <t>causing</t> <t>the</t> <t>problem</t> <t>instead</t> <t>of</t> <t>getting</t> <t>an</t> <t>error</t>?
"
2395160|"<t>What</t> <t>is</t> <t>the</t> <t>correct</t> <t>syntax</t> <t>for</t> '<t>else</t> <t>if</t>'?"|"<t>I'm</t> <t>a</t> <t>new</t> <t>Python</t> <t>programmer</t> <t>who</t> <t>is</t> <t>making</t> <t>the</t> <t>leap</t> <t>from</t> <t>2.6.4</t> <t>to</t> <t>3.1.1.</t> <t>Everything</t> <t>has</t> <t>gone</t> <t>fine</t> <t>until</t> <t>I</t> <t>tried</t> <t>to</t> <t>use</t> <t>the</t> '<t>else</t> <t>if</t>' <t>statement</t>. <t>The</t> <t>interpreter</t> <t>gives</t> <t>me</t> <t>a</t> <t>syntax</t> <t>error</t> <t>after</t> <t>the</t> '<t>if</t>' <t>in</t> '<t>else</t> <t>if</t>' <t>for</t> <t>a</t> <t>reason</t> <t>I</t> <t>can't</t> <t>seem</t> <t>to</t> <t>figure</t> <t>out</t>.

<code><c>def</c> <c>function(</c><c>a</c>):
    <c>if</c> <c>a</c> <c>==</c> '<c>1</c>':
        <c>print</c> ('<c>1</c><c>a</c>')
    <c>else</c> <c>if</c> <c>a</c> <c>==</c> '<c>2</c>'
        <c>print</c> ('<c>2</c><c>a</c>')
    <c>else</c> <c>print</c> ('<c>3</c><c>a</c>')

<c>function(</c><c>input(</c>'<c>input</c>:'))
</code>

<t>I'm</t> <t>probably</t> <t>missing</t> <t>something</t> <t>very</t> <t>simple;</t> <t>however</t>, <t>I</t> <t>haven't</t> <t>been</t> <t>able</t> <t>to</t> <t>find</t> <t>the</t> <t>answer</t> <t>on</t> <t>my</t> <t>own</t>. 
"
2397141|"<t>How</t> <t>to</t> <t>initialize</t> <t>a</t> <t>two-dimensional</t> <t>array</t> <t>in</t> <t>Python</t>?"|"<t>I'm</t> <t>beginning</t> <t>python</t> <t>and</t> <t>I'm</t> <t>trying</t> <t>to</t> <t>use</t> <t>a</t> <t>two-dimensional</t> <t>list</t>, <t>that</t> <t>I</t> <t>initially</t> <t>fill</t> <t>up</t> <t>with</t> <t>the</t> <t>same</t> <t>variable</t> <t>in</t> <t>every</t> <t>place</t>. <t>I</t> <t>came</t> <t>up</t> <t>with</t> <t>this</t>:

<code><c>def</c> <c>initialize_twodlist(</c><c>foo</c>):
    <c>twod_list</c> <c>=</c> []
    <c>new</c> <c>=</c> []
    <c>for</c> <c>i</c> <c>in</c> <c>range</c> (<c>0</c>, <c>10</c>):
        <c>for</c> <c>j</c> <c>in</c> <c>range</c> (<c>0</c>, <c>10</c>):
            <c>new</c><c>.</c><c>append(</c><c>foo</c>)
        <c>twod_list</c><c>.</c><c>append(</c><c>new</c>)
        <c>new</c> <c>=</c> []
</code>

<t>It</t> <t>gives</t> <t>the</t> <t>desired</t> <t>result</t>, <t>but</t> <t>feels</t> <t>like</t> <t>a</t> <t>workaround</t>. <t>Is</t> <t>there</t> <t>an</t> <t>easier/shorter/more</t> <t>elegant</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>?
"
2428092|"<t>Creating</t> <t>a</t> <t>JSON</t> <t>response</t> <t>using</t> <t>Django</t> <t>and</t> <t>Python</t>"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>convert</t> <t>a</t> <t>server</t> <t>side</t> <t>Ajax</t> <t>response</t> <t>script</t> <t>into</t> <t>a</t> <t>Django</t> <t>HttpResponse</t>, <t>but</t> <t>apparently</t> <t>it's</t> <t>not</t> <t>working</t>.

<t>This</t> <t>is</t> <t>the</t> <t>server-side</t> <t>script</t>:

<code><c>/*</c> <c>RECEIVE</c> <c>VALUE</c> <c>*</c><c>/
$validateValue=$_POST[</c>'<c>validateValue</c>'];
<c>$</c><c>validateId</c><c>=</c><c>$</c><c>_POST</c>['<c>validateId</c>'];
<c>$</c><c>validateError</c><c>=</c><c>$</c><c>_POST</c>['<c>validateError</c>'];

<c>/*</c> <c>RETURN</c> <c>VALUE</c> <c>*</c><c>/
$arrayToJs</c> <c>=</c> <c>array(</c>);
<c>$</c><c>arrayToJs</c>[<c>0</c>] <c>=</c> <c>$</c><c>validateId</c>;
<c>$</c><c>arrayToJs</c>[<c>1</c>] <c>=</c> <c>$</c><c>validateError</c>;

<c>if(</c><c>$</c><c>validateValue</c> <c>==</c>""<c>Testuser</c>""){  <c>//</c> <c>Validate</c><c>?</c><c>?</c>
    <c>$</c><c>arrayToJs</c>[<c>2</c>] <c>=</c> ""<c>true</c>"";       <c>//</c> <c>RETURN</c> <c>TRUE</c>
    <c>echo</c> '{""<c>jsonValidateReturn</c>"":'<c>.</c><c>json_encode(</c><c>$</c><c>arrayToJs</c>)<c>.</c>'}';  <c>//</c> <c>RETURN</c> <c>ARRAY</c> <c>WITH</c> <c>success</c>
}
<c>else</c>{
    <c>for(</c><c>$</c><c>x</c><c>=</c><c>0</c>;<c>$</c><c>x</c><c>&lt;</c><c>1000000</c>;<c>$</c><c>x</c><c>+</c><c>+</c>){
        <c>if(</c><c>$</c><c>x</c> <c>==</c> <c>990000</c>){
            <c>$</c><c>arrayToJs</c>[<c>2</c>] <c>=</c> ""<c>false</c>"";
            <c>echo</c> '{""<c>jsonValidateReturn</c>"":'<c>.</c><c>json_encode(</c><c>$</c><c>arrayToJs</c>)<c>.</c>'}';   <c>//</c> <c>RETURNS</c> <c>ARRAY</c> <c>WITH</c> <c>ERROR</c><c>.</c>
        }
    }
}
</code>

<t>And</t> <t>this</t> <t>is</t> <t>the</t> <t>converted</t> <t>code</t>

<code><c>def</c> <c>validate_user(</c><c>request</c>):
    <c>if</c> <c>request</c><c>.</c><c>method</c> <c>==</c> '<c>POST</c>':
        <c>vld_value</c> <c>=</c> <c>request</c><c>.</c><c>POST</c><c>.</c><c>get(</c>'<c>validateValue</c>')
        <c>vld_id</c> <c>=</c> <c>request</c><c>.</c><c>POST</c><c>.</c><c>get(</c>'<c>validateId</c>')
        <c>vld_error</c> <c>=</c> <c>request</c><c>.</c><c>POST</c><c>.</c><c>get(</c>'<c>validateError</c>')

        <c>array_to_js</c> <c>=</c> [<c>vld_id</c>, <c>vld_error</c>, <c>False</c>]

        <c>if</c> <c>vld_value</c> <c>==</c> ""<c>TestUser</c>"":
            <c>array_to_js</c>[<c>2</c>] <c>=</c> <c>True</c>
            <c>x</c> <c>=</c> <c>simplejson</c><c>.</c><c>dumps(</c><c>array_to_js</c>)
            <c>return</c> <c>HttpResponse(</c><c>x</c>)
        <c>else</c>:
            <c>array_to_js</c>[<c>2</c>] <c>=</c> <c>False</c>
            <c>x</c> <c>=</c> <c>simplejson</c><c>.</c><c>dumps(</c><c>array_to_js</c>)
            <c>error</c> <c>=</c> '<c>Error</c>'
            <c>return</c> <c>render_to_response(</c>'<c>index</c><c>.</c><c>html</c>',{'<c>error</c>':<c>error</c>},<c>context_instance</c><c>=</c><c>RequestContext(</c><c>request</c>))
    <c>return</c> <c>render_to_response(</c>'<c>index</c><c>.</c><c>html</c>',<c>context_instance</c><c>=</c><c>RequestContext(</c><c>request</c>))
</code>

<t>I'm</t> <t>using</t> <t>simplejson</t> <t>to</t> <t>encode</t> <t>the</t> <t>Python</t> <t>list</t> (<t>so</t> <t>it</t> <t>will</t> <t>return</t> <t>a</t> <t>JSON</t> <t>array</t>). <t>I</t> <t>couldn't</t> <t>figure</t> <t>out</t> <t>the</t> <t>problem</t> <t>yet</t>. <t>But</t> <t>I</t> <t>think</t> <t>that</t> <t>I</t> <t>did</t> <t>something</t> <t>wrong</t> <t>about</t> <t>the</t> '<t>echo</t>'.
"
2429511|"<t>Why</t> <t>do</t> <t>people</t> <t>write</t> <t>#</t>!<t>/usr/bin/env</t> <t>python</t> <t>on</t> <t>the</t> <t>first</t> <t>line</t> <t>of</t> <t>a</t> <t>Python</t> <t>script</t>?"|"<t>It</t> <t>seems</t> <t>to</t> <t>me</t> <t>like</t> <t>the</t> <t>files</t> <t>run</t> <t>the</t> <t>same</t> <t>without</t> <t>that</t> <t>line</t>.
"
2465921|"<t>How</t> <t>to</t> <t>copy</t> <t>a</t> <t>dictionary</t> <t>and</t> <t>only</t> <t>edit</t> <t>the</t> <t>copy</t>"|"<t>Can</t> <t>someone</t> <t>please</t> <t>explain</t> <t>this</t> <t>to</t> <t>me</t>? <t>This</t> <t>doesn't</t> <t>make</t> <t>any</t> <t>sense</t> <t>to</t> <t>me</t>.

<t>I</t> <t>copy</t> <t>a</t> <t>dictionary</t> <t>into</t> <t>another</t> <t>and</t> <t>edit</t> <t>the</t> <t>second</t> <t>and</t> <t>both</t> <t>are</t> <t>changed</t>. <t>Why</t> <t>is</t> <t>this</t> <t>happening</t>?

<code><c>&gt;&gt;&gt;</c> <c>dict1</c> <c>=</c> {""<c>key1</c>"": ""<c>value1</c>"", ""<c>key2</c>"": ""<c>value2</c>""}
<c>&gt;&gt;&gt;</c> <c>dict2</c> <c>=</c> <c>dict1</c>
<c>&gt;&gt;&gt;</c> <c>dict2</c>
{'<c>key2</c>': '<c>value2</c>', '<c>key1</c>': '<c>value1</c>'}
<c>&gt;&gt;&gt;</c> <c>dict2</c>[""<c>key2</c>""] <c>=</c> ""<c>WHY</c><c>?</c><c>!</c>""
<c>&gt;&gt;&gt;</c> <c>dict1</c>
{'<c>key2</c>': '<c>WHY</c><c>?</c><c>!</c>', '<c>key1</c>': '<c>value1</c>'}
</code>
"
2474015|"<t>Getting</t> <t>the</t> <t>index</t> <t>of</t> <t>the</t> <t>returned</t> <t>max</t> <t>or</t> <t>min</t> <t>item</t> <t>using</t> <t>max()/min</t>() <t>on</t> <t>a</t> <t>list</t>"|"<t>I'm</t> <t>using</t> <t>Python's</t> <code><c>max</c></code> <t>and</t> <code><c>min</c></code> <t>functions</t> <t>on</t> <t>lists</t> <t>for</t> <t>a</t> <t>minimax</t> <t>algorithm</t>, <t>and</t> <t>I</t> <t>need</t> <t>the</t> <t>index</t> <t>of</t> <t>the</t> <t>value</t> <t>returned</t> <t>by</t> <code><c>max(</c>)</code> <t>or</t> <code><c>min(</c>)</code>. <t>In</t> <t>other</t> <t>words</t>, <t>I</t> <t>need</t> <t>to</t> <t>know</t> <t>which</t> <t>move</t> <t>produced</t> <t>the</t> <t>max</t> (<t>at</t> <t>a</t> <t>first</t> <t>player's</t> <t>turn</t>) <t>or</t> <t>min</t> (<t>second</t> <t>player</t>) <t>value</t>.

<code><c>for</c> <c>i</c> <c>in</c> <c>range(</c><c>9</c>):
    <c>newBoard</c> <c>=</c> <c>currentBoard</c><c>.</c><c>newBoardWithMove(</c>[<c>i</c> <c>/</c> <c>3</c>, <c>i</c> <c>%</c> <c>3</c>], <c>player</c>)

    <c>if</c> <c>newBoard</c>:
        <c>temp</c> <c>=</c> <c>minMax(</c><c>newBoard</c>, <c>depth</c> <c>+</c> <c>1</c>, <c>not</c> <c>isMinLevel</c>)  
        <c>values</c><c>.</c><c>append(</c><c>temp</c>)

<c>if</c> <c>isMinLevel</c>:
    <c>return</c> <c>min(</c><c>values</c>)
<c>else</c>:
    <c>return</c> <c>max(</c><c>values</c>)
</code>

<t>I</t> <t>need</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>return</t> <t>the</t> <t>actual</t> <t>index</t> <t>of</t> <t>the</t> <t>min</t> <t>or</t> <t>max</t> <t>value</t>, <t>not</t> <t>just</t> <t>the</t> <t>value</t>.
"
2485466|"<t>Python's</t> <t>equivalent</t> <t>of</t> <t>&&</t> (<t>logical-and</t>) <t>in</t> <t>an</t> <t>if-statement</t>"|"<t>Here's</t> <t>my</t> <t>code</t>:

<code># <c>F</c><c>.</c> <c>front_back</c>
# <c>Consider</c> <c>dividing</c> <c>a</c> <c>string</c> <c>into</c> <c>two</c> <c>halves</c><c>.</c>
# <c>If</c> <c>the</c> <c>length</c> <c>is</c> <c>even</c>, <c>the</c> <c>front</c> <c>and</c> <c>back</c> <c>halves</c> <c>are</c> <c>the</c> <c>same</c> <c>length</c><c>.</c>
# <c>If</c> <c>the</c> <c>length</c> <c>is</c> <c>odd</c>, <c>we</c>'<c>ll</c> <c>say</c> <c>that</c> <c>the</c> <c>extra</c> <c>char</c> <c>goes</c> <c>in</c> <c>the</c> <c>front</c> <c>half</c><c>.</c>
# <c>e</c><c>.</c><c>g</c><c>.</c> '<c>abcde</c>', <c>the</c> <c>front</c> <c>half</c> <c>is</c> '<c>abc</c>', <c>the</c> <c>back</c> <c>half</c> '<c>de</c>'<c>.</c>
# <c>Given</c> <c>2</c> <c>strings</c>, <c>a</c> <c>and</c> <c>b</c>, <c>return</c> <c>a</c> <c>string</c> <c>of</c> <c>the</c> <c>form</c>
#  <c>a-front</c> <c>+</c> <c>b-front</c> <c>+</c> <c>a-back</c> <c>+</c> <c>b-back</c>
<c>def</c> <c>front_back(</c><c>a</c>, <c>b</c>):
  # <c>+</c><c>+</c><c>+</c><c>your</c> <c>code</c> <c>here</c><c>+</c><c>+</c><c>+</c>
  <c>if</c> <c>len(</c><c>a</c>) <c>%</c> <c>2</c> <c>==</c> <c>0</c> <c>&</c><c>amp</c>;<c>&</c><c>amp</c>; <c>len(</c><c>b</c>) <c>%</c> <c>2</c> <c>==</c> <c>0</c>:
    <c>return</c> <c>a</c>[:(<c>len(</c><c>a</c>)<c>/2)]</c> <c>+</c> <c>b</c>[:(<c>len(</c><c>b</c>)<c>/2)]</c> <c>+</c> <c>a</c>[(<c>len(</c><c>a</c>)<c>/2):]</c> <c>+</c> <c>b</c>[(<c>len(</c><c>b</c>)<c>/2):]</c> 
  <c>else</c>:
    #<c>todo</c><c>!</c> <c>Not</c> <c>yet</c> <c>done</c><c>.</c> :<c>P</c>
  <c>return</c>
</code>

<t>I'm</t> <t>getting</t> <t>an</t> <t>error</t> <t>in</t> <t>the</t> <t>IF</t> <t>conditional</t>. <t>What</t> <t>am</t> <t>I</t> <t>doing</t> <t>wrong</t>?
"
2502833|"<t>Store</t> <t>output</t> <t>of</t> <t>subprocess</t>.<t>Popen</t> <t>call</t> <t>in</t> <t>a</t> <t>string</t>"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>make</t> <t>a</t> <t>system</t> <t>call</t> <t>in</t> <t>Python</t> <t>and</t> <t>store</t> <t>the</t> <t>output</t> <t>to</t> <t>a</t> <t>string</t> <t>that</t> <t>I</t> <t>can</t> <t>manipulate</t> <t>in</t> <t>the</t> <t>Python</t> <t>program</t>.

<code>#<c>!</c><c>/usr/bin/python
import</c> <c>subprocess</c>
<c>p2</c> <c>=</c> <c>subprocess</c><c>.</c><c>Popen(</c>""<c>ntpq</c> <c>-</c><c>p</c>"")
</code>

<t>I've</t> <t>tried</t> <t>a</t> <t>few</t> <t>things</t> <t>including</t> <t>some</t> <t>of</t> <t>the</t> <t>suggestions</t> <t>here</t>:

<t>Retrieving</t> <t>the</t> <t>output</t> <t>of</t> <t>subprocess</t>.<t>call</t>()

<t>but</t> <t>without</t> <t>any</t> <t>luck</t>.
"
2504411|"<t>Proper</t> <t>indentation</t> <t>for</t> <t>Python</t> <t>multiline</t> <t>strings</t>"|"<t>What</t> <t>is</t> <t>the</t> <t>proper</t> <t>indentation</t> <t>for</t> <t>Python</t> <t>multiline</t> <t>strings</t> <t>within</t> <t>a</t> <t>function</t>?

<code>    <c>def</c> <c>method(</c>):
        <c>string</c> <c>=</c> """"""<c>line</c> <c>one</c>
<c>line</c> <c>two</c>
<c>line</c> <c>three</c>""""""
</code>

<t>or</t>

<code>    <c>def</c> <c>method(</c>):
        <c>string</c> <c>=</c> """"""<c>line</c> <c>one</c>
        <c>line</c> <c>two</c>
        <c>line</c> <c>three</c>""""""
</code>

<t>or</t> <t>something</t> <t>else</t>?

<t>It</t> <t>looks</t> <t>kind</t> <t>of</t> <t>weird</t> <t>to</t> <t>have</t> <t>the</t> <t>string</t> <t>hanging</t> <t>outside</t> <t>the</t> <t>function</t> <t>in</t> <t>the</t> <t>first</t> <t>example</t>.
"
2573135|"<t>Python</t> <t>progression</t> <t>path</t> <t>-</t> <t>From</t> <t>apprentice</t> <t>to</t> <t>guru</t>"|"<t>I've</t> <t>been</t> <t>learning</t>, <t>working</t>, <t>and</t> <t>playing</t> <t>with</t> <t>Python</t> <t>for</t> <t>a</t> <t>year</t> <t>and</t> <t>a</t> <t>half</t> <t>now</t>. <t>As</t> <t>a</t> <t>biologist</t> <t>slowly</t> <t>making</t> <t>the</t> <t>turn</t> <t>to</t> <t>bio-informatics</t>, <t>this</t> <t>language</t> <t>has</t> <t>been</t> <t>at</t> <t>the</t> <t>very</t> <t>core</t> <t>of</t> <t>all</t> <t>the</t> <t>major</t> <t>contributions</t> <t>I</t> <t>have</t> <t>made</t> <t>in</t> <t>the</t> <t>lab</t>. <t>I</t> <t>more</t> <t>or</t> <t>less</t> <t>fell</t> <t>in</t> <t>love</t> <t>with</t> <t>the</t> <t>way</t> <t>Python</t> <t>permits</t> <t>me</t> <t>to</t> <t>express</t> <t>beautiful</t> <t>solutions</t> <t>and</t> <t>also</t> <t>with</t> <t>the</t> <t>semantics</t> <t>of</t> <t>the</t> <t>language</t> <t>that</t> <t>allows</t> <t>such</t> <t>a</t> <t>natural</t> <t>flow</t> <t>from</t> <t>thoughts</t> <t>to</t> <t>workable</t> <t>code</t>.

<t>What</t> <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>know</t> <t>is</t> <t>your</t> <t>answer</t> <t>to</t> <t>a</t> <t>kind</t> <t>of</t> <t>question</t> <t>I</t> <t>have</t> <t>seldom</t> <t>seen</t> <t>in</t> <t>this</t> <t>or</t> <t>other</t> <t>forums</t>. <t>This</t> <t>question</t> <t>seems</t> <t>central</t> <t>to</t> <t>me</t> <t>for</t> <t>anyone</t> <t>on</t> <t>the</t> <t>path</t> <t>to</t> <t>Python</t> <t>improvement</t> <t>but</t> <t>who</t> <t>wonders</t> <t>what</t> <t>his</t> <t>next</t> <t>steps</t> <t>should</t> <t>be</t>.

<t>Let</t> <t>me</t> <t>sum</t> <t>up</t> <t>what</t> <t>I</t> <t>do</t> <t>NOT</t> <t>want</t> <t>to</t> <t>ask</t> <t>first</t> <t>;</t>)


<t>I</t> <t>don't</t> <t>want</t> <t>to</t> <t>know</t> <t>how</t> <t>to</t> <t>QUICKLY</t> <t>learn</t> <t>Python</t>
<t>Nor</t> <t>do</t> <t>I</t> <t>want</t> <t>to</t> <t>find</t> <t>out</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>get</t> <t>acquainted</t> <t>with</t> <t>the</t> <t>language</t>
<t>Finally</t>, <t>I</t> <t>don't</t> <t>want</t> <t>to</t> <t>know</t> <t>a</t> '<t>one</t> <t>trick</t> <t>that</t> <t>does</t> <t>it</t> <t>all</t>' <t>approach</t>.


<t>What</t> <t>I</t> <t>do</t> <t>want</t> <t>to</t> <t>know</t> <t>your</t> <t>opinion</t> <t>about</t>, <t>is</t>:

<t>What</t> <t>are</t> <t>the</t> <t>steps</t> <t>YOU</t> <t>would</t> <t>recommend</t> <t>to</t> <t>a</t> <t>Python</t> <t>journeyman</t>, <t>from</t> <t>apprenticeship</t> <t>to</t> <t>guru</t> <t>status</t> (<t>feel</t> <t>free</t> <t>to</t> <t>stop</t> <t>wherever</t> <t>your</t> <t>expertise</t> <t>dictates</t> <t>it</t>), <t>in</t> <t>order</t> <t>that</t> <t>one</t> <t>IMPROVES</t> <t>CONSTANTLY</t>, <t>becoming</t> <t>a</t> <t>better</t> <t>and</t> <t>better</t> <t>Python</t> <t>coder</t>, <t>one</t> <t>step</t> <t>at</t> <t>a</t> <t>time</t>. <t>Some</t> <t>of</t> <t>the</t> <t>people</t> <t>on</t> <t>SO</t> <t>almost</t> <t>seem</t> <t>worthy</t> <t>of</t> <t>worship</t> <t>for</t> <t>their</t> <t>Python</t> <t>prowess</t>, <t>please</t> <t>enlighten</t> <t>us</t> :)

<t>The</t> <t>kind</t> <t>of</t> <t>answers</t> <t>I</t> <t>would</t> <t>enjoy</t> (<t>but</t> <t>feel</t> <t>free</t> <t>to</t> <t>surprise</t> <t>the</t> <t>readership</t> :<t>P</t> ), <t>is</t> <t>formatted</t> <t>more</t> <t>or</t> <t>less</t> <t>like</t> <t>this</t>:


<t>Read</t> <t>this</t> (<t>eg</t>: <t>python</t> <t>tutorial</t>), <t>pay</t> <t>attention</t> <t>to</t> <t>that</t> <t>kind</t> <t>of</t> <t>details</t>
<t>Code</t> <t>for</t> <t>so</t> <t>manytime/problems/lines</t> <t>of</t> <t>code</t>
<t>Then</t>, <t>read</t> <t>this</t> (<t>eg</t>: <t>this</t> <t>or</t> <t>that</t> <t>book</t>), <t>but</t> <t>this</t> <t>time</t>, <t>pay</t> <t>attention</t> <t>to</t> <t>this</t>
<t>Tackle</t> <t>a</t> <t>few</t> <t>real-life</t> <t>problems</t>
<t>Then</t>, <t>proceed</t> <t>to</t> <t>reading</t> <t>Y</t>.
<t>Be</t> <t>sure</t> <t>to</t> <t>grasp</t> <t>these</t> <t>concepts</t>
<t>Code</t> <t>for</t> <t>X</t> <t>time</t>
<t>Come</t> <t>back</t> <t>to</t> <t>such</t> <t>and</t> <t>such</t> <t>basics</t> <t>or</t> <t>move</t> <t>further</t> <t>to...</t>
(<t>you</t> <t>get</t> <t>the</t> <t>point</t> :)


<t>I</t> <t>really</t> <t>care</t> <t>about</t> <t>knowing</t> <t>your</t> <t>opinion</t> <t>on</t> <t>what</t> <t>exactly</t> <t>one</t> <t>should</t> <t>pay</t> <t>attention</t> <t>to</t>, <t>at</t> <t>various</t> <t>stages</t>, <t>in</t> <t>order</t> <t>to</t> <t>progress</t> <t>CONSTANTLY</t> (<t>with</t> <t>due</t> <t>efforts</t>, <t>of</t> <t>course</t>). <t>If</t> <t>you</t> <t>come</t> <t>from</t> <t>a</t> <t>specific</t> <t>field</t> <t>of</t> <t>expertise</t>, <t>discuss</t> <t>the</t> <t>path</t> <t>you</t> <t>see</t> <t>as</t> <t>appropriate</t> <t>in</t> <t>this</t> <t>field</t>.

<t>EDIT</t>: <t>Thanks</t> <t>to</t> <t>your</t> <t>great</t> <t>input</t>, <t>I'm</t> <t>back</t> <t>on</t> <t>the</t> <t>Python</t> <t>improvement</t> <t>track</t>! <t>I</t> <t>really</t> <t>appreciate</t>!
"
2582138|"<t>finding</t> <t>and</t> <t>replacing</t> <t>elements</t> <t>in</t> <t>a</t> <t>list</t> (<t>python</t>)"|"<t>I</t> <t>have</t> <t>to</t> <t>search</t> <t>through</t> <t>a</t> <t>list</t> <t>and</t> <t>replace</t> <t>all</t> <t>occurrences</t> <t>of</t> <t>one</t> <t>element</t> <t>with</t> <t>another</t>. <t>So</t> <t>far</t> <t>my</t> <t>attempts</t> <t>in</t> <t>code</t> <t>are</t> <t>getting</t> <t>me</t> <t>nowhere</t>, <t>what</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>?

<t>For</t> <t>example</t>, <t>suppose</t> <t>my</t> <t>list</t> <t>has</t> <t>the</t> <t>following</t> <t>integers</t>

<code><c>&gt;&gt;&gt;</c> <c>a</c> <c>=</c> [<c>1</c>,<c>2</c>,<c>3</c>,<c>4</c>,<c>5</c>,<c>1</c>,<c>2</c>,<c>3</c>,<c>4</c>,<c>5</c>,<c>1</c>]
</code>

<t>and</t> <t>I</t> <t>need</t> <t>to</t> <t>replace</t> <t>all</t> <t>occurrences</t> <t>of</t> <t>the</t> <t>number</t> <t>1</t> <t>with</t> <t>the</t> <t>value</t> <t>10</t> <t>so</t> <t>the</t> <t>output</t> <t>I</t> <t>need</t> <t>is</t> 

<code><c>&gt;&gt;&gt;</c> <c>a</c> <c>=</c> [<c>10</c>, <c>2</c>, <c>3</c>, <c>4</c>, <c>5</c>, <c>10</c>, <c>2</c>, <c>3</c>, <c>4</c>, <c>5</c>, <c>10</c>]
</code>

<t>Thus</t> <t>my</t> <t>goal</t> <t>is</t> <t>to</t> <t>replace</t> <t>all</t> <t>instances</t> <t>of</t> <t>the</t> <t>number</t> <t>1</t> <t>with</t> <t>the</t> <t>number</t> <t>10</t>.
"
2600191|"<t>How</t> <t>can</t> <t>I</t> <t>count</t> <t>the</t> <t>occurrences</t> <t>of</t> <t>a</t> <t>list</t> <t>item</t> <t>in</t> <t>Python</t>?"|"<t>Given</t> <t>an</t> <t>item</t>, <t>how</t> <t>can</t> <t>I</t> <t>count</t> <t>its</t> <t>occurrences</t> <t>in</t> <t>a</t> <t>list</t> <t>in</t> <t>Python</t>?
"
2612802|"<t>How</t> <t>to</t> <t>clone</t> <t>or</t> <t>copy</t> <t>a</t> <t>list</t>?"|"<t>What</t> <t>are</t> <t>the</t> <t>options</t> <t>to</t> <t>clone</t> <t>or</t> <t>copy</t> <t>a</t> <t>list</t> <t>in</t> <t>Python</t>?

<t>Using</t> <code><c>new_list</c> <c>=</c> <c>my_list</c></code> <t>then</t> <t>modifies</t> <code><c>new_list</c></code> <t>every</t> <t>time</t> <code><c>my_list</c></code> <t>changes</t>.
<t>Why</t> <t>is</t> <t>this</t>?
"
2632677|"<t>Python</t> <t>integer</t> <t>incrementing</t> <t>with</t> <t>++</t>"|"
  <t>Possible</t> <t>Duplicate</t>:
  <t>Python</t>: <t>Behaviour</t> <t>of</t> <t>increment</t> <t>and</t> <t>decrement</t> <t>operators</t>  




<t>I've</t> <t>always</t> <t>laughed</t> <t>to</t> <t>myself</t> <t>when</t> <t>I've</t> <t>looked</t> <t>back</t> <t>at</t> <t>my</t> <t>VB6</t> <t>days</t> <t>and</t> <t>thought</t>, ""<t>What</t> <t>modern</t> <t>language</t> <t>doesn't</t> <t>allow</t> <t>incrementing</t> <t>with</t> <t>double</t> <t>plus</t> <t>signs</t>?"":

<code><c>number</c><c>+</c><c>+</c>
</code>

<t>To</t> <t>my</t> <t>surprise</t>, <t>I</t> <t>can't</t> <t>find</t> <t>anything</t> <t>about</t> <t>this</t> <t>in</t> <t>the</t> <t>Python</t> <t>docs</t>. <t>Must</t> <t>I</t> <t>really</t> <t>subject</t> <t>myself</t> <t>to</t> <code><c>number</c> <c>=</c> <c>number</c> <c>+</c> <c>1</c></code>? <t>Don't</t> <t>people</t> <t>use</t> <t>the</t> <code><c>+</c><c>+</c><c>/--</c></code> <t>notation</t>?
"
2682745|"<t>How</t> <t>do</t> <t>I</t> <t>create</t> <t>a</t> <t>constant</t> <t>in</t> <t>Python</t>?"|"<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>declare</t> <t>a</t> <t>constant</t> <t>in</t> <t>Python</t>? <t>In Java</t> <t>we</t> <t>can</t> <t>create</t> <t>constant</t> <t>values</t> <t>in</t> <t>this</t> <t>manner</t>:

<code><c>public</c> <c>static</c> <c>final</c> <c>String</c> <c>CONST_NAME</c> <c>=</c> ""<c>Name</c>"";
</code>

<t>What</t> <t>is</t> <t>the</t> <t>equivalent</t> <t>of</t> <t>the</t> <t>above</t> <t>Java</t> <t>constant</t> <t>declaration</t> <t>in</t> <t>Python</t>?
"
2709821|"<t>What</t> <t>is</t> <t>the</t> <t>purpose</t> <t>of</t> <t>self</t>?"|"<t>What</t> <t>is</t> <t>the</t> <t>purpose</t> <t>of</t> <t>the</t> <code><c>self</c></code> <t>word</t> <t>in</t> <t>Python</t>? <t>I</t> <t>understand</t> <t>it</t> <t>refers</t> <t>to</t> <t>the</t> <t>specific</t> <t>object</t> <t>created</t> <t>from</t> <t>that</t> <t>class</t>, <t>but</t> <t>I</t> <t>can't</t> <t>see</t> <t>why</t> <t>it</t> <t>explicitly</t> <t>needs</t> <t>to</t> <t>be</t> <t>added</t> <t>to</t> <t>every</t> <t>function</t> <t>as</t> <t>a</t> <t>parameter</t>. <t>To</t> <t>illustrate</t>, <t>in</t> <t>Ruby</t> <t>I</t> <t>can</t> <t>do</t> <t>this</t>:

<code><c>class</c> <c>myClass</c>
    <c>def</c> <c>myFunc(</c><c>name</c>)
        <c>@</c><c>name</c> <c>=</c> <c>name</c>
    <c>end</c>
<c>end</c>
</code>

<t>Which</t> <t>I</t> <t>understand</t>, <t>quite</t> <t>easily</t>. <t>However</t> <t>in</t> <t>Python</t> <t>I</t> <t>need</t> <t>to</t> <t>include</t> <code><c>self</c></code>:

<code><c>class</c> <c>myClass</c>:
    <c>def</c> <c>myFunc(</c><c>self</c>, <c>name</c>):
        <c>self</c><c>.</c><c>name</c> <c>=</c> <c>name</c>
</code>

<t>Can</t> <t>anyone</t> <t>talk</t> <t>me</t> <t>through</t> <t>this</t>? <t>It</t> <t>is</t> <t>not</t> <t>something</t> <t>I've</t> <t>come</t> <t>across</t> <t>in</t> <t>my</t> (<t>admittedly</t> <t>limited</t>) <t>experience</t>.
"
2710940|"<t>Python</t> <t>`if</t> <t>x</t> <t>is</t> <t>not</t> <t>None`</t> <t>or</t> <t>`if</t> <t>not</t> <t>x</t> <t>is</t> <t>None`</t>?"|"<t>I've</t> <t>always</t> <t>thought</t> <t>of</t> <t>the</t> <code><c>if</c> <c>not</c> <c>x</c> <c>is</c> <c>None</c></code> <t>version</t> <t>to</t> <t>be</t> <t>more</t> <t>clear</t>, <t>but</t> <t>Google's</t> <t>style</t> <t>guide</t> <t>and</t> <t>PEP-8</t> <t>both</t> <t>use</t> <code><c>if</c> <c>x</c> <c>is</c> <c>not</c> <c>None</c></code>. <t>Is</t> <t>there</t> <t>any</t> <t>minor</t> <t>performance</t> <t>difference</t> (<t>I'm</t> <t>assuming</t> <t>not</t>), <t>and</t> <t>is</t> <t>there</t> <t>any</t> <t>case</t> <t>where</t> <t>one</t> <t>really</t> <t>doesn't</t> <t>fit</t> (<t>making</t> <t>the</t> <t>other</t> <t>a</t> <t>clear</t> <t>winner</t> <t>for</t> <t>my</t> <t>convention</t>)?<t>*</t>

<t>*I'm</t> <t>referring</t> <t>to</t> <t>any</t> <t>singleton</t>, <t>rather</t> <t>than</t> <t>just</t> <code><c>None</c></code>.


  <t>...to</t> <t>compare</t> <t>singletons</t> <t>like</t>
  <t>None</t>. <t>Use</t> <t>is</t>  <t>or</t> <t>is</t> <t>not</t>.

"
2711579|"<t>Concatenate</t> <t>strings</t> <t>in</t> <t>python</t> <t>2.4</t>?"|"<t>How</t> <t>to</t> <t>concatenate</t> <t>strings</t> <t>in</t> <t>python</t>?  

<t>For</t> <t>example</t>:

<code><c>Section</c> <c>=</c> '<c>C_type</c>'
</code>

<t>Concatenate</t> <t>it</t> <t>with</t> <code><c>Sec_</c></code> <t>to</t> <t>form</t> <t>the</t> <t>string</t>:

<code><c>Sec_C_type</c>
</code>
"
2720014|"<t>Upgrading</t> <t>all</t> <t>packages</t> <t>with</t> <t>pip</t>"|"<t>Is</t> <t>it</t> <t>possible</t> <t>to</t> <t>upgrade</t> <t>all</t> <t>Python</t> <t>packages</t> <t>at</t> <t>one</t> <t>time</t> <t>with</t> <code><c>pip</c></code>?

<t>Note</t> <t>that</t> <t>there</t> <t>is</t> <t>a</t> <t>feature</t> <t>request</t> <t>for</t> <t>this</t> <t>on</t> <t>the</t> <t>official</t> <t>issue</t> <t>tracker</t>.
"
2759067|"<t>Rename</t> <t>multiple</t> <t>files</t> <t>in</t> <t>a</t> <t>directory</t> <t>in</t> <t>Python</t>"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>rename</t> <t>some</t> <t>files</t> <t>in</t> <t>a</t> <t>directory</t> <t>using</t> <t>Python</t>.

<t>Say</t> <t>I</t> <t>have</t> <t>a</t> <t>file</t> <t>called</t> <code><c>CHEESE_CHEESE_TYPE</c><c>.</c><c>**</c><c>*</c></code> <t>and</t> <t>want</t> <t>to</t> <t>remove</t> <code><c>CHEESE_</c></code> <t>so</t> <t>my</t> <t>resulting</t> <t>filename</t> <t>would</t> <t>be</t> <code><c>CHEESE_TYPE</c></code>

<t>I'm</t> <t>trying</t> <t>to</t> <t>use</t> <t>the</t> <code><c>os</c><c>.</c><c>path</c><c>.</c><c>split</c></code> <t>but</t> <t>it's</t> <t>not</t> <t>working</t> <t>properly</t>. <t>I</t> <t>have</t> <t>also</t> <t>considered</t> <t>using</t> <t>string</t> <t>manipulations</t>, <t>but</t> <t>have</t> <t>not</t> <t>been</t> <t>successful</t> <t>with</t> <t>that</t> <t>either</t>.
"
2775864|"<t>Python Create</t> <t>unix</t> <t>timestamp</t> <t>five</t> <t>minutes</t> <t>in</t> <t>the</t> <t>future</t>"|"<t>I</t> <t>have</t> <t>to</t> <t>create</t> <t>an</t> ""<t>Expires</t>"" <t>value</t> <t>5</t> <t>minutes</t> <t>in</t> <t>the</t> <t>future</t>, <t>but</t> <t>I</t> <t>have</t> <t>to</t> <t>supply</t> <t>it</t> <t>in</t> <t>UNIX Timestamp</t> <t>format</t>.  <t>I</t> <t>have</t> <t>this</t> <t>so</t> <t>far</t>, <t>but</t> <t>it</t> <t>seems</t> <t>like</t> <t>a</t> <t>hack</t>.

<code><c>def</c> <c>expires(</c>):
    '''<c>return</c> <c>a</c> <c>UNIX</c> <c>style</c> <c>timestamp</c> <c>representing</c> <c>5</c> <c>minutes</c> <c>from</c> <c>now</c>'''
    <c>epoch</c> <c>=</c> <c>datetime</c><c>.</c><c>datetime(</c><c>1970</c>, <c>1</c>, <c>1</c>)
    <c>seconds_in_a_day</c> <c>=</c> <c>60</c> <c>*</c> <c>60</c> <c>*</c> <c>24</c>
    <c>five_minutes</c> <c>=</c> <c>datetime</c><c>.</c><c>timedelta(</c><c>seconds</c><c>=</c><c>5</c><c>*</c><c>60</c>)
    <c>five_minutes_from_now</c> <c>=</c> <c>datetime</c><c>.</c><c>datetime</c><c>.</c><c>now(</c>) <c>+</c> <c>five_minutes</c>
    <c>since_epoch</c> <c>=</c> <c>five_minutes_from_now</c> <c>-</c> <c>epoch</c>
    <c>return</c> <c>since_epoch</c><c>.</c><c>days</c> <c>*</c> <c>seconds_in_a_day</c> <c>+</c> <c>since_epoch</c><c>.</c><c>seconds</c>
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>module</t> <t>or</t> <t>function</t> <t>that</t> <t>does</t> <t>the</t> <t>timestamp</t> <t>conversion</t> <t>for</t> <t>me</t>?
"
2792650|"<t>Python3</t> <t>error</t>: ""<t>Import</t> <t>error</t>: <t>No</t> <t>module</t> <t>name</t> <t>urllib2</t>"""|"<t>Here's</t> <t>my</t> <t>code</t>:

<code><c>import</c> <c>urllib2</c><c>.</c><c>request</c>

<c>response</c> <c>=</c> <c>urllib2</c><c>.</c><c>urlopen(</c>""<c>htt</c><c>p://www.google.com</c>"")
<c>html</c> <c>=</c> <c>response</c><c>.</c><c>read(</c>)
<c>print(</c><c>html</c>)
</code>

<t>Any</t> <t>help</t>?
"
2793324|"<t>Is</t> <t>there</t> <t>a</t> <t>simple</t> <t>way</t> <t>to</t> <t>delete</t> <t>a</t> <t>list</t> <t>element</t> <t>by</t> <t>value</t>?"|"<code><c>a</c><c>=</c>[<c>1</c>,<c>2</c>,<c>3</c>,<c>4</c>]
<c>b</c><c>=</c><c>a</c><c>.</c><c>index(</c><c>6</c>)
<c>del</c> <c>a</c>[<c>b</c>]
<c>print</c> <c>a</c>
</code>

<t>The</t> <t>above</t> <t>shows</t> <t>the</t> <t>following</t> <t>error</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>D:\zjm_code\a.py</c>"", <c>line</c> <c>6</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>b</c><c>=</c><c>a</c><c>.</c><c>index(</c><c>6</c>)
<c>ValueError</c>: <c>list</c><c>.</c><c>index(</c><c>x</c>): <c>x</c> <c>not</c> <c>in</c> <c>list</c>
</code>

<t>So</t> <t>I</t> <t>have</t> <t>to</t> <t>do</t> <t>this</t>:

<code><c>a</c><c>=</c>[<c>1</c>,<c>2</c>,<c>3</c>,<c>4</c>]
<c>try</c>:
    <c>b</c><c>=</c><c>a</c><c>.</c><c>index(</c><c>6</c>)
    <c>del</c> <c>a</c>[<c>b</c>]
<c>except</c>:
    <c>pass</c>
<c>print</c> <c>a</c>
</code>

<t>But</t> <t>is</t> <t>there</t> <t>not</t> <t>a</t> <t>simpler</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>?
"
2802726|"<t>Putting</t> <t>a</t> <t>simple</t> <t>if-then</t> <t>statement</t> <t>on</t> <t>one</t> <t>line</t>"|"
  <t>Possible</t> <t>Duplicate</t>:
  <t>Python Ternary Operator</t>  




<t>I'm</t> <t>just</t> <t>getting</t> <t>into</t> <t>Python</t> <t>and</t> <t>I</t> <t>really</t> <t>like</t> <t>the</t> <t>terseness</t> <t>of</t> <t>the</t> <t>syntax</t>. <t>However</t>, <t>is</t> <t>there</t> <t>an</t> <t>easier</t> <t>way</t> <t>of</t> <t>writing</t> <t>an</t> <t>if-then</t> <t>statement</t> <t>so</t> <t>it</t> <t>fits</t> <t>on</t> <t>one</t> <t>line</t>?

<t>For</t> <t>example</t>:

<code><c>if</c> <c>count</c> <c>==</c> <c>N</c>:
    <c>count</c> <c>=</c> <c>0</c>
<c>else</c>:
    <c>count</c> <c>=</c> <c>N</c> <c>+</c> <c>1</c>
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>simpler</t> <t>way</t> <t>of</t> <t>writing</t> <t>this</t>? <t>I</t> <t>mean</t>, <t>in</t> <t>Objective-C</t> <t>I</t> <t>would</t> <t>write</t> <t>this</t> <t>as</t>:

<code><c>count</c> <c>=</c> <c>count</c> <c>==</c> <c>N</c> <c>?</c> <c>0</c> : <c>count</c> <c>+</c> <c>1</c>;
</code>

<t>Is</t> <t>there</t> <t>something</t> <t>similar</t> <t>for</t> <t>Python</t>?

<t>Update</t>

<t>I</t> <t>know</t> <t>that</t> <t>in</t> <t>this</t> <t>instance</t> <t>I</t> <t>can</t> <t>use</t> <code><c>count</c> <c>==</c> (<c>count</c> <c>+</c> <c>1</c>) <c>%</c> <c>N</c></code>. 

<t>I'm</t> <t>asking</t> <t>about</t> <t>the</t> <t>general</t> <t>syntax</t>.
"
2817869|"<t>error</t>: <t>Unable</t> <t>to</t> <t>find</t> <t>vcvarsall</t>.<t>bat</t>"|"<t>I</t> <t>tried</t> <t>to</t> <t>install</t> <t>the</t> <t>Python</t> <t>package</t> <t>dulwich</t>:

<code><c>pip</c> <c>install</c> <c>dulwich</c>
</code>

<t>But</t> <t>I</t> <t>get</t> <t>a</t> <t>cryptic</t> <t>error</t> <t>message</t>:

<code><c>error</c>: <c>Unable</c> <c>to</c> <c>find</c> <c>vcvarsall</c><c>.</c><c>bat</c>
</code>

<t>The</t> <t>same</t> <t>happens</t> <t>if</t> <t>I</t> <t>try</t> <t>installing</t> <t>the</t> <t>package</t> <t>manually</t>:

<code><c>&gt;</c> <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>install</c>
<c>running</c> <c>build_ext</c>
<c>building</c> '<c>dulwich</c><c>.</c><c>_objects</c>' <c>extension</c>
<c>error</c>: <c>Unable</c> <c>to</c> <c>find</c> <c>vcvarsall</c><c>.</c><c>bat</c>
</code>
"
2835559|"<t>Parsing</t> <t>values</t> <t>from</t> <t>a</t> <t>JSON</t> <t>file</t>?"|"<t>I</t> <t>have</t> <t>this</t> <t>JSON</t> <t>in</t> <t>a</t> <t>file</t>:

<code>{
    ""<c>maps</c>"": [
        {
            ""<c>id</c>"": ""<c>blabla</c>"",
            ""<c>iscategorical</c>"": ""<c>0</c>""
        },
        {
            ""<c>id</c>"": ""<c>blabla</c>"",
            ""<c>iscategorical</c>"": ""<c>0</c>""
        }
    ],
    ""<c>masks</c>"": [
        ""<c>id</c>"": ""<c>valore</c>""
    ],
    ""<c>om_points</c>"": ""<c>value</c>"",
    ""<c>parameters</c>"": [
        ""<c>id</c>"": ""<c>valore</c>""
    ]
}
</code>

<t>I</t> <t>wrote</t> <t>this</t> <t>script</t> <t>which</t> <t>prints</t> <t>all</t> <t>of</t> <t>the</t> <t>json</t> <t>text</t>:

<code><c>json_data</c><c>=</c><c>open(</c><c>file_directory</c>)<c>.</c><c>read(</c>)

<c>data</c> <c>=</c> <c>json</c><c>.</c><c>loads(</c><c>json_data</c>)
<c>pprint(</c><c>data</c>)
</code>

<t>How</t> <t>can</t> <t>I</t> <t>parse</t> <t>the</t> <t>file</t> <t>and</t> <t>extract</t> <t>single</t> <t>values</t>?
"
2846653|"<t>How</t> <t>to</t> <t>use</t> <t>threading</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>understand</t> <t>threading</t> <t>in</t> <t>Python</t>. <t>I've</t> <t>looked</t> <t>at</t> <t>the</t> <t>documentation</t> <t>and</t> <t>examples</t>, <t>but</t> <t>quite</t> <t>frankly</t>, <t>many</t> <t>examples</t> <t>are</t> <t>overly</t> <t>sophisticated</t> <t>and</t> <t>I'm</t> <t>having</t> <t>trouble</t> <t>understanding</t> <t>them</t>.

<t>How</t> <t>do</t> <t>you</t> <t>clearly</t> <t>show</t> <t>tasks</t> <t>being</t> <t>divided</t> <t>for</t> <t>multi-threading</t>?
"
2847386|"<t>Python String</t> <t>and</t> <t>Integer</t> <t>concatenation</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>create</t> <t>string</t> <t>using</t> <t>integer</t> <t>appended</t> <t>to</t> <t>it</t>, <t>in</t> <t>a</t> <t>for</t> <t>loop</t>.  <t>Like</t> <t>this</t>:

<code><c>for</c> <c>i</c> <c>in</c> <c>range(</c><c>1</c>,<c>11</c>):
  <c>string</c><c>=</c>""<c>string</c>""<c>+</c><c>i</c>
</code>

<t>But</t> <t>it</t> <t>returns</t> <t>an</t> <t>error</t>:

<code><c>TypeError</c>: <c>unsupported</c> <c>operand</c> <c>type(</c><c>s</c>) <c>for</c> <c>+</c>: '<c>int</c>' <c>and</c> '<c>str</c>'
</code>

<t>What's</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>concatenate</t> <t>the</t> <t>String</t> <t>and</t> <t>Integer</t>?
"
2915471|"<t>Install</t> <t>a</t> <t>Python</t> <t>package</t> <t>into</t> <t>a</t> <t>different</t> <t>directory</t> <t>using</t> <t>pip</t>?"|"<t>I</t> <t>know</t> <t>the</t> <t>obvious</t> <t>answer</t> <t>is</t> <t>to</t> <t>use</t> <t>virtualenv</t> <t>and</t> <t>virtualenvwrapper</t>, <t>but</t> <t>for</t> <t>various</t> <t>reasons</t> <t>I</t> <t>can't/don't</t> <t>want</t> <t>to</t> <t>do</t> <t>that</t>.

<t>So</t> <t>how</t> <t>do</t> <t>I</t> <t>modify</t> <t>the</t> <t>command</t>

<code><c>pip</c> <c>install</c> <c>package_name</c>
</code>

<t>to</t> <t>make</t> <code><c>pip</c></code> <t>install</t> <t>the</t> <t>package</t> <t>somewhere</t> <t>other</t> <t>than</t> <t>the</t> <t>default</t> <code><c>site-packages</c></code>?
"
2918362|"<t>writing</t> <t>string</t> <t>to</t> <t>a</t> <t>file</t> <t>on</t> <t>a</t> <t>new</t> <t>line</t> <t>every</t> <t>time</t>?"|"<t>I</t> <t>want</t> <t>to</t> <t>append</t> <t>a</t> <t>newline</t> <t>to</t> <t>my</t> <t>string</t> <t>every</t> <t>time</t> <t>I</t> <t>call</t> <code><c>file</c><c>.</c><c>write(</c>)</code>. <t>What's</t> <t>the</t> <t>easiest</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t> <t>in</t> <t>Python</t>?
"
2952187|"<t>Getting</t> ""<t>Error</t> <t>loading</t> <t>MySQLdb</t> <t>module</t>: <t>No</t> <t>module</t> <t>named</t> <t>MySQLdb</t>"" <t>-</t> <t>have</t> <t>tried</t> <t>previously</t> <t>posted</t> <t>solutions</t>"|"<t>This</t> <t>is</t> <t>a</t> <t>much</t> <t>discussed</t> <t>issue</t> <t>for</t> <t>OSX</t> <t>10.6</t> <t>users</t>, <t>but</t> <t>I</t> <t>haven't</t> <t>been</t> <t>able</t> <t>to</t> <t>find</t> <t>a</t> <t>solution</t> <t>that</t> <t>works</t>. <t>Here's</t> <t>my</t> <t>setup</t>:

<t>Python</t> <t>2.6.1</t> <t>64bit</t>
<t>Django</t> <t>1.2.1</t>
<t>MySQL</t> <t>5.1.47</t> <t>osx10</t>.<t>6</t> <t>64bit</t>

<t>I</t> <t>create</t> <t>a</t> <t>virtualenvwrapper</t> <t>with</t> <t>--no-site-packages</t>, <t>then</t> <t>installed</t> <t>Django</t>. <t>When</t> <t>I</t> <t>activate</t> <t>the</t> <t>virtualenv</t> <t>and</t> <t>run</t> <t>python</t> <t>manage</t>.<t>py</t> <t>syncdb</t>, <t>I</t> <t>get</t> <t>this</t> <t>error</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
<c>File</c> ""<c>manage</c><c>.</c><c>py</c>"", <c>line</c> <c>11</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
  <c>execute_manager(</c><c>settings</c>)
<c>File</c> ""<c>/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/core/management/__init__.py</c>"", <c>line</c> <c>438</c>, <c>in</c> <c>execute_manager</c>
  <c>utility</c><c>.</c><c>execute(</c>)
<c>File</c> ""<c>/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/core/management/__init__.py</c>"", <c>line</c> <c>379</c>, <c>in</c> <c>execute</c>
  <c>self</c><c>.</c><c>fetch_command(</c><c>subcommand</c>)<c>.</c><c>run_from_argv(</c><c>self</c><c>.</c><c>argv</c>)
<c>File</c> ""<c>/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/core/management/__init__.py</c>"", <c>line</c> <c>257</c>, <c>in</c> <c>fetch_command</c>
  <c>klass</c> <c>=</c> <c>load_command_class(</c><c>app_name</c>, <c>subcommand</c>)
<c>File</c> ""<c>/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/core/management/__init__.py</c>"", <c>line</c> <c>67</c>, <c>in</c> <c>load_command_class</c>
  <c>module</c> <c>=</c> <c>import_module(</c>'<c>%</c><c>s</c><c>.</c><c>management</c><c>.</c><c>commands</c><c>.</c><c>%</c><c>s</c>' <c>%</c> (<c>app_name</c>, <c>name</c>))
<c>File</c> ""<c>/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/utils/importlib.py</c>"", <c>line</c> <c>35</c>, <c>in</c> <c>import_module</c>
  <c>__import__(</c><c>name</c>)
<c>File</c> ""<c>/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/core/management/commands/syncdb.py</c>"", <c>line</c> <c>7</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
<c>from</c> <c>django</c><c>.</c><c>core</c><c>.</c><c>management</c><c>.</c><c>sql</c> <c>import</c> <c>custom_sql_for_model</c>, <c>emit_post_sync_signal</c>
<c>File</c> ""<c>/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/core/management/sql.py</c>"", <c>line</c> <c>5</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
<c>from</c> <c>django</c><c>.</c><c>contrib</c><c>.</c><c>contenttypes</c> <c>import</c> <c>generic</c>
<c>File</c> ""<c>/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/contrib/contenttypes/generic.py</c>"", <c>line</c> <c>6</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
  <c>from</c> <c>django</c><c>.</c><c>db</c> <c>import</c> <c>connection</c>
<c>File</c> ""<c>/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/db/__init__.py</c>"", <c>line</c> <c>75</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
  <c>connection</c> <c>=</c> <c>connections</c>[<c>DEFAULT_DB_ALIAS</c>]
<c>File</c> ""<c>/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/db/utils.py</c>"", <c>line</c> <c>91</c>, <c>in</c> <c>__getitem__</c>
  <c>backend</c> <c>=</c> <c>load_backend(</c><c>db</c>['<c>ENGINE</c>'])
<c>File</c> ""<c>/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/db/utils.py</c>"", <c>line</c> <c>32</c>, <c>in</c> <c>load_backend</c>
  <c>return</c> <c>import_module(</c>'<c>.</c><c>base</c>', <c>backend_name</c>)
<c>File</c> ""<c>/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/utils/importlib.py</c>"", <c>line</c> <c>35</c>, <c>in</c> <c>import_module</c>
  <c>__import__(</c><c>name</c>)
<c>File</c> ""<c>/Users/joerobinson/.virtualenvs/dj_tut/lib/python2.6/site-packages/django/db/backends/mysql/base.py</c>"", <c>line</c> <c>14</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
  <c>raise</c> <c>ImproperlyConfigured(</c>""<c>Error</c> <c>loading</c> <c>MySQLdb</c> <c>module</c>: <c>%</c><c>s</c>"" <c>%</c> <c>e</c>)
<c>django</c><c>.</c><c>core</c><c>.</c><c>exceptions</c><c>.</c><c>ImproperlyConfigured</c>: <c>Error</c> <c>loading</c> <c>MySQLdb</c> <c>module</c>: <c>No</c> <c>module</c> <c>named</c> <c>MySQLdb</c>
</code>

<t>I've</t> <t>also</t> <t>installed</t> <t>the</t> <t>MySQL</t> <t>for</t> <t>Python</t> <t>adapter</t>, <t>but</t> <t>to</t> <t>no</t> <t>avail</t> (<t>maybe</t> <t>I</t> <t>installed</t> <t>it</t> <t>improperly</t>?). 

<t>Anyone</t> <t>dealt</t> <t>with</t> <t>this</t> <t>before</t>?
"
2953462|"<t>Pinging</t> <t>servers</t> <t>in</t> <t>Python</t>"|"<t>In</t> <t>Python</t>, <t>is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>ping</t> <t>a</t> <t>server</t> <t>through</t> <t>ICMP</t> <t>and</t> <t>return</t> <t>TRUE</t> <t>if</t> <t>the</t> <t>server</t> <t>responds</t>, <t>or</t> <t>FALSE</t> <t>if</t> <t>there</t> <t>is</t> <t>no</t> <t>response</t>?
"
2958684|"<t>Python</t> <t>division</t>"|"<t>I</t> <t>was</t> <t>trying</t> <t>to</t> <t>normalize</t> <t>a</t> <t>set</t> <t>of</t> <t>numbers</t> <t>from</t> <t>-100</t> <t>to</t> <t>0</t> <t>to</t> <t>a</t> <t>range</t> <t>of</t> <t>10-100</t> <t>and</t> <t>was</t> <t>having</t> <t>problems</t> <t>only</t> <t>to</t> <t>notice</t> <t>that</t> <t>even</t> <t>with</t> <t>no</t> <t>variables</t> <t>at</t> <t>all</t>, <t>this</t> <t>does</t> <t>not</t> <t>evaluate</t> <t>the</t> <t>way</t> <t>I</t> <t>would</t> <t>expect</t> <t>it</t> <t>to</t>:

<code><c>&gt;&gt;&gt;</c> (<c>20-10</c>) <c>/</c> (<c>100-10</c>)
<c>0</c>
</code>

<t>Float</t> <t>division</t> <t>doesn't</t> <t>work</t> <t>either</t>:

<code><c>&gt;&gt;&gt;</c> <c>float(</c>(<c>20-10</c>) <c>/</c> (<c>100-10</c>))
<c>0.0</c>
</code>

<t>If</t> <t>either</t> <t>side</t> <t>of</t> <t>the</t> <t>division</t> <t>is</t> <t>cast</t> <t>to</t> <t>a</t> <t>float</t> <t>it</t> <t>will</t> <t>work</t>:

<code><c>&gt;&gt;&gt;</c> (<c>20-10</c>) <c>/</c> <c>float(</c>(<c>100-10</c>))
<c>0.1111111111111111</c>
</code>

<t>Each</t> <t>side</t> <t>in</t> <t>the</t> <t>first</t> <t>example</t> <t>is</t> <t>evaluating</t> <t>as</t> <t>an</t> <t>int</t> <t>which</t> <t>means</t> <t>the</t> <t>final</t> <t>answer</t> <t>will</t> <t>be</t> <t>cast</t> <t>to</t> <t>an</t> <t>int</t>. <t>Since</t> <t>0.111</t> <t>is</t> <t>less</t> <t>than</t> <t>.5,</t> <t>it</t> <t>rounds</t> <t>to</t> <t>0</t>.  <t>It</t> <t>is</t> <t>not</t> <t>transparent</t> <t>in</t> <t>my</t> <t>opinion</t>, <t>but</t> <t>I</t> <t>guess</t> <t>that's</t> <t>the</t> <t>way</t> <t>it</t> <t>is</t>.

<t>What</t> <t>is</t> <t>the</t> <t>explanation</t>?
"
2960772|"<t>Putting</t> <t>a</t> <t>variable</t> <t>inside</t> <t>a</t> <t>string</t> (<t>python</t>)"|"<t>Hi</t> <t>I</t> <t>am</t> <t>quite</t> <t>new</t> <t>to</t> <t>python</t> <t>and</t> <t>this</t> <t>is</t> <t>probably</t> <t>quite</t> <t>a</t> <t>basic</t> <t>question</t> <t>but</t> <t>the</t> <t>help</t> <t>would</t> <t>be</t> <t>much</t> <t>appreciated</t>.

<t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>put</t> <t>an</t> <t>int</t> <t>within</t> <t>a</t> <t>string</t>. <t>This</t> <t>is</t> <t>what</t> <t>I</t> <t>am</t> <t>doing</t> <t>at</t> <t>the</t> <t>moment..</t>

<code><c>end</c> <c>=</c> <c>smooth(</c><c>data</c>,<c>window_len</c><c>=</c><c>40</c>)
<c>plot</c><c>.</c><c>plot(</c><c>time</c>[<c>0</c>:<c>len(</c><c>end</c>)],<c>end</c>)
<c>plot</c><c>.</c><c>savefig(</c>'<c>hanning(</c><c>40</c>)<c>.</c><c>pdf</c>') #<c>problem</c> <c>line</c>
</code>

<t>I</t> <t>have</t> <t>to</t> <t>run</t> <t>the</t> <t>program</t> <t>for</t> <t>several</t> <t>different</t> <t>numbers</t> <t>instead</t> <t>of</t> <t>the</t> <t>two</t> <t>40's</t>. <t>So I'd</t> <t>like</t> <t>to</t> <t>do</t> <t>a</t> <t>loop</t> <t>but</t> <t>inserting</t> <t>the</t> <t>variable</t> <t>like</t> <t>this</t> <t>doesn't</t> <t>work</t>:

<code><c>plot</c><c>.</c><c>savefig(</c>'<c>hanning</c>',<c>num</c>,'<c>.</c><c>pdf</c>')
</code>

<t>Thanks</t>!
"
2967194|"<t>open</t>() <t>in</t> <t>Python</t> <t>does</t> <t>not</t> <t>create</t> <t>a</t> <t>file</t> <t>if</t> <t>it</t> <t>doesn't</t> <t>exist</t>"|"<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>open</t> <t>a</t> <t>file</t> <t>as</t> <t>read/write</t> <t>if</t> <t>it</t> <t>exists</t>, <t>or</t> <t>if</t> <t>it</t> <t>does</t> <t>not</t>, <t>then</t> <t>create</t> <t>it</t> <t>and</t> <t>open</t> <t>it</t> <t>as</t> <t>read/write</t>? <t>From</t> <t>what</t> <t>I</t> <t>read</t>, <code><c>file</c> <c>=</c> <c>open(</c>'<c>myfile</c><c>.</c><c>dat</c>', '<c>rw</c>')</code> <t>should</t> <t>do</t> <t>this</t>, <t>right</t>?

<t>It</t> <t>is</t> <t>not</t> <t>working</t> <t>for</t> <t>me</t> (<t>Python</t> <t>2.6.2</t>) <t>and</t> <t>I'm</t> <t>wondering</t> <t>if</t> <t>it</t> <t>is</t> <t>a</t> <t>version</t> <t>problem</t>, <t>or</t> <t>not</t> <t>supposed</t> <t>to</t> <t>work</t> <t>like</t> <t>that</t> <t>or</t> <t>what</t>.

<t>The</t> <t>bottom</t> <t>line</t> <t>is</t>, <t>I</t> <t>just</t> <t>need</t> <t>a</t> <t>solution</t> <t>for</t> <t>the</t> <t>problem</t>. <t>I</t> <t>am</t> <t>curious</t> <t>about</t> <t>the</t> <t>other</t> <t>stuff</t>, <t>but</t> <t>all</t> <t>I</t> <t>need</t> <t>is</t> <t>a</t> <t>nice</t> <t>way</t> <t>to</t> <t>do</t> <t>the</t> <t>opening</t> <t>part</t>.

<t>UPDATE</t>: <t>the</t> <t>enclosing</t> <t>directory</t> <t>was</t> <t>writeable</t> <t>by</t> <t>user</t> <t>and</t> <t>group</t>, <t>not</t> <t>other</t> (<t>I'm</t> <t>on</t> <t>a</t> <t>Linux</t> <t>system...</t> <t>so</t> <t>permissions</t> <t>775</t> <t>in</t> <t>other</t> <t>words</t>), <t>and</t> <t>the</t> <t>exact</t> <t>error</t> <t>was</t>:


  <t>IOError</t>: <t>no</t> <t>such</t> <t>file</t> <t>or</t> <t>directory</t>.

"
2972212|"<t>Creating</t> <t>an</t> <t>empty</t> <t>list</t> <t>in</t> <t>Python</t>"|"<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>create</t> <t>a</t> <t>new</t> <t>empty</t> <t>list</t> <t>in</t> <t>Python</t>?

<code><c>l</c> <c>=</c> [] 
</code>

<t>or</t>

<code><c>l</c> <c>=</c> <c>list(</c>)
</code>

<t>I</t> <t>am</t> <t>asking</t> <t>this</t> <t>because</t> <t>of</t> <t>two</t> <t>reasons</t>:


<t>Technical</t> <t>reasons</t>, <t>as</t> <t>to</t> <t>which</t> <t>is</t> <t>faster</t>. (<t>creating</t> <t>a</t> <t>class</t> <t>causes</t> <t>overhead</t>?)
<t>Code</t> <t>readability</t> <t>-</t> <t>which</t> <t>one</t> <t>is</t> <t>the</t> <t>standard</t> <t>convention</t>.

"
2988017|"<t>String</t> <t>comparison</t> <t>in</t> <t>Python</t>: <t>is</t> <t>vs</t>. <t>==</t>"|"<t>I</t> <t>noticed</t> <t>a</t> <t>Python</t> <t>script</t> <t>I</t> <t>was</t> <t>writing</t> <t>was</t> <t>acting</t> <t>squirrelly</t>, <t>and</t> <t>traced</t> <t>it</t> <t>to</t> <t>an</t> <t>infinite</t> <t>loop</t>, <t>where</t> <t>the</t> <t>loop</t> <t>condition</t> <t>was</t> <code><c>while</c> <c>line</c> <c>is</c> <c>not</c> ''</code>. <t>Running</t> <t>through</t> <t>it</t> <t>in</t> <t>the</t> <t>debugger</t>, <t>it</t> <t>turned</t> <t>out</t> <t>that</t> <t>line</t> <t>was</t> <t>in</t> <t>fact</t> <code>''</code>. <t>When</t> <t>I</t> <t>changed</t> <t>it</t> <t>to</t> <code><c>!=</c>''</code> <t>rather</t> <t>than</t> <code><c>is</c> <c>not</c> ''</code>, <t>it</t> <t>worked</t> <t>fine</t>. 

<t>Also</t>, <t>is</t> <t>it</t> <t>generally</t> <t>considered</t> <t>better</t> <t>to</t> <t>just</t> <t>use</t> '<t>==</t>' <t>by</t> <t>default</t>, <t>even</t> <t>when</t> <t>comparing</t> <t>int</t> <t>or</t> <t>Boolean</t> <t>values</t>? <t>I've</t> <t>always</t> <t>liked</t> <t>to</t> <t>use</t> '<t>is</t>' <t>because</t> <t>I</t> <t>find</t> <t>it</t> <t>more</t> <t>aesthetically</t> <t>pleasing</t> <t>and</t> <t>pythonic</t> (<t>which</t> <t>is</t> <t>how</t> <t>I</t> <t>fell</t> <t>into</t> <t>this</t> <t>trap...),</t> <t>but</t> <t>I</t> <t>wonder</t> <t>if</t> <t>it's</t> <t>intended</t> <t>to</t> <t>just</t> <t>be</t> <t>reserved</t> <t>for</t> <t>when</t> <t>you</t> <t>care</t> <t>about</t> <t>finding</t> <t>two</t> <t>objects</t> <t>with</t> <t>the</t> <t>same</t> <t>id</t>.
"
2998215|"<t>If Python</t> <t>is</t> <t>interpreted</t>, <t>what</t> <t>are</t> .<t>pyc</t> <t>files</t>?"|"<t>I've</t> <t>been</t> <t>given</t> <t>to</t> <t>understand</t> <t>that</t> <t>Python</t> <t>is</t> <t>an</t> <t>interpreted</t> <t>language...</t> <t>However</t>, <t>when</t> <t>I</t> <t>look</t> <t>at</t> <t>my</t> <t>Python</t> <t>source</t> <t>code</t> <t>I</t> <t>see</t> <code><c>.</c><c>pyc</c></code> <t>files</t>, <t>which</t> <t>Windows</t> <t>identifies</t> <t>as</t> ""<t>Compiled Python</t> <t>Files</t>"". <t>Where</t> <t>do</t> <t>these</t> <t>come</t> <t>in</t>?
"
3013449|"<t>List</t> <t>filtering</t>: <t>list</t> <t>comprehension</t> <t>vs</t>. <t>lambda</t> <t>+</t> <t>filter</t>"|"<t>I</t> <t>happened</t> <t>to</t> <t>find</t> <t>myself</t> <t>having</t> <t>a</t> <t>basic</t> <t>filtering</t> <t>need</t>: <t>I</t> <t>have</t> <t>a</t> <t>list</t> <t>and</t> <t>I</t> <t>have</t> <t>to</t> <t>filter</t> <t>it</t> <t>by</t> <t>an</t> <t>attribute</t> <t>of</t> <t>the</t> <t>items</t>.

<t>My</t> <t>code</t> <t>looked</t> <t>like</t> <t>this</t>:

<code><c>my_list</c> <c>=</c> [<c>x</c> <c>for</c> <c>x</c> <c>in</c> <c>my_list</c> <c>if</c> <c>x</c><c>.</c><c>attribute</c> <c>==</c> <c>value</c>]
</code>

<t>But</t> <t>then</t> <t>I</t> <t>thought</t>, <t>wouldn't</t> <t>it</t> <t>be</t> <t>better</t> <t>to</t> <t>write</t> <t>it</t> <t>like</t> <t>this</t>?

<code><c>my_list</c> <c>=</c> <c>filter(</c><c>lambda</c> <c>x</c>: <c>x</c><c>.</c><c>attribute</c> <c>==</c> <c>value</c>, <c>my_list</c>)
</code>

<t>It's</t> <t>more</t> <t>readable</t>, <t>and</t> <t>if</t> <t>needed</t> <t>for</t> <t>performance</t> <t>the</t> <t>lambda</t> <t>could</t> <t>be</t> <t>taken</t> <t>out</t> <t>to</t> <t>gain</t> <t>something</t>.  

<t>Question</t> <t>is</t>: <t>are</t> <t>there</t> <t>any</t> <t>caveats</t> <t>in</t> <t>using</t> <t>the</t> <t>second</t> <t>way</t>? <t>Any</t> <t>performance</t> <t>difference</t>? <t>Am</t> <t>I</t> <t>missing</t> <t>the</t> <t>Pythonic</t> <t>Way™</t> <t>entirely</t> <t>and</t> <t>should</t> <t>do</t> <t>it</t> <t>in</t> <t>yet</t> <t>another</t> <t>way</t> (<t>such</t> <t>as</t> <t>using</t> <t>itemgetter</t> <t>instead</t> <t>of</t> <t>the</t> <t>lambda</t>)?
"
3061761|"<t>Numpy</t> <t>array</t> <t>dimensions</t>"|"<t>I'm</t> <t>currently</t> <t>trying</t> <t>to</t> <t>learn</t> <t>Numpy</t> <t>and</t> <t>Python</t>. <t>Given</t> <t>the</t> <t>following</t> <t>array</t>:

<code><c>import</c> <c>numpy</c> <c>as</c> <c>N</c>
<c>a</c> <c>=</c> <c>N</c><c>.</c><c>array(</c>[[<c>1</c>,<c>2</c>],[<c>1</c>,<c>2</c>]])
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>function</t> <t>that</t> <t>returns</t> <t>the</t> <t>dimensions</t> <t>of</t> <code><c>a</c></code> (<t>e.g.a</t> <t>is</t> <t>a</t> <t>2</t> <t>by</t> <t>2</t> <t>array</t>)?

<code><c>size(</c>)</code> <t>returns</t> <t>4</t> <t>and</t> <t>that</t> <t>doesn't</t> <t>help</t> <t>very</t> <t>much</t>. 
"
3097866|"<t>Access</t> <t>an</t> <t>arbitrary</t> <t>element</t> <t>in</t> <t>a</t> <t>dictionary</t> <t>in</t> <t>Python</t>"|"<t>If</t> <t>a</t> <code><c>dict</c></code> <t>is</t> <t>not</t> <t>empty</t>, <t>I</t> <t>access</t> <t>an</t> <t>arbitrary</t> <t>element</t> <t>as</t>:

<code><c>dict</c>[<c>dict</c><c>.</c><c>keys(</c>)[<c>0</c>]]
</code>

<t>Is</t> <t>there</t> <t>any</t> <t>better</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>?
"
3121979|"<t>How</t> <t>to</t> <t>sort</t> (<t>list/tuple</t>) <t>of</t> <t>lists/tuples</t>?"|"<t>I</t> <t>have</t> <t>some</t> <t>data</t> <t>either</t> <t>in</t> <t>list</t> <t>contains</t> <t>lists</t>, <t>or</t> <t>list</t> <t>contains</t> <t>tuples</t>.

<code><c>data</c> <c>=</c> [[<c>1</c>,<c>2</c>,<c>3</c>], [<c>4</c>,<c>5</c>,<c>6</c>], [<c>7</c>,<c>8</c>,<c>9</c>]]
<c>data</c> <c>=</c> [(<c>1</c>,<c>2</c>,<c>3</c>), (<c>4</c>,<c>5</c>,<c>6</c>), (<c>7</c>,<c>8</c>,<c>9</c>)]
</code>

<t>And</t> <t>I</t> <t>want</t> <t>to</t> <t>sort</t> <t>by</t> <t>the</t> <t>2nd</t> <t>element</t> <t>in</t> <t>the</t> <t>subset</t>. <t>Meaning</t>, <t>sorting</t> <t>by</t> <t>2</t>,<t>5</t>,<t>8</t> <t>where</t> <t>2</t> <t>is</t> <t>from</t> (<t>1</t>,<t>2</t>,<t>3</t>), <t>5</t> <t>is</t> <t>from</t> (<t>4</t>,<t>5</t>,<t>6</t>). <t>What</t> <t>is</t> <t>the</t> <t>common</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>? <t>Should</t> <t>I</t> <t>store</t> <t>tuples</t> <t>or</t> <t>lists</t> <t>in</t> <t>my</t> <t>list</t>? <t>Since</t> <t>tuples</t> <t>are</t> <t>more</t> <t>inflexible</t>.
"
3199171|"<t>append</t> <t>multiple</t> <t>values</t> <t>for</t> <t>one</t> <t>key</t> <t>in</t> <t>Python</t> <t>dictionary</t>"|"<t>I</t> <t>am</t> <t>new</t> <t>to</t> <t>python</t> <t>and</t> <t>I</t> <t>have</t> <t>a</t> <t>list</t> <t>of</t> <t>years</t> <t>and</t> <t>values</t> <t>for</t> <t>each</t> <t>year</t>. <t>What</t> <t>I</t> <t>want</t> <t>to</t> <t>do</t> <t>is</t> <t>check</t> <t>if</t> <t>the</t> <t>year</t> <t>already</t> <t>exists</t> <t>in</t> <t>a</t> <t>dictionary</t> <t>and</t> <t>if</t> <t>it</t> <t>does</t>, <t>append</t> <t>the</t> <t>value</t> <t>to</t> <t>that</t> <t>list</t> <t>of</t> <t>values</t> <t>for</t> <t>the</t> <t>specific</t> <t>key</t>.

<t>So</t> <t>for</t> <t>instance</t>, <t>I</t> <t>have</t> <t>a</t> <t>list</t> <t>of</t> <t>years</t> <t>and</t> <t>have</t> <t>one</t> <t>value</t> <t>for</t> <t>each</t> <t>year</t>:

<code><c>2010</c>  
<c>2</c>  
<c>2009</c>  
<c>4</c>  
<c>1989</c>  
<c>8</c>  
<c>2009</c>  
<c>7</c>  
</code>

<t>What</t> <t>I</t> <t>want</t> <t>to</t> <t>do</t> <t>is</t> <t>populate</t> <t>a</t> <t>dictionary</t> <t>with</t> <t>the</t> <t>years</t> <t>as</t> <t>keys</t> <t>and</t> <t>those</t> <t>single</t> <t>digit</t> <t>numbers</t> <t>as</t> <t>values</t>. <t>However</t>, <t>if</t> <t>I</t> <t>have</t> <t>2009</t> <t>listed</t> <t>twice</t>, <t>I</t> <t>want</t> <t>to</t> <t>append</t> <t>that</t> <t>second</t> <t>value</t> <t>to</t> <t>my</t> <t>list</t> <t>of</t> <t>values</t> <t>in</t> <t>that</t> <t>dictionary</t>, <t>so</t> <t>I</t> <t>want</t>:  

<code><c>2010</c>: <c>2</c>  
<c>2009</c>: <c>4</c>, <c>7</c>  
<c>1989</c>: <c>8</c>  
</code>

<t>Right</t> <t>now</t> <t>I</t> <t>have</t> <t>the</t> <t>following</t>:  

<code><c>d</c> <c>=</c> <c>dict(</c>)  
<c>years</c> <c>=</c> []  

(<c>get</c> <c>2</c> <c>column</c> <c>list</c> <c>of</c> <c>years</c> <c>and</c> <c>values</c>)

<c>for</c> <c>line</c> <c>in</c> <c>list</c>:    
    <c>year</c> <c>=</c> <c>line</c>[<c>0</c>]   
    <c>value</c> <c>=</c> <c>line</c>[<c>1</c>]  

<c>for</c> <c>line</c> <c>in</c> <c>list</c>:  
    <c>if</c> <c>year</c> <c>in</c> <c>d</c><c>.</c><c>keys(</c>):  
        <c>d</c>[<c>value</c>]<c>.</c><c>append(</c><c>value</c>)  
    <c>else</c>:  
        <c>d</c>[<c>value</c>] <c>=</c> <c>value</c>  
        <c>d</c>[<c>year</c>] <c>=</c> <c>year</c>  
</code>
"
3207219|"<t>How</t> <t>do</t> <t>I</t> <t>list</t> <t>all</t> <t>files</t> <t>of</t> <t>a</t> <t>directory</t>?"|"<t>How</t> <t>can</t> <t>I</t> <t>list</t> <t>all</t> <t>files</t> <t>of</t> <t>a</t> <t>directory</t> <t>in</t> <t>Python</t> <t>and</t> <t>add</t> <t>them</t> <t>to</t> <t>a</t> <t>list</t>?
"
3249524|"<t>Print</t> <t>in</t> <t>one</t> <t>line</t> <t>dynamically</t>"|"<t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>make</t> <t>several</t> <t>statements</t> <t>that</t> <t>give</t> <t>standard</t> <t>output</t> <t>without</t> <t>seeing</t> <t>newlines</t> <t>in</t> <t>between</t> <t>statements</t>.

<t>Specifically</t>, <t>suppose</t> <t>I</t> <t>have</t>:

<code><c>for</c> <c>item</c> <c>in</c> <c>range(</c><c>1</c>,<c>100</c>):
    <c>print</c> <c>item</c>
</code>

<t>The</t> <t>result</t> <t>is</t>:

<code><c>1</c>
<c>2</c>
<c>3</c>
<c>4</c>
<c>.</c>
<c>.</c>
<c>.</c>
</code>

<t>How</t> <t>get</t> <t>this</t> <t>to</t> <t>instead</t> <t>look</t> <t>like</t>:

<code><c>1</c> <c>2</c> <c>3</c> <c>4</c> <c>5</c> ...
</code>

<t>Even</t> <t>better</t>, <t>is</t> <t>it</t> <t>possible</t> <t>to</t> <t>print</t> <t>the</t> <t>single</t> <t>number</t> <t>over</t> <t>the</t> <t>last</t> <t>number</t>, <t>so</t> <t>only</t> <t>one</t> <t>number</t> <t>is</t> <t>on</t> <t>the</t> <t>screen</t> <t>at</t> <t>a</t> <t>time</t>?
"
3263672|"<t>Python</t> <t>-</t> <t>The</t> <t>difference</t> <t>between</t> <t>sys.stdout.write</t> <t>and</t> <t>print</t>"|"<t>Are</t> <t>there</t> <t>situations</t> <t>in</t> <t>which</t> <code><c>sys</c><c>.</c><c>stdout</c><c>.</c><c>write(</c>)</code> <t>is</t> <t>preferable</t> <t>to</t> <code><c>print</c></code>? 

(<t>Examples</t>: <t>better</t> <t>performance;</t> <t>code</t> <t>that</t> <t>makes</t> <t>more</t> <t>sense</t>)
"
3277503|"<t>How</t> <t>do</t> <t>I</t> <t>read</t> <t>a</t> <t>file</t> <t>line-by-line</t> <t>into</t> <t>a</t> <t>list</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>read</t> <t>every</t> <t>line</t> <t>of</t> <t>a</t> <t>file</t> <t>in</t> <t>Python</t> <t>and</t> <t>store</t> <t>each</t> <t>line</t> <t>as</t> <t>an</t> <t>element</t> <t>in</t> <t>a</t> <t>list</t>? 

<t>I</t> <t>want</t> <t>to</t> <t>read</t> <t>the</t> <t>file</t> <t>line</t> <t>by</t> <t>line</t> <t>and</t> <t>append</t> <t>each</t> <t>line</t> <t>to</t> <t>the</t> <t>end</t> <t>of</t> <t>the</t> <t>list</t>.
"
3294889|"<t>Iterating</t> <t>over</t> <t>dictionaries</t> <t>using</t> '<t>for</t>' <t>loops</t>"|"<t>I</t> <t>am</t> <t>a</t> <t>bit</t> <t>puzzled</t> <t>by</t> <t>the</t> <t>following</t> <t>code</t>:

<code><c>d</c> <c>=</c> {'<c>x</c>': <c>1</c>, '<c>y</c>': <c>2</c>, '<c>z</c>': <c>3</c>} 
<c>for</c> <c>key</c> <c>in</c> <c>d</c>:
    <c>print</c> <c>key</c>, '<c>corresponds</c> <c>to</c>', <c>d</c>[<c>key</c>]
</code>

<t>What</t> <t>I</t> <t>don't</t> <t>understand</t> <t>is</t> <t>the</t> <code><c>key</c></code> <t>portion</t>. <t>How</t> <t>does</t> <t>Python</t> <t>recognize</t> <t>that</t> <t>it</t> <t>needs</t> <t>only</t> <t>to</t> <t>read</t> <t>the</t> <t>key</t> <t>from</t> <t>the</t> <t>dictionary</t>? <t>Is</t> <code><c>key</c></code> <t>a</t> <t>special</t> <t>word</t> <t>in</t> <t>Python</t>? <t>Or</t> <t>is</t> <t>it</t> <t>simply</t> <t>a</t> <t>variable</t>?
"
3345202|"<t>Getting</t> <t>user</t> <t>input</t>"|"<t>I</t> <t>am</t> <t>running</t> <t>this</t>:

<code><c>import</c> <c>csv</c>
<c>import</c> <c>sys</c>
<c>reader</c> <c>=</c> <c>csv</c><c>.</c><c>reader(</c><c>open(</c><c>sys</c><c>.</c><c>argv</c>[<c>0</c>], ""<c>rb</c>""))
<c>for</c> <c>row</c> <c>in</c> <c>reader</c>:
    <c>print</c> <c>row</c>
</code>

<t>And</t> <t>I</t> <t>get</t> <t>this</t> <t>in</t> <t>response</t>:

<code>['<c>import</c> <c>csv</c>']
['<c>import</c> <c>sys</c>']
['<c>reader</c> <c>=</c> <c>csv</c><c>.</c><c>reader(</c><c>open(</c><c>sys</c><c>.</c><c>argv</c>[<c>0</c>]', ' ""<c>rb</c>""))']
['<c>for</c> <c>row</c> <c>in</c> <c>reader</c>:']
['    <c>print</c> <c>row</c>']
<c>&gt;&gt;&gt;</c> 
</code>

<t>For</t> <t>the</t> <code><c>sys</c><c>.</c><c>argv</c>[<c>0</c>]</code> <t>I</t> <t>would</t> <t>like</t> <t>it</t> <t>to</t> <t>prompt</t> <t>me</t> <t>to</t> <t>enter</t> <t>a</t> <t>filename</t>.

<t>How</t> <t>do</t> <t>I</t> <t>get</t> <t>it</t> <t>to</t> <t>prompt</t> <t>me</t> <t>to</t> <t>enter</t> <t>a</t> <t>filename</t>?
"
3387655|"<t>Safest</t> <t>way</t> <t>to</t> <t>convert</t> <t>float</t> <t>to</t> <t>integer</t> <t>in</t> <t>python</t>?"|"<t>Python's</t> <t>math</t> <t>module</t> <t>contain</t> <t>handy</t> <t>functions</t> <t>like</t> <code><c>floor</c></code> <t>&amp;</t> <code><c>ceil</c></code>. <t>These</t> <t>functions</t> <t>take</t> <t>a</t> <t>floating</t> <t>point</t> <t>number</t> <t>and</t> <t>return</t> <t>the</t> <t>nearest</t> <t>integer</t> <t>below</t> <t>or</t> <t>above</t> <t>it</t>. <t>However</t> <t>these</t> <t>functions</t> <t>return</t> <t>the</t> <t>answer</t> <t>as</t> <t>a</t> <t>floating</t> <t>point</t> <t>number</t>. <t>For</t> <t>example</t>:

<code><c>import</c> <c>math</c>
<c>f</c><c>=</c><c>math</c><c>.</c><c>floor(</c><c>2.3</c>)
</code>

<t>Now</t> <code><c>f</c></code> <t>returns</t>:

<code><c>2.0</c>
</code>

<t>What</t> <t>is</t> <t>the</t> <t>safest</t> <t>way</t> <t>to</t> <t>get</t> <t>an</t> <t>integer</t> <t>out</t> <t>of</t> <t>this</t> <t>float</t>, <t>without</t> <t>running</t> <t>the</t> <t>risk</t> <t>of</t> <t>rounding</t> <t>errors</t> (<t>for</t> <t>example</t> <t>if</t> <t>the</t> <t>float</t> <t>is</t> <t>the</t> <t>equivalent</t> <t>of</t> <t>1.99999</t>) <t>or</t> <t>perhaps</t> <t>I</t> <t>should</t> <t>use</t> <t>another</t> <t>function</t> <t>altogether</t>?
"
3394835|"<t>*args</t> <t>and</t> <t>**kwargs</t>?"|"<t>So</t> <t>I</t> <t>have</t> <t>difficulty</t> <t>with</t> <t>the</t> <t>concept</t> <t>of</t> <t>*args</t> <t>and</t> <t>**kwargs</t>.

<t>So</t> <t>far</t> <t>I</t> <t>have</t> <t>learned</t> <t>that</t>:


<code><c>*</c><c>args</c></code> = list <t>of</t> <t>arguments</t> <t>-as</t> <t>positional</t> <t>arguments</t>
<code><c>**</c><c>kwargs</c></code> = dictionary <t>-</t> <t>whose</t> <t>keys</t> <t>become</t> <t>separate</t> <t>keyword</t> <t>arguments</t> <t>and</t> <t>the</t> <t>values</t> <t>become</t> <t>values</t> <t>of</t> <t>these</t> <t>arguments</t>.


??

<t>To</t> <t>be</t> <t>honest</t> <t>I</t> <t>don't</t> <t>understand</t> <t>and</t> <t>don't</t> <t>get</t> <t>for</t> <t>what</t> <t>programming</t> <t>task</t> <t>this</t> <t>would</t> <t>helpful</t>. (<t>I</t> <t>am</t> <t>sure</t> <t>there</t> <t>is</t>, <t>but</t> <t>I</t> <t>can't</t> <t>get</t> <t>an</t> <t>understanding</t> <t>of</t> <t>it</t>.)

<t>Maybe</t>:

<t>I</t> <t>think</t> <t>to</t> <t>enter</t> <t>lists</t> <t>and</t> <t>dictionaries</t> <t>as</t> <t>arguments</t> <t>of</t> <t>a</t> <t>function</t> <t>AND</t> <t>at</t> <t>the</t> <t>same</t> <t>time</t> <t>as</t> <t>a</t> <t>wildcard</t>, <t>so</t> <t>I</t> <t>can</t> <t>pass</t> <t>ANY</t> <t>argument</t>?

<t>Is</t> <t>there</t> <t>a</t> <t>simple</t> <t>example</t> <t>on</t> <t>which</t> <t>to</t> <t>explain</t> <t>how</t> <code><c>*</c><c>args</c></code> <t>and</t> <code><c>**</c><c>kwargs</c></code> <t>are</t> <t>used</t>?

<t>Also</t> <t>the</t> <t>tutorial</t> <t>I</t> <t>run</t> <t>through</t> <t>used</t> <t>just</t> <t>the</t> ""<t>*</t>"" <t>and</t> <t>a</t> <t>variable</t> <t>name</t>. 

<t>Is</t> <code><c>*</c><c>args</c></code> <t>and</t> <code><c>**</c><c>kwargs</c></code> <t>just</t> <t>a</t> <t>placeholder</t> <t>or</t> <t>do</t> <t>you</t> <t>use</t> <t>exactly</t> <code><c>*</c><c>args</c></code> <t>and</t> <code><c>**</c><c>kwargs</c></code> <t>in</t> <t>the</t> <t>code</t>?
"
3402168|"<t>Permanently</t> <t>add</t> <t>a</t> <t>directory</t> <t>to</t> <t>PYTHONPATH</t>"|"<t>Whenever</t> <t>I</t> <t>use</t> <code><c>sys</c><c>.</c><c>path</c><c>.</c><c>append</c></code>, <t>the</t> <t>new</t> <t>directory</t> <t>will</t> <t>be</t> <t>added</t>. <t>However</t>, <t>once</t> <t>I</t> <t>close</t> <t>python</t>, <t>the</t> <t>list</t> <t>will</t> <t>revert</t> <t>to</t> <t>the</t> <t>previous</t> (<t>default</t>?) <t>values</t>. <t>How</t> <t>do</t> <t>I</t> <t>permanently</t> <t>add</t> <t>a</t> <t>directory</t> <t>to</t> <t>PYTHONPATH</t>?
"
3437059|"<t>Does Python</t> <t>have</t> <t>a</t> <t>string</t> '<t>contains</t>' <t>substring</t> <t>method</t>?"|"<t>I'm</t> <t>looking</t> <t>for</t> <t>a</t> <code><c>string</c><c>.</c><c>contains</c></code> <t>or</t> <code><c>string</c><c>.</c><c>indexof</c></code> <t>method</t> <t>in</t> <t>Python</t>.

<t>I</t> <t>want</t> <t>to</t> <t>do</t>:

<code><c>if</c> <c>not</c> <c>somestring</c><c>.</c><c>contains(</c>""<c>blah</c>""):
   <c>continue</c>
</code>
"
3459098|"<t>Create List</t> of <t>Single Item Repeated</t> <t>n</t> <t>Times</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>know</t> <t>a</t> <t>list</t> <t>comprehension</t> <t>will</t> <t>do</t> <t>this</t>, <t>but</t> <t>I</t> <t>was</t> <t>wondering</t> <t>if</t> <t>there</t> <t>is</t> <t>an</t> <t>even</t> <t>shorter</t> (<t>and</t> <t>more</t> <t>Pythonic</t>?) <t>approach</t>.

<t>I</t> <t>want</t> <t>to</t> <t>create</t> <t>a</t> <t>series</t> <t>of</t> <t>lists</t>, <t>all</t> <t>of</t> <t>varying</t> <t>length</t>. <t>Each</t> <t>list</t> <t>will</t> <t>contain</t> <t>the</t> <t>same</t> <t>element</t> <t>e</t>, <t>repeated</t> <t>n</t> <t>times</t> (<t>where</t> <t>n = length</t> <t>of</t> <t>the</t> <t>list</t>). <t>How</t> <t>do</t> <t>I</t> <t>create</t> <t>the</t> <t>lists</t>, <t>without</t> <t>doing</t>

<code>[<c>e</c> <c>for</c> <c>number</c> <c>in</c> <c>xrange(</c><c>n</c>)]
</code>

<t>for</t> <t>each</t> <t>list</t>?
"
3462143|"<t>Get</t> <t>difference</t> <t>between</t> <t>two</t> <t>lists</t>"|"<t>I</t> <t>have</t> <t>two</t> <t>lists</t> <t>in</t> <t>Python</t>, <t>like</t> <t>these</t>:

<code><c>temp1</c> <c>=</c> ['<c>One</c>', '<c>Two</c>', '<c>Three</c>', '<c>Four</c>']
<c>temp2</c> <c>=</c> ['<c>One</c>', '<c>Two</c>']
</code>

<t>I</t> <t>need</t> <t>to</t> <t>create</t> <t>a</t> <t>third</t> <t>list</t> <t>with</t> <t>items</t> <t>from</t> <t>the</t> <t>first</t> <t>list</t> <t>which</t> <t>aren't</t> <t>present</t> <t>in</t> <t>the</t> <t>second</t> <t>one</t>. <t>From</t> <t>the</t> <t>example</t> <t>I</t> <t>have</t> <t>to</t> <t>get</t>:

<code><c>temp3</c> <c>=</c> ['<c>Three</c>', '<c>Four</c>']
</code>

<t>Are</t> <t>there</t> <t>any</t> <t>fast</t> <t>ways</t> <t>without</t> <t>cycles</t> <t>and</t> <t>checking</t>?
"
3501382|"<t>Checking</t> <t>whether</t> <t>a</t> <t>variable</t> <t>is</t> <t>an</t> <t>integer</t> <t>or</t> <t>not</t>"|"<t>How</t> <t>do</t> <t>I</t> <t>check</t> <t>whether</t> <t>a</t> <t>variable</t> <t>is</t> <t>an</t> <t>integer</t>?
"
3503879|"<t>Assign</t> <t>output</t> <t>of</t> <t>os</t>.<t>system</t> <t>to</t> <t>a</t> <t>variable</t> <t>and</t> <t>prevent</t> <t>it</t> <t>from</t> <t>being</t> <t>displayed</t> <t>on</t> <t>the</t> <t>screen</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>assign</t> <t>the</t> <t>output</t> <t>of</t> <t>a</t> <t>command</t> <t>I</t> <t>run</t> <t>using</t> <code><c>os</c><c>.</c><c>system</c></code> <t>to</t> <t>a</t> <t>variable</t> <t>and</t> <t>prevent</t> <t>it</t> <t>from</t> <t>being</t> <t>output</t> <t>to</t> <t>the</t> <t>screen</t>. <t>But</t>, <t>in</t> <t>the</t> <t>below</t> <t>code</t> ,<t>the</t> <t>output</t> <t>is</t> <t>sent</t> <t>to</t> <t>the</t> <t>screen</t> <t>and</t> <t>the</t> <t>value</t> <t>printed</t> <t>for</t> <code><c>var</c></code> <t>is</t> <t>0</t>, <t>which</t> <t>I</t> <t>guess</t> <t>signifies</t> <t>whether</t> <t>the</t> <t>command</t> <t>ran</t> <t>successfully</t> <t>or</t> <t>not</t>. <t>Is</t> <t>there</t> <t>any</t> <t>way</t> <t>to</t> <t>assign</t> <t>the</t> <t>command</t> <t>output</t> <t>to</t> <t>the</t> <t>variable</t> <t>and</t> <t>also</t> <t>stop</t> <t>it</t> <t>from</t> <t>being</t> <t>displayed</t> <t>on</t> <t>the</t> <t>screen</t>?

<code><c>var</c> <c>=</c> <c>os</c><c>.</c><c>system(</c>""<c>cat</c> <c>/etc/services</c>"")
<c>print</c> <c>var</c> #<c>Prints</c> <c>0</c>
</code>
"
3518778|"<t>How</t> <t>to</t> <t>read</t> <t>csv</t> <t>into</t> <t>record</t> <t>array</t> <t>in</t> <t>numpy</t>?"|"<t>I</t> <t>wonder</t> <t>if</t> <t>there</t> <t>is</t> <t>a</t> <t>direct</t> <t>way</t> <t>to</t> <t>import</t> <t>the</t> <t>contents</t> <t>of</t> <t>a</t> <t>csv</t> <t>file</t> <t>into</t> <t>a</t> <t>record</t> <t>array</t>, <t>much</t> <t>in</t> <t>the</t> <t>way</t> <t>that</t> <t>R's</t> <code><c>read</c><c>.</c><c>table(</c>)</code>, <code><c>read</c><c>.</c><c>delim(</c>)</code>, <t>and</t> <code><c>read</c><c>.</c><c>csv(</c>)</code> <t>family</t> <t>imports</t> <t>data</t> <t>to</t> <t>R's</t> <t>data</t> <t>frame</t>? 

<t>Or</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>use</t> <t>csv</t>.<t>reader</t>() <t>and</t> <t>then</t> <t>apply</t> <t>something</t> <t>like</t> <code><c>numpy</c><c>.</c><c>core</c><c>.</c><c>records</c><c>.</c><c>fromrecords(</c>)</code>?
"
3528146|"<t>Convert</t> <t>decimal</t> <t>to</t> <t>binary</t> <t>in</t> <t>python</t>"|"<t>Is</t> <t>there</t> <t>any</t> <t>module</t> <t>or</t> <t>function</t> <t>in</t> <t>python</t> <t>i</t> <t>can</t> <t>use</t> <t>to</t> <t>convert</t> <t>a</t> <t>decimal</t> <t>number</t> <t>to</t> <t>its</t> <t>binary</t> <t>equivalent</t> ?
<t>I</t> <t>am</t> <t>able</t> <t>to</t> <t>convert</t> <t>binary</t> <t>to</t> <t>decimal</t> <t>using</t> <t>int('[binary_value]</t>',<t>2</t>),<t>so</t> <t>any</t> <t>way</t> <t>to</t> <t>do</t> <t>the</t> <t>reverse</t> <t>without</t> <t>writing</t> <t>the</t> <t>code</t> <t>to</t> <t>do</t> <t>it</t> <t>myself</t> ?

<t>Thank You</t>
"
3545331|"<t>How</t> <t>can</t> <t>I</t> <t>get</t> <t>dictionary</t> <t>key</t> <t>as</t> <t>variable</t> <t>directly</t> <t>in</t> <t>Python</t> (<t>not</t> <t>by</t> <t>searching</t> <t>from</t> <t>value</t>)?"|"<t>Sorry</t> <t>for</t> <t>this</t> <t>basic</t> <t>question</t> <t>but</t> <t>my</t> <t>searches</t> <t>on</t> <t>this</t> <t>are</t> <t>not</t> <t>turning</t> <t>up</t> <t>anything</t> <t>other</t> <t>than</t> <t>how</t> <t>to</t> <t>get</t> <t>a</t> <t>dictionary's</t> <t>key</t> <t>based</t> <t>on</t> <t>its</t> <t>value</t> <t>which</t> <t>I</t> <t>would</t> <t>prefer</t> <t>not</t> <t>to</t> <t>use</t> <t>as</t> <t>I</t> <t>simply</t> <t>want</t> <t>the</t> <t>text/name</t> <t>of</t> <t>the</t> <t>key</t> <t>and</t> <t>am</t> <t>worried</t> <t>that</t> <t>searching</t> <t>by</t> <t>value</t> <t>may</t> <t>end</t> <t>up</t> <t>returning</t> <t>2</t> <t>or</t> <t>more</t> <t>keys</t> <t>if</t> <t>the</t> <t>dictionary</t> <t>has</t> <t>a</t> <t>lot</t> <t>of</t> <t>entries...</t> <t>what</t> <t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>do</t> <t>is</t> <t>this</t>:

<code><c>mydictionary</c><c>=</c>{'<c>keyname</c>':'<c>somevalue</c>'}
<c>for</c> <c>current</c> <c>in</c> <c>mydictionary</c>:

   <c>result</c> <c>=</c> <c>mydictionary</c><c>.</c>(<c>some_function_to_get_key_name</c>)[<c>current</c>]
   <c>print</c> <c>result</c>
   ""<c>keyname</c>""
</code>

<t>The</t> <t>reason</t> <t>for</t> <t>this</t> <t>is</t> <t>that</t> <t>I</t> <t>am</t> <t>printing</t> <t>these</t> <t>out</t> <t>to</t> <t>a</t> <t>document</t> <t>and</t> <t>I</t> <t>want</t> <t>to</t> <t>use</t> <t>the</t> <t>key</t> <t>name</t> <t>and</t> <t>the</t> <t>value</t> <t>in</t> <t>doing</t> <t>this</t>

<t>I</t> <t>have</t> <t>seen</t> <t>the</t> <t>method</t> <t>below</t> <t>but</t> <t>this</t> <t>seems</t> <t>to</t> <t>just</t> <t>return</t> <t>the</t> <t>key's</t> <t>value</t>

<code><c>get(</c><c>key</c>[, <c>default</c>])
</code>
"
3559559|"<t>How</t> <t>to</t> <t>delete</t> <t>a</t> <t>character</t> <t>from</t> <t>a</t> <t>string</t> <t>using</t> <t>python</t>?"|"<t>There</t> <t>is</t> <t>a</t> <t>string</t>, <t>for</t> <t>example</t> <code><c>EXAMPLE</c></code>

<t>How</t> <t>can</t> <t>I</t> <t>remove</t> <t>the</t> <t>middle</t> <t>character</t> <t>i.e.</t> <code><c>M</c></code> <t>from</t> <t>it</t>. <t>I</t> <t>don't</t> <t>need</t> <t>the</t> <t>code</t>, <t>what</t> <t>I</t> <t>want</t> <t>to</t> <t>know</t> <t>is</t>


<t>Do</t> <t>strings</t> <t>in</t> <t>python</t> <t>end</t> <t>in</t> <t>any</t> <t>special</t> <t>character</t>?
<t>Which</t> <t>is</t> <t>a</t> <t>better</t> <t>way</t> <t>-</t> <t>shifting</t> <t>everything</t> <t>right</t> <t>to</t> <t>left</t> <t>starting</t> <t>from</t> <t>the</t> <t>middle</t> <t>character</t> <t>OR</t> <t>creation</t> <t>of</t> <t>a</t> <t>new</t> <t>string</t> <t>and</t> <t>not</t> <t>copying</t> <t>the</t> <t>middle</t> <t>character</t>?

"
3561691|"<t>python</t>: <t>SyntaxError</t>: <t>EOL</t> <t>while</t> <t>scanning</t> <t>string</t> <t>literal</t>"|"<t>I</t> <t>have</t> <t>the</t> <t>above</t> <t>mentioned</t> <t>error</t> <t>in</t> <code><c>s1</c><c>=</c>""<c>some</c> <c>very</c> <c>long</c> <c>string</c>............""</code> 

<t>Anyone</t> <t>know</t> <t>what</t> <t>i</t> <t>am</t> <t>doing</t> <t>wrong</t>?
"
3682748|"<t>Converting</t> <t>unix</t> <t>timestamp</t> <t>string</t> <t>to</t> <t>readable</t> <t>date</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>string</t> <t>representing</t> <t>a</t> <t>unix</t> <t>timestamp</t> (<t>i.e.</t> ""<t>1284101485</t>"") <t>in</t> <t>Python</t>, <t>and</t> <t>I'd</t> <t>like</t> <t>to</t> <t>convert</t> <t>it</t> <t>to</t> <t>a</t> <t>readable</t> <t>date</t>. <t>When</t> <t>I</t> <t>use</t> <code><c>time</c><c>.</c><c>strftime</c></code>, <t>I</t> <t>get</t> <t>a</t> <code><c>TypeError</c></code>:

<code><c>&gt;&gt;&gt;</c><c>import</c> <c>time</c>
<c>&gt;&gt;&gt;</c><c>print</c> <c>time</c><c>.</c><c>strftime(</c>""<c>%</c><c>B</c> <c>%</c><c>d</c> <c>%</c><c>Y</c>"", ""<c>1284101485</c>"")

<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>&lt;</c><c>stdin</c><c>&gt;</c>"", <c>line</c> <c>1</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
<c>TypeError</c>: <c>argument</c> <c>must</c> <c>be</c> <c>9-item</c> <c>sequence</c>, <c>not</c> <c>str</c>
</code>
"
3701646|"<t>How</t> <t>to</t> <t>add</t> <t>to</t> <t>the</t> <t>pythonpath</t> <t>in</t> <t>windows</t> <t>7</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>directory</t> <t>which</t> <t>hosts</t> <t>all</t> <t>of</t> <t>my</t> <t>Django</t> <t>apps</t> (<code><c>C:\My_Projects</c></code>). <t>I</t> <t>want</t> <t>to</t> <t>add</t> <t>this</t> <t>directory</t> <t>to</t> <t>my</t> <code><c>pythonpath</c></code> <t>so</t> <t>I</t> <t>can</t> <t>call</t> <t>the</t> <t>apps</t> <t>directly</t>.

<t>I</t> <t>have</t> <t>tried</t> <t>adding</t> <code><c>C:\My_Projects\</c>;</code> <t>to</t> <t>my</t> <code><c>Path</c></code> <t>variable</t> <t>from</t> <t>the</t> <t>Windows GUI</t> (<code><c>My</c> <c>Computer</c> <c>&gt;</c> <c>Properties</c> <c>&gt;</c> <c>Advanced</c> <c>System</c> <c>Settings</c> <c>&gt;</c> <c>Environment</c> <c>Variables</c></code>). <t>But</t> <t>it</t> <t>still</t> <t>doesn't</t> <t>read</t> <t>the</t> <t>coltrane</t> <t>module</t> <t>and</t> <t>generates</t> <t>this</t> <t>error</t>:


  <t>Error</t>: <t>No</t> <t>module</t> <t>named</t> <t>coltrane</t>

"
3702675|"<t>How</t> <t>to</t> <t>print</t> <t>the</t> <t>full</t> <t>traceback</t> <t>without</t> <t>halting</t> <t>the</t> <t>program</t>?"|"<t>I'm</t> <t>writing</t> <t>a</t> <t>program</t> <t>that</t> <t>parses</t> <t>10</t> <t>websites</t>, <t>locates</t> <t>data</t> <t>files</t>, <t>saves</t> <t>the</t> <t>files</t>, <t>and</t> <t>then</t> <t>parses</t> <t>them</t> <t>to</t> <t>make</t> <t>data</t> <t>that</t> <t>can</t> <t>be</t> <t>readily</t> <t>used</t> <t>in</t> <t>the</t> <t>NumPy</t> <t>library</t>. <t>There</t> <t>are</t> <t>tons</t> <t>of</t> <t>errors</t> <t>this</t> <t>file</t> <t>encounters</t> <t>through</t> <t>bad</t> <t>links</t>, <t>poorly</t> <t>formed</t> <t>XML</t>, <t>missing</t> <t>entries</t>, <t>and</t> <t>other</t> <t>things</t> <t>I've</t> <t>yet</t> <t>to</t> <t>categorize</t>. <t>I</t> <t>initially</t> <t>made</t> <t>this</t> <t>program</t> <t>to</t> <t>handle</t> <t>errors</t> <t>like</t> <t>this</t>:

<code><c>try</c>:
    <c>do_stuff(</c>)
<c>except</c>:
    <c>pass</c>
</code>

<t>But</t> <t>now</t> <t>I</t> <t>want</t> <t>to</t> <t>log</t> <t>errors</t>:

<code><c>try</c>:
    <c>do_stuff(</c>)
<c>except</c> <c>Exception</c>, <c>err</c>:
    <c>print</c> <c>Exception</c>, <c>err</c>
</code>

<t>Note</t> <t>this</t> <t>is</t> <t>printing</t> <t>to</t> <t>a</t> <t>log</t> <t>file</t> <t>for</t> <t>later</t> <t>review</t>. <t>This</t> <t>usually</t> <t>prints</t> <t>very</t> <t>useless</t> <t>data</t>. <t>What</t> <t>I</t> <t>want</t> <t>is</t> <t>to</t> <t>print</t> <t>the</t> <t>exact</t> <t>same</t> <t>lines</t> <t>printed</t> <t>when</t> <t>the</t> <t>error</t> <t>triggers</t> <t>without</t> <t>the</t> <t>try-except</t> <t>intercepting</t> <t>the</t> <t>exception</t>, <t>but</t> <t>I</t> <t>don't</t> <t>want</t> <t>it</t> <t>to</t> <t>halt</t> <t>my</t> <t>program</t> <t>since</t> <t>it</t> <t>is</t> <t>nested</t> <t>in</t> <t>a</t> <t>series</t> <t>of</t> <t>for</t> <t>loops</t> <t>that</t> <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>see</t> <t>to</t> <t>completion</t>.
"
3768895|"<t>How</t> <t>to</t> <t>make</t> <t>a</t> <t>class</t> <t>JSON</t> <t>serializable</t>"|"<t>How</t> <t>to</t> <t>make</t> <t>a</t> <t>Python</t> <t>class</t> <t>serializable</t>?  

<t>A</t> <t>simple</t> <t>class</t>:

<code><c>class</c> <c>FileItem</c>:
    <c>def</c> <c>__init__(</c><c>self</c>, <c>fname</c>):
        <c>self</c><c>.</c><c>fname</c> <c>=</c> <c>fname</c>
</code>

<t>What</t> <t>should</t> <t>I</t> <t>do</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>get</t> <t>output</t> <t>of</t>:

<code><c>json</c><c>.</c><c>dumps(</c>)
</code>

<t>Without</t> <t>an</t> <t>error</t> (<code><c>FileItem</c> <c>instance</c> <c>at</c> ... <c>is</c> <c>not</c> <c>JSON</c> <c>serializable</c></code>)
"
3777861|"<t>setting</t> <t>y-axis</t> <t>limit</t> <t>in</t> <t>matplotlib</t>"|"<t>I</t> <t>need</t> <t>help</t> <t>with</t> <t>setting</t> <t>the</t> <t>limits</t> <t>of</t> <t>y-axis</t> <t>on</t> <t>matplotlib</t>. <t>Here</t> <t>is</t> <t>the</t> <t>code</t> <t>that</t> <t>I</t> <t>tried</t>, <t>unsuccessfully</t>.

<code><c>import</c> <c>matplotlib</c><c>.</c><c>pyplot</c> <c>as</c> <c>plt</c>

<c>plt</c><c>.</c><c>figure(</c><c>1</c>, <c>figsize</c> <c>=</c> (<c>8.5</c>,<c>11</c>))
<c>plt</c><c>.</c><c>suptitle(</c>'<c>plot</c> <c>title</c>')
<c>ax</c> <c>=</c> []
<c>aPlot</c> <c>=</c> <c>plt</c><c>.</c><c>subplot(</c><c>321</c>, <c>axisbg</c> <c>=</c> '<c>w</c>', <c>title</c> <c>=</c> ""<c>Year</c> <c>1</c>"")
<c>ax</c><c>.</c><c>append(</c><c>aPlot</c>)
<c>plt</c><c>.</c><c>plot(</c><c>paramValues</c>,<c>plotDataPrice</c>[<c>0</c>], <c>color</c> <c>=</c> '#<c>340</c><c>B8C</c>', 
     <c>marker</c> <c>=</c> '<c>o</c>', <c>ms</c> <c>=</c> <c>5</c>, <c>mfc</c> <c>=</c> '#<c>EB1717</c>')
<c>plt</c><c>.</c><c>xticks(</c><c>paramValues</c>)
<c>plt</c><c>.</c><c>ylabel(</c>'<c>Average</c> <c>Price</c>')
<c>plt</c><c>.</c><c>xlabel(</c>'<c>Mark-up</c>')
<c>plt</c><c>.</c><c>grid(</c><c>True</c>)
<c>plt</c><c>.</c><c>ylim(</c>(<c>25</c>,<c>250</c>))
</code>

<t>With</t> <t>the</t> <t>data</t> <t>I</t> <t>have</t> <t>for</t> <t>this</t> <t>plot</t>, <t>I</t> <t>get</t> <t>y-axis</t> <t>limits</t> <t>of</t> <t>20</t> <t>and</t> <t>200</t>. <t>However</t>, <t>I</t> <t>want</t> <t>the</t> <t>limits</t> <t>20</t> <t>and</t> <t>250</t>.
"
3781851|"<t>Run</t> <t>a</t> <t>python</t> <t>script</t> <t>from</t> <t>another</t> <t>python</t> <t>script</t>, <t>passing</t> <t>in</t> <t>args</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>run</t> <t>a</t> <t>Python</t> <t>script</t> <t>from</t> <t>another</t> <t>Python</t> <t>script</t>. <t>I</t> <t>want</t> <t>to</t> <t>pass</t> <t>variables</t> <t>like</t> <t>I</t> <t>would</t> <t>using</t> <t>the</t> <t>command</t> <t>line</t>.

<t>For</t> <t>example</t>, <t>I</t> <t>would</t> <t>run</t> <t>my</t> <t>first</t> <t>script</t> <t>that</t> <t>would</t> <t>iterate</t> <t>through</t> <t>a</t> <t>list</t> <t>of</t> <t>values</t> (<t>0</t>,<t>1</t>,<t>2</t>,<t>3</t>) <t>and</t> <t>pass</t> <t>those</t> <t>to</t> <t>the</t> <t>2nd</t> <t>script</t> <code><c>script2</c><c>.</c><c>py</c> <c>0</c></code> <t>then</t>  <code><c>script2</c><c>.</c><c>py</c> <c>1</c></code>, <t>etc</t>.

<t>I</t> <t>found</t> <t>SO</t> <t>1186789</t> <t>which</t> <t>is</t> <t>a</t> <t>similar</t> <t>question</t> <t>but</t> <t>ars's</t> <t>answer</t> <t>calls</t> <t>a</t> <t>function</t>, <t>where</t> <t>as</t> <t>I</t> <t>want</t> <t>to</t> <t>run</t> <t>the</t> <t>whole</t> <t>script</t> <t>not</t> <t>just</t> <t>a</t> <t>function</t>, <t>and</t> <t>balpha's</t> <t>answer</t> <t>calls</t> <t>the</t> <t>script</t> <t>but</t> <t>with</t> <t>no</t> <t>args</t>. <t>I</t> <t>altered</t> <t>this</t> <t>to</t> <t>something</t> <t>like</t> <t>the</t> <t>below</t> <t>as</t> <t>a</t> <t>test</t>: 

<code><c>execfile(</c>""<c>script2</c><c>.</c><c>py</c> <c>1</c>"")
</code>

<t>But</t> <t>it</t> <t>is</t> <t>not</t> <t>accepting</t> <t>variables</t> <t>properly</t>.  <t>When</t> <t>I</t> <t>print</t> <t>out</t> <t>the</t> <code><c>sys</c><c>.</c><c>argv</c></code> <t>in</t> <t>script2</t>.<t>py</t> <t>it</t> <t>is</t> <t>the</t> <t>original</t> <t>command</t> <t>call</t> <t>to</t> <t>first</t> <t>script</t> ""<t>['C:\script1.py'].</t>

<t>I</t> <t>don't</t> <t>really</t> <t>want</t> <t>to</t> <t>change</t> <t>the</t> <t>original</t> <t>script</t> (<t>i.e.</t> <t>script2</t>.<t>py</t> <t>in</t> <t>my</t> <t>example</t>) <t>since</t> <t>I</t> <t>don't</t> <t>own</t> <t>it</t>.

<t>I</t> <t>figure</t> <t>there</t> <t>must</t> <t>be</t> <t>a</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>, <t>I</t> <t>am</t> <t>just</t> <t>confused</t> <t>how</t> <t>you</t> <t>do</t> <t>it</t>.  
"
3791465|"<t>Python</t>, <t>os</t>.<t>system</t> <t>for</t> <t>command-line</t> <t>call</t> (<t>linux</t>) <t>not</t> <t>returning</t> <t>what</t> <t>it</t> <t>should</t>?"|"<t>I</t> <t>need</t> <t>to</t> <t>make</t> <t>some</t> <t>command</t> <t>line</t> <t>calls</t> <t>to</t> <t>linux</t> <t>and</t> <t>get</t> <t>the</t> <t>return</t> <t>from</t> <t>this</t>, <t>however</t> <t>doing</t> <t>it</t> <t>as</t> <t>below</t> <t>is</t> <t>just</t> <t>returning</t> <code><c>0</c></code> <t>when</t> <t>it</t> <t>should</t> <t>return</t> <t>a</t> <t>time</t> <t>value</t>, <t>like</t> <code><c>00</c>:<c>0</c><c>8</c>:<c>19</c></code>, <t>I</t> <t>am</t> <t>testing</t> <t>the</t> <t>exact</t> <t>same</t> <t>call</t> <t>in</t> <t>regular</t> <t>command</t> <t>line</t> <t>and</t> <t>it</t> <t>returns</t> <t>the</t> <t>time</t> <t>value</t> <code><c>00</c>:<c>0</c><c>8</c>:<c>19</c></code> <t>so</t> <t>I</t> <t>am</t> <t>confused</t> <t>as</t> <t>to</t> <t>what</t> <t>I</t> <t>am</t> <t>doing</t> <t>wrong</t> <t>as</t> <t>I</t> <t>thought</t> <t>this</t> <t>was</t> <t>how</t> <t>to</t> <t>do</t> <t>it</t> <t>in</t> <t>python</t>. <t>Any</t> <t>advice</t> <t>is</t> <t>appreciated</t>.

<code><c>import</c> <c>os</c>
<c>retvalue</c> <c>=</c> <c>os</c><c>.</c><c>system(</c>""<c>ps</c> <c>-</c><c>p</c> <c>2993</c> <c>-</c><c>o</c> <c>time</c> <c>-</c><c>-</c><c>no-headers</c>"")
<c>print</c> <c>retvalue</c>
</code>
"
3819449|"<t>How</t> <t>to</t> <t>uninstall</t> <t>Python</t> <t>2.7</t> <t>on</t> a <t>Mac OS X</t> <t>10.6.4</t>?"|"<t>I</t> <t>want</t> <t>to</t> <t>completely</t> <t>remove</t> <t>Python</t> <t>2.7</t> <t>from</t> my <t>Mac OS X</t> <t>10.6.4.</t> <t>I</t> <t>managed</t> <t>to</t> <t>remove</t> <t>the</t> <t>entry</t> <t>from</t> <t>the</t> <t>PATH</t> <t>variable</t> <t>by</t> <t>reverting</t> <t>my</t> <t>.bash_profile.</t> <t>But</t> <t>I</t> <t>also</t> <t>want</t> <t>to</t> <t>remove</t> <t>all</t> <t>directories</t>, <t>files</t>, <t>symlinks</t>, <t>and</t> <t>entries</t> <t>that</t> <t>got</t> <t>installed</t> <t>by</t> <t>the</t> <t>Python</t> <t>2.7</t> <t>install</t> <t>package</t>. <t>I've</t> <t>got</t> <t>the</t> <t>install</t> <t>package</t> <t>from</t> <t>http://www.python.org/.</t> <t>What</t> <t>directories/files/configuration</t> <t>file</t> <t>entries</t> <t>do</t> <t>I</t> <t>need</t> <t>to</t> <t>remove</t>? <t>Is</t> <t>there</t> <t>a</t> <t>list</t> <t>somewhere</t>?
"
3845423|"<t>Remove</t> <t>empty</t> <t>strings</t> <t>from</t> <t>a</t> <t>list</t> <t>of</t> <t>strings</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>remove</t> <t>all</t> <t>empty</t> <t>strings</t> <t>from</t> <t>a</t> <t>list</t> <t>of</t> <t>strings</t> <t>in</t> <t>python</t>.

<t>My</t> <t>idea</t> <t>looks</t> <t>like</t> <t>this</t>:

<code><c>while</c> '' <c>in</c> <c>str_list</c>:
    <c>str_list</c><c>.</c><c>remove(</c>'')
</code>

<t>Is</t> <t>there</t> <t>any</t> <t>more</t> <t>pythonic</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>?
"
3887381|"<t>TypeError</t>: '<t>NoneType</t>' <t>object</t> <t>is</t> <t>not</t> <t>iterable</t> <t>in</t> <t>Python</t>"|"<t>What</t> <t>does</t> <t>error</t> <code><c>TypeError</c>: '<c>NoneType</c>' <c>object</c> <c>is</c> <c>not</c> <c>iterable</c></code> <t>mean</t>?

<t>I</t> <t>am</t> <t>getting</t> <t>it</t> <t>on</t> <t>this</t> <t>Python</t> <t>code</t>:

<code><c>def</c> <c>write_file(</c><c>data</c>,<c>filename</c>):   #<c>creates</c> <c>file</c> <c>and</c> <c>writes</c> <c>list</c> <c>to</c> <c>it</c>
  <c>with</c> <c>open(</c><c>filename</c>,'<c>wb</c>') <c>as</c> <c>outfile</c>:
    <c>writer</c><c>=</c><c>csv</c><c>.</c><c>writer(</c><c>outfile</c>)
    <c>for</c> <c>row</c> <c>in</c> <c>data</c>:             ##<c>ABOVE</c> <c>ERROR</c> <c>IS</c> <c>THROWN</c> <c>HERE</c>
      <c>writer</c><c>.</c><c>writerow(</c><c>row</c>)
</code>
"
3890621|"<t>how</t> <t>does</t> <t>multiplication</t> <t>differ</t> <t>for</t> <t>NumPy Matrix</t> <t>vs</t> <t>Array</t> <t>classes</t>?"|"<t>The</t> <t>numpy</t> <t>docs</t> <t>recommend</t> <t>using</t> <t>array</t> <t>instead</t> <t>of</t> <t>matrix</t> <t>for</t> <t>working</t> <t>with</t> <t>matrices</t>. <t>However</t>, <t>unlike</t> <t>octave</t> (<t>which</t> <t>I</t> <t>was</t> <t>using</t> <t>till</t> <t>recently</t>), <t>*</t> <t>doesn't</t> <t>perform</t> <t>matrix</t> <t>multiplication</t>, <t>you</t> <t>need</t> <t>to</t> <t>use</t> <t>the</t> <t>function</t> <t>matrixmultipy</t>(). <t>I</t> <t>feel</t> <t>this</t> <t>makes</t> <t>the</t> <t>code</t> <t>very</t> <t>unreadable</t>.

<t>Does</t> <t>anybody</t> <t>share</t> <t>my</t> <t>views</t>, <t>and</t> <t>has</t> <t>found</t> <t>a</t> <t>solution</t>?
"
3899980|"<t>How</t> <t>to</t> <t>change</t> <t>the</t> <t>font</t> <t>size</t> <t>on</t> <t>a</t> <t>matplotlib</t> <t>plot</t>"|"<t>How</t> <t>does</t> <t>one</t> <t>change</t> <t>the</t> <t>font</t> <t>size</t> <t>for</t> <t>all</t> <t>elements</t> (<t>ticks</t>, <t>labels</t>, <t>title</t>) <t>on</t> <t>a</t> <t>matplotlib</t> <t>plot</t>?

<t>I</t> <t>know</t> <t>how</t> <t>to</t> <t>change</t> <t>the</t> <t>tick</t> <t>label</t> <t>sizes</t>, <t>this</t> <t>is</t> <t>done</t> <t>with</t>:

<code><c>import</c> <c>matplotlib</c> 
<c>matplotlib</c><c>.</c><c>rc(</c>'<c>xtick</c>', <c>labelsize</c><c>=</c><c>20</c>) 
<c>matplotlib</c><c>.</c><c>rc(</c>'<c>ytick</c>', <c>labelsize</c><c>=</c><c>20</c>) 
</code>

<t>But</t> <t>how</t> <t>does</t> <t>one</t> <t>change</t> <t>the</t> <t>rest</t>?
"
3925614|"<t>How</t> <t>do</t> <t>you</t> <t>read</t> <t>a</t> <t>file</t> <t>into</t> <t>a</t> <t>list</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>want</t> <t>to</t> <t>prompt</t> <t>a</t> <t>user</t> <t>for</t> <t>a</t> <t>number</t> <t>of</t> <t>random</t> <t>numbers</t> <t>to</t> <t>be</t> <t>generated</t> <t>and</t> <t>saved</t> <t>to</t> <t>a</t> <t>file</t>.  <t>He</t> <t>gave</t> <t>us</t> <t>that</t> <t>part</t>.  <t>The</t> <t>part</t> <t>we</t> <t>have</t> <t>to</t> <t>do</t> <t>is</t> <t>to</t> <t>open</t> <t>that</t> <t>file</t>, <t>convert</t> <t>the</t> <t>numbers</t> <t>into</t> <t>a</t> <t>list</t>, <t>then</t> <t>find</t> <t>the</t> <t>mean</t>, <t>standard</t> <t>deviation</t>, <t>etc</t> <t>without</t> <t>using</t> <t>the</t> <t>easy</t> <t>built</t> <t>in</t> <t>python</t> <t>tools</t>.

<t>I've</t> <t>tried</t> <t>using</t> <code><c>open</c></code> <t>but</t> <t>it</t> <t>gives</t> <t>me</t> <t>invalid</t> <t>syntax</t> (<t>the</t> <t>file</t> <t>name</t> <t>I</t> <t>chose</t> <t>was</t> ""<t>numbers</t>"" <t>and</t> <t>it</t> <t>saved</t> <t>into</t> <code>""<c>My</c> <c>Documents</c>""</code> <t>automatically</t>, <t>so</t> <t>I</t> <t>tried</t> <code><c>open(</c><c>numbers</c>, '<c>r</c>')</code> <t>and</t> <code><c>open(</c><c>C:\name\MyDocuments\numbers</c>, '<c>r</c>')</code> <t>and</t> <t>neither</t> <t>one</t> <t>worked</t>).
"
3939361|"<t>Remove</t> <t>specific</t> <t>characters</t> <t>from</t> <t>a</t> <t>string</t> <t>in</t> <t>python</t>"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>remove</t> <t>specific</t> <t>characters</t> <t>from</t> <t>a</t> <t>string</t> <t>using</t> <t>python</t>. <t>This</t> <t>is</t> <t>the</t> <t>code</t> <t>I'm</t> <t>using</t> <t>right</t> <t>now</t>. <t>Unfortunately</t> <t>it</t> <t>appears</t> <t>to</t> <t>do</t> <t>nothing</t> <t>to</t> <t>the</t> <t>string</t>.

<code><c>for</c> <c>char</c> <c>in</c> <c>line</c>:
    <c>if</c> <c>char</c> <c>in</c> "" <c>?</c><c>.</c><c>!</c><c>/</c>;:"":
        <c>line</c><c>.</c><c>replace(</c><c>char</c>,'')
</code>

<t>How</t> <t>do</t> <t>I</t> <t>do</t> <t>this</t> <t>properly</t>?
"
3940128|"<t>How</t> <t>can</t> <t>I</t> <t>reverse</t> <t>a</t> <t>list</t> <t>in</t> <t>python</t>?"|"<t>How</t> <t>can</t> <t>I</t> <t>do</t> <t>this</t> <t>in</t> <t>python</t>?

<code><c>array</c> <c>=</c> [<c>0</c>,<c>10</c>,<c>20</c>,<c>40</c>]
<c>for</c> (<c>i</c> <c>=</c> <c>array</c><c>.</c><c>length(</c>) <c>-</c> <c>1</c> ;<c>i</c> <c>&gt;</c><c>=</c> <c>0</c>; <c>i</c><c>-</c><c>-</c>)
</code>

<t>I</t> <t>need</t> <t>to</t> <t>have</t> <t>the</t> <t>elements</t> <t>of</t> <t>an</t> <t>array</t> <t>but</t> <t>from</t> <t>the</t> <t>end</t> <t>to</t> <t>the</t> <t>beginning</t>.
"
3964681|"<t>Find</t> <t>all</t> <t>files</t> <t>in</t> <t>a</t> <t>directory</t> <t>with</t> <t>extension</t> .<t>txt</t> <t>in</t> <t>Python</t>"|"<t>How</t> <t>can</t> <t>I</t> <t>find</t> <t>all</t> <t>the</t> <t>files</t> <t>in</t> <t>a</t> <t>directory</t> <t>having</t> <t>the</t> <t>extension</t> <code><c>.</c><c>txt</c></code> <t>in</t> <t>python</t>?
"
3965104|"<t>not</t> <t>None</t> <t>test</t> <t>in</t> <t>Python</t>"|"<t>Out</t> <t>of</t> <t>these</t> <t>not</t> <t>None</t> <t>tests</t>.

<code><c>if</c> <c>val</c> <c>!=</c> <c>None</c>:

<c>if</c> <c>not</c> (<c>val</c> <c>is</c> <c>None</c>):

<c>if</c> <c>val</c> <c>is</c> <c>not</c> <c>None</c>:
</code>

<t>Which</t> <t>one</t> <t>is</t> <t>preferable</t>, <t>and</t> <t>why</t>?
"
3987041|"<t>Python</t>: <t>Run</t> <t>function</t> <t>from</t> <t>the</t> <t>command</t> <t>line</t>"|"<t>I</t> <t>have</t> <t>below</t> <t>code</t> <t>in</t> <t>my</t> <t>file</t>:

<code><c>def</c> <c>hello(</c>):
    <c>return</c> '<c>Hi</c> :)'
</code>

<t>How</t> <t>would</t> <t>I</t> <t>run</t> <t>this</t> <t>from</t> <t>the</t> <t>command</t> <t>line</t>?
"
3996904|"<t>Generate</t> <t>random</t> <t>integers</t> <t>between</t> <t>0</t> <t>and</t> <t>9</t>"|"<t>How</t> <t>can</t> <t>I</t> <t>generate</t> <t>random</t> <t>integers</t> <t>between</t> <t>0</t> <t>and</t> <t>9</t> (<t>inclusive</t>) <t>in</t> <t>Python</t>?

<t>i.e.</t> <code><c>0</c></code>, <code><c>1</c></code>, <code><c>2</c></code>, <code><c>3</c></code>, <code><c>4</c></code>, <code><c>5</c></code>, <code><c>6</c></code>, <code><c>7</c></code>, <code><c>8</c></code>, <code><c>9</c></code>
"
4041238|"<t>Why</t> <t>use</t> <t>def</t> <t>main</t>()?"|"
  <t>Possible</t> <t>Duplicate</t>:
  <t>What</t> <t>does</t> <code><c>if</c> <c>__name__</c><c>==</c> ""<c>__main__</c>""</code> <t>do</t>?  




<t>I've</t> <t>seen</t> <t>some</t> <t>code</t> <t>samples</t> <t>and</t> <t>tutorials</t> <t>that</t> <t>use</t>

<code><c>def</c> <c>main(</c>):
    # <c>my</c> <c>code</c> <c>here</c>

<c>if</c> <c>__name__</c> <c>==</c> ""<c>__main__</c>"":
    <c>main(</c>)
</code>

<t>But</t> <t>why</t>? <t>Is</t> <t>there</t> <t>any</t> <t>reason</t> <t>not</t> <t>do</t> <t>define</t> <t>your</t> <t>functions</t> <t>at</t> <t>the</t> <t>top</t> <t>of</t> <t>the</t> <t>file</t>, <t>then</t> <t>just</t> <t>write</t> <t>code</t> <t>under</t> <t>it</t>? <t>ie</t>

<code><c>def</c> <c>my_function(</c>)
    # <c>my</c> <c>code</c> <c>here</c>

<c>def</c> <c>my_function_two(</c>)
    # <c>my</c> <c>code</c> <c>here</c>

# <c>some</c> <c>code</c>
# <c>call</c> <c>function</c>
# <c>print(</c><c>something</c>)
</code>

<t>I</t> <t>just</t> <t>wonder</t> <t>if</t> <t>there</t> <t>is</t> <t>any</t> <t>rhyme</t> <t>to</t> <t>the</t> <t>main</t>?
"
4056768|"<t>How</t> <t>to</t> <t>declare</t> <t>array</t> <t>of</t> <t>zeros</t> <t>in</t> <t>python</t> (<t>or</t> <t>an</t> <t>array</t> <t>of</t> <t>a</t> <t>certain</t> <t>size</t>)"|"<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>build</t> <t>a</t> <t>histogram</t> <t>of</t> <t>counts...</t> <t>so</t> <t>I</t> <t>create</t> <t>buckets</t>.
<t>I</t> <t>know</t> <t>I</t> <t>could</t> <t>just</t> <t>go</t> <t>through</t> <t>and</t> <t>append</t> <t>a</t> <t>bunch</t> <t>of</t> <t>zeros</t> <t>i</t>.<t>e</t> <t>something</t> <t>along</t> <t>these</t> <t>lines</t>:

<code><c>buckets</c> <c>=</c> []
<c>for</c> <c>i</c> <c>in</c> <c>xrange(</c><c>0</c>,<c>100</c>):
    <c>buckets</c><c>.</c><c>append(</c><c>0</c>)
</code>

<t>Is</t> <t>there</t> <t>a</t>  <t>more</t> <t>elegant</t> <t>way</t> <t>to</t> <t>do</t> <t>it</t>? <t>I</t> <t>feel</t> <t>like</t> <t>there</t> <t>should</t> <t>be</t> <t>a</t> <t>way</t> <t>to</t> <t>just</t> <t>declare</t> <t>an</t> <t>array</t> <t>of</t> <t>a</t> <t>certain</t> <t>size</t>.

<t>I</t> <t>know</t> <t>numpy</t> <t>has</t> <code><c>numpy</c><c>.</c><c>zeros</c></code> <t>but</t> <t>I</t> <t>want</t> <t>the</t> <t>more</t> <t>general</t> <t>solution</t>
"
4071396|"<t>Split</t> <t>by</t> <t>comma</t> <t>and</t> <t>strip</t> <t>whitespace</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>have</t> <t>some</t> <t>python</t> <t>code</t> <t>that</t> <t>splits</t> <t>on</t> <t>comma</t>, <t>but</t> <t>doesn't</t> <t>strip</t> <t>the</t> <t>whitespace</t>:

<code><c>&gt;&gt;&gt;</c> <c>string</c> <c>=</c> ""<c>blah</c>, <c>lots</c>  ,  <c>of</c> ,  <c>spaces</c>, <c>here</c> ""
<c>&gt;&gt;&gt;</c> <c>mylist</c> <c>=</c> <c>string</c><c>.</c><c>split(</c>',')
<c>&gt;&gt;&gt;</c> <c>print</c> <c>mylist</c>
['<c>blah</c>', ' <c>lots</c>  ', '  <c>of</c> ', '  <c>spaces</c>', ' <c>here</c> ']
</code>

<t>I</t> <t>would</t> <t>rather</t> <t>end</t> <t>up</t> <t>with</t> <t>whitespace</t> <t>removed</t> <t>like</t> <t>this</t>:

<code>['<c>blah</c>', '<c>lots</c>', '<c>of</c>', '<c>spaces</c>', '<c>here</c>']
</code>

<t>I</t> <t>am</t> <t>aware</t> <t>that</t> <t>I</t> <t>could</t> <t>loop</t> <t>through</t> <t>the</t> <t>list</t> <t>and</t> <t>strip</t>() <t>each</t> <t>item</t> <t>but</t>, <t>as</t> <t>this</t> <t>is</t> <t>Python</t>, <t>I'm</t> <t>guessing</t> <t>there's</t> <t>a</t> <t>quicker</t>, <t>easier</t> <t>and</t> <t>more</t> <t>elegant</t> <t>way</t> <t>of</t> <t>doing</t> <t>it</t>.
"
4130027|"<t>Python</t> <t>count</t> <t>elements</t> <t>in</t> <t>list</t>"|"<t>I</t> <t>am</t> <t>a</t> <t>newbe</t> <t>to</t> <t>Python..</t>
<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>find</t> <t>a</t> <t>simple</t> <t>way</t> <t>of</t> <t>getting</t> <t>a</t> <t>count</t> <t>of</t> <t>the</t> <t>number</t> <t>of</t> <t>elements</t> <t>in</t> <t>a</t> <t>list</t> 
<t>e.g.</t> 

<code><c>MyList</c> <c>=</c> [""<c>a</c>"", ""<c>b</c>"", ""<c>c</c>""]
</code>

<t>So</t> <t>I</t> <t>want</t> <t>to</t> <t>know</t> <t>there</t> <t>are</t> <t>three</t>.
<t>I</t> <t>am</t> <t>surely</t> <t>missing</t> <t>something</t>.
"
4142151|"<t>How</t> <t>to</t> <t>import</t> <t>the</t> <t>class</t> <t>within</t> <t>the</t> <t>same</t> <t>directory</t> <t>or</t> <t>sub</t> <t>directory</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>directory</t> <t>that</t> <t>stores</t> <t>all</t> <t>the</t> .<t>py</t> <t>files</t>.

<code><c>bin</c><c>/
</c>   <c>main</c><c>.</c><c>py</c>
   <c>user</c><c>.</c><c>py</c> # <c>where</c> <c>class</c> <c>User</c> <c>resides</c>
   <c>dir</c><c>.</c><c>py</c> # <c>where</c> <c>class</c> <c>Dir</c> <c>resides</c>
</code>

<t>I</t> <t>want</t> <t>to</t> <t>use</t> <t>classes</t> <t>from</t> <t>user</t>.<t>py</t> <t>and</t> <t>dir</t>.<t>py</t> <t>in</t> <t>main.py.</t>
<t>How</t> <t>can</t> <t>I</t> <t>import</t> <t>these</t> <t>Python</t> <t>classes</t> <t>into</t> <t>main</t>.<t>py</t>?
<t>Furthermore</t>, <t>how</t> <t>can</t> <t>I</t> <t>import</t> <t>class</t> <code><c>User</c></code> <t>if</t> <t>user</t>.<t>py</t> <t>is</t> <t>in</t> <t>a</t> <t>sub</t> <t>directory</t>?

<code><c>bin</c><c>/
</c>    <c>dir</c><c>.</c><c>py</c>
    <c>main</c><c>.</c><c>py</c>
    <c>usr</c><c>/
</c>        <c>user</c><c>.</c><c>py</c>
</code>
"
4172448|"<t>Is</t> <t>it</t> <t>possible</t> <t>to</t> <t>break</t> <t>a</t> <t>long</t> <t>line</t> <t>to</t> <t>multiple</t> <t>lines</t> <t>in</t> <t>Python</t>"|"<t>Just</t> <t>like</t> <t>C</t>, <t>you</t> <t>can</t> <t>break</t> <t>a</t> <t>long</t> <t>line</t> <t>into</t> <t>multiple</t> <t>short</t> <t>lines</t>. <t>But</t> <t>in</t> <t>Python</t>, <t>if</t> <t>I</t> <t>do</t> <t>this</t>, <t>there</t> <t>will</t> <t>be</t> <t>an</t> <t>indent</t> <t>error...</t> <t>Is</t> <t>it</t> <t>possible</t>?
"
4182603|"<t>How</t> <t>to</t> <t>convert</t> <t>a</t> <t>string</t> <t>to</t> <t>utf-8</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>browser</t> <t>which</t> <t>sends</t> <t>utf-8</t> <t>characters</t> <t>to</t> <t>my</t> <t>Python</t> <t>server</t>, <t>but</t> <t>when</t> <t>I</t> <t>retrieve</t> <t>it</t> <t>from</t> <t>the</t> <t>query</t> <t>string</t>, <t>the</t> <t>encoding</t> <t>that</t> <t>Python</t> <t>returns</t> <t>is</t> <t>ASCII</t>. <t>How</t> <t>can</t> <t>I</t> <t>convert</t> <t>the</t> <t>plain</t> <t>string</t> <t>to</t> <t>utf-8</t>?

<t>NOTE</t>: <t>The</t> <t>string</t> <t>passed</t> <t>from</t> <t>the</t> <t>web</t> <t>is</t> <t>already</t> <t>UTF-8</t> <t>encoded</t>, <t>I</t> <t>just</t> <t>want</t> <t>to</t> <t>make</t> <t>Python</t> <t>to</t> <t>treat</t> <t>it</t> <t>as</t> <t>UTF-8</t> <t>not</t> <t>ASCII</t>.
"
4183506|"<t>Python</t> <t>list</t> <t>sort</t> <t>in</t> <t>descending</t> <t>order</t>"|"<t>How</t> <t>can</t> <t>I</t> <t>sort</t> <t>this</t> <t>list</t> <t>in</t> <t>descending</t> <t>order</t>?

<code><c>timestamp</c> <c>=</c> [
    ""<c>2010-04-20</c> <c>10</c>:<c>0</c><c>7</c>:<c>30</c>"",
    ""<c>2010-04-20</c> <c>10</c>:<c>0</c><c>7</c>:<c>38</c>"",
    ""<c>2010-04-20</c> <c>10</c>:<c>0</c><c>7</c>:<c>52</c>"",
    ""<c>2010-04-20</c> <c>10</c>:<c>0</c><c>8</c>:<c>22</c>"",
    ""<c>2010-04-20</c> <c>10</c>:<c>0</c><c>8</c>:<c>22</c>"",
    ""<c>2010-04-20</c> <c>10</c>:<c>0</c><c>9</c>:<c>46</c>"",
    ""<c>2010-04-20</c> <c>10</c>:<c>10</c>:<c>37</c>"",
    ""<c>2010-04-20</c> <c>10</c>:<c>10</c>:<c>58</c>"",
    ""<c>2010-04-20</c> <c>10</c>:<c>11</c>:<c>50</c>"",
    ""<c>2010-04-20</c> <c>10</c>:<c>12</c>:<c>13</c>"",
    ""<c>2010-04-20</c> <c>10</c>:<c>12</c>:<c>13</c>"",
    ""<c>2010-04-20</c> <c>10</c>:<c>25</c>:<c>38</c>""
]
</code>
"
4256107|"<t>running</t> <t>bash</t> <t>commands</t> <t>in</t> <t>python</t>"|"<t>On</t> <t>my</t> <t>local</t> <t>machine</t> <t>I</t> <t>run</t> <t>a</t> <t>python</t> <t>script</t> <t>which</t> <t>contains</t> <t>this</t> <t>line</t>

<code><c>bashCommand</c> <c>=</c> ""<c>cwm</c> <c>-</c><c>-</c><c>rdf</c> <c>test</c><c>.</c><c>rdf</c> <c>-</c><c>-</c><c>ntriples</c> <c>&gt;</c> <c>test</c><c>.</c><c>nt</c>""
<c>os</c><c>.</c><c>system(</c><c>bashCommand</c>)
</code>

<t>This</t> <t>works</t> <t>fine</t>.

<t>Then</t> <t>I</t> <t>run</t> <t>the</t> <t>same</t> <t>code</t> <t>on</t> <t>a</t> <t>server</t> <t>and</t> <t>I</t> <t>get</t> <t>the</t> <t>following</t> <t>error</t> <t>message</t>

<code>'<c>import</c> <c>site</c>' <c>failed</c>; <c>use</c> <c>-</c><c>v</c> <c>for</c> <c>traceback</c>
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
<c>File</c> ""<c>/usr/bin/cwm</c>"", <c>line</c> <c>48</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
<c>from</c> <c>swap</c> <c>import</c>  <c>diag</c>
<c>ImportError</c>: <c>No</c> <c>module</c> <c>named</c> <c>swap</c>
</code>

<t>So</t> <t>what</t> <t>I</t> <t>did</t> <t>then</t> <t>is</t> <t>I</t> <t>inserted</t> <t>a</t> ""<t>print</t> <t>bashCommand</t>"" <t>which</t> <t>prints</t> <t>me</t> <t>then</t> <t>the</t> <t>command</t> <t>in</t> <t>the</t> <t>terminal</t> <t>before</t> <t>it</t> <t>runs</t> <t>it</t> <t>with</t> <t>os.system().</t>

<t>Of</t> <t>course</t> <t>I</t> <t>get</t> <t>again</t> <t>the</t> <t>error</t> (<t>caused</t> <t>by</t> <t>os</t>.<t>system(bashCommand</t>)) <t>but</t> <t>before</t> <t>that</t> <t>error</t> <t>it</t> <t>prints</t> <t>the</t> <t>command</t> <t>in</t> <t>the</t> <t>terminal</t>. <t>Then</t> <t>I</t> <t>just</t> <t>copied</t> <t>that</t> <t>output</t> <t>and</t> <t>did</t> <t>a</t> <t>copy</t> <t>paste</t> <t>into</t> <t>the</t> <t>terminal</t> <t>and</t> <t>hit</t> <t>enter</t> <t>and</t> <t>it</t> <t>works...</t>

<t>Does</t> <t>anyone</t> <t>have</t> <t>a</t> <t>clue</t> <t>what's</t> <t>going</t> <t>on</t> :(?
"
4271740|"<t>How</t> <t>can</t> <t>I</t> <t>use</t> <t>Python</t> <t>to</t> <t>get</t> <t>the</t> <t>system</t> <t>hostname</t>?"|"<t>I'm</t> <t>writing</t> <t>a</t> <t>chat</t> <t>program</t> <t>for</t> <t>a</t> <t>local</t> <t>network</t>. <t>I</t> <t>would</t> <t>like</t> <t>be</t> <t>able</t> <t>to</t> <t>identify</t> <t>computers</t> <t>and</t> <t>get</t> <t>the</t> <t>user-set</t> <t>computer</t> <t>name</t> <t>with</t> <t>Python</t>.
"
4288973|"<t>What's</t> <t>the</t> <t>difference</t> <t>between</t> <t>%s</t> <t>and</t> <t>%d</t> <t>in</t> <t>Python</t> <t>string</t> <t>formatting</t>?"|"<t>I</t> <t>don't</t> <t>understand</t> <t>what</t> <code><c>%</c><c>s</c></code> <t>and</t> <code><c>%</c><c>d</c></code> <t>do</t> <t>and</t> <t>how</t> <t>they</t> <t>work</t>.
"
4289331|"<t>Python</t>: <t>Extract</t> <t>numbers</t> <t>from</t> <t>a</t> <t>string</t>"|"<t>I</t> <t>would</t> <t>extract</t> <t>all</t> <t>the</t> <t>numbers</t> <t>contained</t> <t>in</t> <t>a</t> <t>string</t>. <t>Which</t> <t>is</t> <t>the</t> <t>better</t> <t>suited</t> <t>for</t> <t>the</t> <t>purpose</t>, <t>regular</t> <t>expressions</t> <t>or</t> <t>the</t> <code><c>isdigit(</c>)</code> <t>method</t>?

<t>Example</t>:

<code><c>line</c> <c>=</c> ""<c>hello</c> <c>12</c> <c>hi</c> <c>89</c>""
</code>

<t>Result</t>:

<code>[<c>12</c>, <c>89</c>]
</code>
"
4344017|"<t>How</t> <t>can</t> <t>I</t> <t>get</t> <t>the</t> <t>concatenation</t> <t>of</t> <t>two</t> <t>lists</t> <t>in</t> <t>Python</t> <t>without</t> <t>modifying</t> <t>either</t> <t>one</t>?"|"<t>In</t> <t>Python</t>, <t>the</t> <t>only</t> <t>way</t> <t>I</t> <t>can</t> <t>find</t> <t>to</t> <t>concatenate</t> <t>two</t> <t>lists</t> <t>is</t> <code><c>list</c><c>.</c><c>extend</c></code>, <t>which</t> <t>modifies</t> <t>the</t> <t>first</t> <t>list</t>. <t>Is</t> <t>there</t> <t>any</t> <t>concatenation</t> <t>function</t> <t>that</t> <t>returns</t> <t>its</t> <t>result</t> <t>without</t> <t>modifying</t> <t>its</t> <t>arguments</t>?
"
4362586|"<t>sum</t> <t>a</t> <t>list</t> <t>of</t> <t>numbers</t> <t>in</t> <t>Python</t>"|"<t>If</t> <t>I</t> <t>have</t> <t>a</t> <t>list</t> <t>of</t> <t>numbers</t> <t>such</t> <t>as</t> <code>[<c>1</c>,<c>2</c>,<c>3</c>,<c>4</c>,5...]</code> <t>and</t> <t>I</t> <t>want</t> <t>to</t> <t>calculate</t> <code>(<c>1</c><c>+</c><c>2</c>)<c>/2</c></code> <t>and</t> <t>for</t> <t>the</t> <t>second</t>, <code>(<c>2</c><c>+</c><c>3</c>)<c>/2</c></code> <t>and</t> <t>the</t> <t>third</t>,
<code>(<c>3</c><c>+</c><c>4</c>)<c>/2</c></code>, <t>and</t> <t>so</t> <t>on</t>.

<t>How</t> <t>can</t> <t>I</t> <t>do</t> <t>that</t>?
<t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>sum</t> <t>the</t> <t>first</t> <t>number</t> <t>with</t> <t>the</t> <t>second</t> <t>and</t> <t>divide</t> <t>it</t> <t>by</t> <t>2</t>, <t>then</t> <t>sum</t> <t>the</t> <t>second</t> <t>with</t> <t>the</t> <t>third</t> <t>and</t> <t>divide</t> <t>by</t> <t>2</t>, <t>and</t> <t>so</t> <t>on</t>.

<t>Also</t>, <t>how</t> <t>can</t> <t>I</t> <t>sum</t> <t>a</t> <t>list</t> <t>of</t> <t>numbers</t>?

<code><c>a</c> <c>=</c> [<c>1</c>,<c>2</c>,<c>3</c>,<c>4</c>,<c>5</c>,...]
</code>

<t>Is</t> <t>it</t>:

<code><c>b</c> <c>=</c> <c>sum(</c><c>a</c>)
<c>print</c> <c>b</c>
</code>

<t>to</t> <t>get</t> <t>one</t> <t>number</t>?
<t>This</t> <t>doesn't</t> <t>work</t> <t>for</t> <t>me</t>. 
<t>Help</t> <t>me</t> <t>please</t>.
"
4377109|"<t>Shell</t> <t>Script</t>: <t>Execute</t> <t>a</t> <t>python</t> <t>program</t> <t>from</t> <t>within</t> <t>a</t> <t>shell</t> <t>script</t>"|"<t>I've</t> <t>tried</t> <t>googling</t> <t>the</t> <t>answer</t> <t>but</t> <t>with</t> <t>no</t> <t>luck</t>.

<t>I</t> <t>need</t> <t>to</t> <t>use</t> <t>my</t> <t>works</t> <t>supercomputer</t> <t>server</t>, <t>but</t> <t>for</t> <t>my</t> <t>python</t> <t>script</t> <t>to</t> <t>run</t>, <t>it</t> <t>must</t> <t>be</t> <t>executed</t> <t>via</t> <t>a</t> <t>shell</t> <t>script</t>.

<t>For</t> <t>example</t> <t>I</t> <t>want</t> <code><c>job</c><c>.</c><c>sh</c></code> <t>to</t> <t>execute</t> <code><c>python_script</c><c>.</c><c>py</c></code>

<t>How</t> <t>can</t> <t>this</t> <t>be</t> <t>accomplished</t>?
"
4383571|"<t>Importing</t> <t>files</t> <t>from</t> <t>different</t> <t>folder</t>"|"<t>I</t> <t>have</t> <t>the</t> <t>following</t> <t>folder</t> <t>structure</t>.

<code><c>application</c><c>/app/folder/file.py</c></code>

<t>and</t> <t>I</t> <t>want</t> <t>to</t> <t>import</t> <t>some</t> <t>functions</t> <t>from</t> <t>file</t>.<t>py</t> <t>in</t> <t>another</t> <t>Python</t> <t>file</t> <t>which</t> <t>resides</t> <t>in</t>

<code><c>application</c><c>/app2/some_folder/some_file.py</c></code>

<t>I've</t> <t>tried</t>

<code><c>from</c> <c>application</c><c>.</c><c>app</c><c>.</c><c>folder</c><c>.</c><c>file</c> <c>import</c> <c>func_name</c></code>

<t>and</t> <t>some</t> <t>other</t> <t>various</t> <t>attempts</t> <t>but</t> <t>so</t> <t>far</t> <t>I</t> <t>couldn't</t> <t>manage</t> <t>to</t> <t>import</t> <t>properly</t>. <t>How</t> <t>can</t> <t>I</t> <t>do</t> <t>this</t>?
"
4426663|"<t>How</t> <t>do</t> <t>I</t> <t>remove</t> <t>the</t> <t>first</t> <t>Item</t> <t>from</t> <t>a</t> <t>Python</t> <t>list</t>?"|"<t>I</t> <t>have</t> <t>the</t> <t>list</t> <code>[<c>0</c>, <c>1</c>, <c>2</c>, <c>3</c>, <c>4</c>]</code> <t>I'd</t> <t>like</t> <t>to</t> <t>make</t> <t>it</t> <t>into</t> <code>[<c>1</c>, <c>2</c>, <c>3</c>, <c>4</c>]</code>. <t>How</t> <t>do</t> <t>I</t> <t>go</t> <t>about</t> <t>this</t>? 
"
4432208|"<t>How</t> <t>does</t> <t>%</t> <t>work</t> <t>in</t> <t>Python</t>?"|"<t>What</t> <t>does</t> <t>the</t> <code><c>%</c></code> <t>in</t> <t>a</t> <t>calculation</t>? <t>I</t> <t>can't</t> <t>seem</t> <t>to</t> <t>work</t> <t>out</t> <t>what</t> <t>it</t> <t>does</t>.

<t>Does</t> <t>it</t> <t>work</t> <t>out</t> <t>a</t> <t>percent</t> <t>of</t> <t>the</t> <t>calculation</t> <t>for</t> <t>example</t>: <code><c>3</c> <c>+</c> <c>2</c> <c>+</c> <c>1</c> <c>-</c> <c>5</c> <c>+</c> <c>4</c> <c>%</c> <c>2</c> <c>-</c> <c>1</c> <c>/</c> <c>4</c> <c>+</c> <c>6</c></code> <t>is</t> <t>apparently</t> <t>equal</t> <t>to</t> <t>7</t>. <t>How</t>?
"
4435169|"<t>Good</t> <t>way</t> <t>to</t> <t>append</t> <t>to</t> <t>a</t> <t>string</t>"|"<t>I</t> <t>want</t> <t>an</t> <t>efficient</t> <t>way</t> <t>to</t> <t>append</t> <t>string</t> <t>to</t> <t>another</t>.

<t>Is</t> <t>there</t> <t>any</t> <t>good</t> <t>built-in</t> <t>method</t> <t>to</t> <t>use</t>?
"
4455076|"<t>How</t> <t>to</t> <t>access</t> <t>the</t> <t>ith</t> <t>column</t> <t>of</t> <t>a</t> <t>NumPy</t> <t>multidimensional</t> <t>array</t>?"|"<t>Suppose</t> <t>I</t> <t>have</t>:

<code><c>test</c> <c>=</c> <c>numpy</c><c>.</c><c>array(</c>[[<c>1</c>, <c>2</c>], [<c>3</c>, <c>4</c>], [<c>5</c>, <c>6</c>]])
</code>

<code><c>test</c>[<c>i</c>]</code> <t>gets</t> <t>me</t> <t>ith</t> <t>line</t> <t>of</t> <t>the</t> <t>array</t> (<t>eg</t> <code>[<c>1</c>, <c>2</c>]</code>). <t>How</t> <t>can</t> <t>I</t> <t>access</t> <t>the</t> <t>ith</t> <t>column</t>? (<t>eg</t> <code>[<c>1</c>, <c>3</c>, <c>5</c>]</code>). <t>Also</t>, <t>would</t> <t>this</t> <t>be</t> <t>an</t> <t>expensive</t> <t>operation</t>?
"
4481724|"<t>Convert</t> <t>a</t> <t>list</t> <t>of</t> <t>characters</t> <t>into</t> <t>a</t> <t>string</t>"|"<t>If</t> <t>I</t> <t>have</t> <t>a</t> <t>list</t> <t>of</t> <t>chars</t>:

<code><c>a</c> <c>=</c> ['<c>a</c>','<c>b</c>','<c>c</c>','<c>d</c>']
</code>

<t>How</t> <t>do</t> <t>I</t> <t>convert</t> <t>it</t> <t>into</t> <t>a</t> <t>single</t> <t>string</t>?

<code><c>a</c> <c>=</c> '<c>abcd</c>'
</code>
"
4534438|"<t>TypeError</t>: '<t>module</t>' <t>object</t> <t>is</t> <t>not</t> <t>callable</t>"|"<code><c>File</c> ""<c>C:\Users\Administrator\Documents\Mibot\oops\blinkserv.py</c>"", <c>line</c> <c>82</c>, <c>in</c> <c>__init__</c>
    <c>self</c><c>.</c><c>serv</c> <c>=</c> <c>socket(</c><c>AF_INET</c>,<c>SOCK_STREAM</c>)
<c>TypeError</c>: '<c>module</c>' <c>object</c> <c>is</c> <c>not</c> <c>callable</c>
</code>

<t>Why</t> <t>am</t> <t>I</t> <t>getting</t> <t>this</t> <t>error</t>?
<t>I'm</t> <t>confused</t>.

<t>What</t> <t>do</t> <t>you</t> <t>need</t> <t>to</t> <t>know</t> <t>to</t> <t>answer</t> <t>my</t> <t>question</t>?
"
4547274|"<t>Convert</t> <t>a</t> <t>python</t> <t>dict</t> <t>to</t> <t>a</t> <t>string</t> <t>and</t> <t>back</t>"|"<t>I</t> <t>am</t> <t>writing</t> <t>a</t> <t>program</t> <t>that</t> <t>stores</t> <t>data</t> <t>in</t> <t>a</t> <t>dictionary</t> <t>object</t>, <t>but</t> <t>this</t> <t>data</t> <t>needs</t> <t>to</t> <t>be</t> <t>saved</t> <t>at</t> <t>some</t> <t>point</t> <t>during</t> <t>the</t> <t>program</t> <t>execution</t> <t>and</t> <t>loaded</t> <t>back</t> <t>into</t> <t>the</t> <t>dictionary</t> <t>object</t> <t>when</t> <t>the</t> <t>program</t> <t>is</t> <t>run</t> <t>again</t>.
<t>How</t> <t>would</t> <t>I</t> <t>convert</t> <t>a</t> <t>dictionary</t> <t>object</t> <t>into</t> <t>a</t> <t>string</t> <t>that</t> <t>can</t> <t>be</t> <t>written</t> <t>to</t> <t>a</t> <t>file</t> <t>and</t> <t>loaded</t> <t>back</t> <t>into</t> <t>a</t> <t>dictionary</t> <t>object</t>? <t>This</t> <t>will</t> <t>hopefully</t> <t>support</t> <t>dictionaries</t> <t>containing</t> <t>dictionaries</t>.
"
4576115|"<t>Convert</t> <t>a</t> <t>list</t> <t>to</t> <t>a</t> <t>dictionary</t> <t>in</t> <t>Python</t>"|"<t>Let's</t> <t>say</t> <t>I</t> <t>have</t> <t>a</t> <t>list</t> <code><c>a</c></code> <t>in</t> <t>Python</t> <t>whose</t> <t>entries</t> <t>conveniently</t> <t>map</t> <t>to</t> <t>a</t> <t>dictionary</t>. <t>Each</t> <t>even</t> <t>element</t> <t>represents</t> <t>the</t> <t>key</t> <t>to</t> <t>the</t> <t>dictionary</t>, <t>and</t> <t>the</t> <t>following</t> <t>odd</t> <t>element</t> <t>is</t> <t>the</t> <t>value</t>

<t>for</t> <t>example</t>,

<code><c>a</c> <c>=</c> ['<c>hello</c>','<c>world</c>','<c>1</c>','<c>2</c>']
</code>

<t>and</t> <t>I'd</t> <t>like</t> <t>to</t> <t>convert</t> <t>it</t> <t>to</t> <t>a</t> <t>dictionary</t> <code><c>b</c></code>, <t>where</t> 

<code><c>b</c>['<c>hello</c>'] <c>=</c> '<c>world</c>'
<c>b</c>['<c>1</c>'] <c>=</c> '<c>2</c>'
</code>

<t>What</t> <t>is</t> <t>the</t> <t>syntactically</t> <t>cleanest</t> <t>way</t> <t>to</t> <t>accomplish</t> <t>this</t>?
"
4664850|"<t>Find</t> <t>all</t> <t>occurrences</t> <t>of</t> <t>a</t> <t>substring</t> <t>in</t> <t>Python</t>"|"<t>Python</t> <t>has</t> <code><c>string</c><c>.</c><c>find(</c>)</code> <t>and</t> <code><c>string</c><c>.</c><c>rfind(</c>)</code> <t>to</t> <t>get</t> <t>the</t> <t>index</t> <t>of</t> <t>a</t> <t>substring</t> <t>in</t> <t>string</t>.

<t>I</t> <t>wonder</t>, <t>maybe</t> <t>there</t> <t>is</t> <t>something</t> <t>like</t> <code><c>string</c><c>.</c><c>find_all(</c>)</code> <t>which</t> <t>can</t> <t>return</t> <t>all</t> <t>founded</t> <t>indexes</t> (<t>not</t> <t>only</t> <t>first</t> <t>from</t> <t>beginning</t> <t>or</t> <t>first</t> <t>from</t> <t>end</t>)?

<t>For</t> <t>example</t>:

<code><c>string</c> <c>=</c> ""<c>test</c> <c>test</c> <c>test</c> <c>test</c>""

<c>print</c> <c>string</c><c>.</c><c>find(</c>'<c>test</c>') # <c>0</c>
<c>print</c> <c>string</c><c>.</c><c>rfind(</c>'<c>test</c>') # <c>15</c>

#<c>that</c>'<c>s</c> <c>the</c> <c>goal</c>
<c>print</c> <c>string</c><c>.</c><c>find_all(</c>'<c>test</c>') # [<c>0</c>,<c>5</c>,<c>10</c>,<c>15</c>]
</code>
"
4666973|"<t>How</t> <t>to</t> <t>extract</t> <t>a</t> <t>substring</t> <t>from</t> <t>inside</t> <t>a</t> <t>string</t> <t>in</t> <t>Python</t>?"|"<t>Let's</t> <t>say</t> <t>I</t> <t>have</t> <t>a</t> <t>string</t> <code>'<c>gfgfdAAA1234ZZZuijjk</c>'</code> <t>and</t> <t>I</t> <t>want</t> <t>to</t> <t>extract</t> <t>just</t> <t>the</t> <code>'<c>1234</c>'</code> <t>part</t>.

<t>I</t> <t>only</t> <t>know</t> <t>what</t> <t>will</t> <t>be</t> <t>the</t> <t>few</t> <t>characters</t> <t>directly</t> <t>before</t> <code><c>AAA</c></code>, <t>and</t> <t>after</t> <code><c>ZZZ</c></code> <t>the</t> <t>part</t> <t>I</t> <t>am</t> <t>interested</t> <t>in</t> <code><c>1234</c></code>.

<t>With</t> <code><c>sed</c></code> <t>it</t> <t>is</t> <t>possible</t> <t>to</t> <t>do</t> <t>something</t> <t>like</t> <t>this</t> <t>with</t> <t>a</t> <t>string</t>:

<code><c>echo</c> ""<c>$</c><c>STRING</c>"" <c>|</c> <c>sed</c> <c>-</c><c>e</c> ""<c>s</c><c>|</c><c>.</c><c>*</c><c>AAA</c><c>\(.*\)ZZZ.*|\1|</c>""
</code>

<t>And</t> <t>this</t> <t>will</t> <t>give</t> <t>me</t> <code><c>1234</c></code> <t>as</t> <t>a</t> <t>result</t>.

<t>How</t> <t>to</t> <t>do</t> <t>the</t> <t>same</t> <t>thing</t> <t>in</t> <t>Python</t>?
"
4675728|"<t>Redirect</t> <t>stdout</t> <t>to</t> <t>a</t> <t>file</t> <t>in</t> <t>Python</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>redirect</t> <t>stdout</t> <t>to</t> <t>an</t> <t>arbitrary</t> <t>file</t> <t>in</t> <t>Python</t>?

<t>When</t> <t>a</t> <t>long-running</t> <t>Python</t> <t>script</t> (<t>e</t>.<t>g</t>, <t>web</t> <t>application</t>) <t>is</t> <t>started</t> <t>from</t> <t>within</t> <t>the</t> <t>ssh</t> <t>session</t> <t>and</t> <t>backgounded</t>, <t>and</t> <t>the</t> <t>ssh</t> <t>session</t> <t>is</t> <t>closed</t>, <t>the</t> <t>application</t> <t>will</t> <t>raise</t> <t>IOError</t> <t>and</t> <t>fail</t> <t>the</t> <t>moment</t> <t>it</t> <t>tries</t> <t>to</t> <t>write</t> <t>to</t> <t>stdout</t>. <t>I</t> <t>needed</t> <t>to</t> <t>find</t> <t>a</t> <t>way</t> <t>to</t> <t>make</t> <t>the</t> <t>application</t> <t>and</t> <t>modules</t> <t>output</t> <t>to</t> <t>a</t> <t>file</t> <t>rather</t> <t>than</t> <t>stdout</t> <t>to</t> <t>prevent</t> <t>failure</t> <t>due</t> <t>to</t> <t>IOError</t>. <t>Currently</t>, <t>I</t> <t>employ</t> <t>nohup</t> <t>to</t> <t>redirect</t> <t>output</t> <t>to</t> <t>a</t> <t>file</t>, <t>and</t> <t>that</t> <t>gets</t> <t>the</t> <t>job</t> <t>done</t>, <t>but</t> <t>I</t> <t>was</t> <t>wondering</t> <t>if</t> <t>there</t> <t>was</t> <t>a</t> <t>way</t> <t>to</t> <t>do</t> <t>it</t> <t>without</t> <t>using</t> <t>nohup</t>, <t>out</t> <t>of</t> <t>curiosity</t>.

<t>I</t> <t>have</t> <t>already</t> <t>tried</t> <code><c>sys</c><c>.</c><c>stdout</c> <c>=</c> <c>open(</c>'<c>somefile</c>', '<c>w</c>')</code>, <t>but</t> <t>this</t> <t>does</t> <t>not</t> <t>seem</t> <t>to</t> <t>prevent</t> <t>some</t> <t>external</t> <t>modules</t> <t>from</t> <t>still</t> <t>outputting</t> <t>to</t> <t>terminal</t> (<t>or</t> <t>maybe</t> <t>the</t> <code><c>sys</c><c>.</c><c>stdout</c> <c>=</c> ...</code> <t>line</t> <t>did</t> <t>not</t> <t>fire</t> <t>at</t> <t>all</t>). <t>I</t> <t>know</t> <t>it</t> <t>should</t> <t>work</t> <t>from</t> <t>simpler</t> <t>scripts</t> <t>I've</t> <t>tested</t> <t>on</t>, <t>but</t> <t>I</t> <t>also</t> <t>didn't</t> <t>have</t> <t>time</t> <t>yet</t> <t>to</t> <t>test</t> <t>on</t> <t>a</t> <t>web</t> <t>application</t> <t>yet</t>.
"
4693120|"<t>Use</t> <t>of</t> ""<t>global</t>"" <t>keyword</t> <t>in</t> <t>Python</t>"|"<t>What</t> <t>I</t> <t>understand</t> <t>from</t> <t>reading</t> <t>the</t> <t>documentation</t> <t>is</t> <t>that</t> <t>Python</t> <t>has</t> <t>a</t> <t>separate</t> <t>namespace</t> <t>for</t> <t>functions</t>, <t>and</t> <t>if</t> <t>I</t> <t>want</t> <t>to</t> <t>use</t> <t>a</t> <t>global</t> <t>variable</t> <t>in</t> <t>that</t> <t>function</t>, <t>I</t> <t>need</t> <t>to</t> <t>use</t> <code><c>global</c></code>.

<t>I'm</t> <t>using</t> <t>Python</t> <t>2.7</t> <t>and</t> <t>I</t> <t>tried</t> <t>this</t> <t>little</t> <t>test</t>

<code><c>&gt;&gt;&gt;</c> <c>sub</c> <c>=</c> ['<c>0</c>', '<c>0</c>', '<c>0</c>', '<c>0</c>']
<c>&gt;&gt;&gt;</c> <c>def</c> <c>getJoin(</c>):
...     <c>return</c> '<c>.</c>'<c>.</c><c>join(</c><c>sub</c>)
...
<c>&gt;&gt;&gt;</c> <c>getJoin(</c>)
'<c>0.0.0.0</c>'
</code>

<t>It</t> <t>seems</t> <t>things</t> <t>are</t> <t>working</t> <t>fine</t> <t>even</t> <t>without</t> <code><c>global</c></code>. <t>I</t> <t>was</t> <t>able</t> <t>to</t> <t>access</t> <t>global</t> <t>variable</t> <t>without</t> <t>any</t> <t>problem</t>.

<t>Am</t> <t>I</t> <t>missing</t> <t>anything</t>? <t>Also</t>, <t>following</t> <t>is</t> <t>from</t> <t>Python</t> <t>documentation</t>:


  <t>Names</t> <t>listed</t> <t>in</t> <t>a</t> <t>global</t> <t>statement</t>
  <t>must</t> <t>not</t> <t>be</t> <t>defined</t> <t>as</t> <t>formal</t>
  <t>parameters</t> <t>or</t> <t>in</t> <t>a</t> <t>for</t> <t>loop</t> <t>control</t>
  <t>target</t>, <t>class</t> <t>definition</t>, <t>function</t>
  <t>definition</t>, <t>or</t> <t>import</t> <t>statement</t>.


<t>While</t> <t>formal</t> <t>parameters</t> <t>and</t> <t>class</t> <t>definition</t> <t>make</t> <t>sense</t> <t>to</t> <t>me</t>, <t>I'm</t> <t>not</t> <t>able</t> <t>to</t> <t>understand</t> <t>the</t> <t>restriction</t> <t>on</t> <t>for</t> <t>loop</t> <t>control</t> <t>target</t> <t>and</t> <t>function</t> <t>definition</t>.
"
4700614|"<t>How</t> <t>to</t> <t>put</t> <t>the</t> <t>legend</t> <t>out</t> <t>of</t> <t>the</t> <t>plot</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>series</t> <t>of</t> <t>20</t> <t>plots</t> (<t>not</t> <t>subplots</t>) <t>to</t> <t>be</t> <t>made</t> <t>in</t> <t>a</t> <t>single</t> <t>figure</t>.  <t>I</t> <t>want</t> <t>the</t> <t>legend</t> <t>to</t> <t>be</t> <t>outside</t> <t>of</t> <t>the</t> <t>box</t>.  <t>At</t> <t>the</t> <t>same</t> <t>time</t>, <t>I</t> <t>do</t> <t>not</t> <t>want</t> <t>to</t> <t>change</t> <t>the</t> <t>axes</t>, <t>as</t> <t>the</t> <t>size</t> <t>of</t> <t>the</t> <t>figure</t> <t>gets</t> <t>reduced</t>.  <t>Kindly</t> <t>help</t> <t>me</t> <t>for</t> <t>the</t> <t>following</t> <t>queries</t>:


<t>I</t> <t>want</t> <t>to</t> <t>keep</t> <t>the</t> <t>legend</t> <t>box</t> <t>outside</t> <t>the</t> <t>plot</t> <t>area</t>. (<t>I</t> <t>want</t> <t>the</t> <t>legend</t> <t>to</t> <t>be</t> <t>outside</t> <t>at</t> <t>the</t> <t>right</t> <t>side</t> <t>of</t> <t>the</t> <t>plot</t> <t>area</t>).
<t>Is</t> <t>there</t> <t>anyway</t> <t>that</t> <t>I</t> <t>reduce</t> <t>the</t> <t>font</t> <t>size</t> <t>of</t> <t>the</t> <t>text</t> <t>inside</t> <t>the</t> <t>legend</t> <t>box</t>, <t>so</t> <t>that</t> <t>the</t> <t>size</t> <t>of</t> <t>the</t> <t>legend</t> <t>box</t> <t>will</t> <t>be</t> <t>small</t>.

"
4706499|"<t>How</t> <t>do</t> <t>you</t> <t>append</t> <t>to</t> <t>a</t> <t>file</t>?"|"<t>How</t> <t>do</t> <t>you</t> <t>append</t> <t>to</t> <t>the</t> <t>file</t> <t>instead</t> <t>of</t> <t>overwriting</t> <t>it</t>? <t>Is</t> <t>there</t> <t>a</t> <t>special</t> <t>function</t> <t>that</t> <t>appends</t> <t>to</t> <t>the</t> <t>file</t>?
"
4750806|"<t>How</t> <t>do</t> <t>I</t> <t>install</t> <t>pip</t> <t>on</t> <t>Windows</t>?"|"<code><c>pip</c></code> <t>is</t> <t>a</t> <t>replacement</t> <t>for</t> <code><c>easy_install</c></code>. <t>But</t> <t>should</t> <t>I</t> <t>install</t> <code><c>pip</c></code> <t>using</t> <code><c>easy_install</c></code> <t>on</t> <t>Windows</t>?  <t>Is</t> <t>there</t> <t>a</t> <t>better</t> <t>way</t>?
"
4760215|"<t>Running</t> <t>shell</t> <t>command</t> <t>from</t> <t>Python</t> <t>and</t> <t>capturing</t> <t>the</t> <t>output</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>write</t> <t>a</t> <t>function</t> <t>that</t> <t>will</t> <t>execute</t> <t>a</t> <t>shell</t> <t>command</t> <t>and</t> <t>return</t> <t>its</t> <t>output</t> <t>as</t> <t>a</t> <t>string</t>, <t>no</t> <t>matter</t>, <t>is</t> <t>it</t> <t>an</t> <t>error</t> <t>or</t> <t>success</t> <t>message</t>. <t>I</t> <t>just</t> <t>want</t> <t>to</t> <t>get</t> <t>the</t> <t>same</t> <t>result</t> <t>that</t> <t>I</t> <t>would</t> <t>have</t> <t>gotten</t> <t>with</t> <t>the</t> <t>command</t> <t>line</t>.

<t>What</t> <t>would</t> <t>be</t> <t>a</t> <t>code</t> <t>example</t> <t>that</t> <t>would</t> <t>do</t> <t>such</t> <t>a</t> <t>thing</t>?

<t>For</t> <t>example</t>:

<code><c>def</c> <c>run_command(</c><c>cmd</c>):
    # <c>?</c><c>?</c><c>?</c><c>?</c><c>?</c><c>?</c>

<c>print</c> <c>run_command(</c>'<c>mysqladmin</c> <c>create</c> <c>test</c> <c>-</c><c>uroot</c> <c>-</c><c>pmysqladmin12</c>')
# <c>Should</c> <c>output</c> <c>something</c> <c>like</c>:
# <c>mysqladmin</c>: <c>CREATE</c> <c>DATABASE</c> <c>failed</c>; <c>error</c>: '<c>Can</c>'<c>t</c> <c>create</c> <c>database</c> '<c>test</c>'; <c>database</c> <c>exists</c>'
</code>
"
4783810|"<t>Install</t> <t>tkinter</t> <t>for</t> <t>Python</t>"|"<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>import</t> <t>Tkinter</t>. <t>However</t>, <t>I</t> <t>get</t> <t>an</t> <t>error</t> <t>stating</t> <t>that</t> <t>Tkinter</t> <t>has</t> <t>not</t> <t>been</t> <t>installed</t>:


  <t>ImportError</t>: <t>No</t> <t>module</t> <t>named</t> <t>_tkinter</t>, <t>please</t> <t>install</t> <t>the</t> <t>python-tk</t> <t>package</t>


<t>I</t> <t>could</t> <t>probably</t> <t>install</t> <t>it</t> <t>using</t> <t>synaptic</t> <t>manager</t> (<t>can</t> <t>I</t>?), <t>however</t>, <t>I</t> <t>would</t> <t>have</t> <t>to</t> <t>install</t> <t>it</t> <t>on</t> <t>every</t> <t>machine</t> <t>I</t> <t>program</t> <t>on</t>. <t>Would</t> <t>it</t> <t>be</t> <t>possible</t> <t>to</t> <t>add</t> <t>the</t> <t>Tkinter</t> <t>library</t> <t>into</t> <t>my</t> <t>workspace</t> <t>and</t> <t>reference</t> <t>it</t> <t>from</t> <t>there</t>?
"
4843158|"<t>Check</t> <t>if</t> <t>a</t> <t>Python</t> <t>list</t> <t>item</t> <t>contains</t> <t>a</t> <t>string</t> <t>inside</t> <t>another</t> <t>string</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>list</t>:

<code><c>my_list</c> <c>=</c> ['<c>abc-123</c>', '<c>def-456</c>', '<c>ghi-789</c>', '<c>abc-456</c>']
</code>

<t>and</t> <t>want</t> <t>to</t> <t>search</t> <t>for</t> <t>items</t> <t>that</t> <t>contain</t> <t>the</t> <t>string</t> <code>'<c>abc</c>'</code>. <t>How</t> <t>can</t> <t>I</t> <t>do</t> <t>that</t>?

<code><c>if</c> '<c>abc</c>' <c>in</c> <c>my_list</c>:
</code>

<t>would</t> <t>check</t> <t>if</t> <code>'<c>abc</c>'</code> <t>exists</t> <t>in</t> <t>the</t> <t>list</t> <t>but</t> <t>it</t> <t>is</t> <t>a</t> <t>part</t> <t>of</t> <code>'<c>abc-123</c>'</code> <t>and</t> <code>'<c>abc-456</c>'</code>, <code>'<c>abc</c>'</code> <t>does</t> <t>not</t> <t>exist</t> <t>on</t> <t>its</t> <t>own</t>. <t>So</t> <t>how</t> <t>can</t> <t>I</t> <t>get</t> <t>all</t> <t>items</t> <t>that</t> <t>contain</t> <code>'<c>abc</c>'</code> ?
"
4843173|"<t>How</t> <t>to</t> <t>check</t> <t>if</t> <t>type</t> <t>of</t> <t>a</t> <t>variable</t> <t>is</t> <t>string</t>?"|"<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>check</t> <t>if</t> <t>the</t> <t>type</t> <t>of</t> <t>a</t> <t>variable</t> <t>in</t> <t>python</t> <t>is</t> <t>string..</t> <t>like</t>

<code><c>isinstance(</c><c>x</c>,<c>int</c>);
</code>

<t>for</t> <t>integer</t> <t>values</t>?
"
4906977|"<t>Access</t> <t>environment</t> <t>variables</t> <t>from</t> <t>Python</t>"|"<t>I</t> <t>set</t> <t>an</t> <t>environment</t> <t>variable</t> <t>that</t> <t>I</t> <t>want</t> <t>to</t> <t>access</t> <t>in</t> <t>my</t> <t>Python</t> <t>application</t>.  <t>How</t> <t>do</t> <t>I</t> <t>get</t> <t>this</t> <t>value</t>?
"
4915920|"<t>How</t> <t>to</t> <t>delete</t> <t>an</t> <t>item</t> <t>in</t> <t>a</t> <t>list</t> <t>if</t> <t>it</t> <t>exists</t>?"|"<t>I</t> <t>am</t> <t>getting</t> <code><c>new_tag</c></code> <t>from</t> <t>a</t> <t>form</t> <t>text</t> <t>field</t> <t>with</t> <code><c>self</c><c>.</c><c>response</c><c>.</c><c>get(</c>""<c>new_tag</c>"")</code> <t>and</t> <code><c>selected_tags</c></code> <t>from</t> <t>checkbox</t> <t>fields</t> <t>with</t> 

<code><c>self</c><c>.</c><c>response</c><c>.</c><c>get_all(</c>""<c>selected_tags</c>"")
</code>

<t>I</t> <t>combine</t> <t>them</t> <t>like</t> <t>this</t>:

<code><c>tag_string</c> <c>=</c> <c>new_tag</c>
<c>new_tag_list</c> <c>=</c> <c>f1</c><c>.</c><c>striplist(</c><c>tag_string</c><c>.</c><c>split(</c>"","") <c>+</c> <c>selected_tags</c>)
</code>

(<code><c>f1</c><c>.</c><c>striplist</c></code> <t>is</t> <t>a</t> <t>function</t> <t>that</t> <t>strips</t> <t>white</t> <t>spaces</t> <t>inside</t> <t>the</t> <t>strings</t> <t>in</t> <t>the</t> <t>list</t>.)

<t>But</t> <t>in</t> <t>the</t> <t>case</t> <t>that</t> <code><c>tag_list</c></code> <t>is</t> <t>empty</t> (<t>no</t> <t>new</t> <t>tags</t> <t>are</t> <t>entered</t>) <t>but</t> <t>there</t> <t>are</t> <t>some</t> <code><c>selected_tags</c></code>, <code><c>new_tag_list</c></code> <t>contains</t> <t>an</t> <t>empty</t> <t>string</t> <code>"" ""</code>.

<t>For</t> <t>example</t>, <t>from</t> <code><c>logging</c><c>.</c><c>info</c></code>:

<code><c>new_tag</c>
<c>selected_tags</c>[<c>u</c>'<c>Hello</c>', <c>u</c>'<c>Cool</c>', <c>u</c>'<c>Glam</c>']
<c>new_tag_list</c>[<c>u</c>'', <c>u</c>'<c>Hello</c>', <c>u</c>'<c>Cool</c>', <c>u</c>'<c>Glam</c>']
</code>

<t>How</t> <t>do</t> <t>I</t> <t>get</t> <t>rid</t> <t>of</t> <t>the</t> <t>empty</t> <t>string</t>?

<t>If</t> <t>there</t> <t>is</t> <t>an</t> <t>empty</t> <t>string</t> <t>in</t> <t>the</t> <t>list</t>:

<code><c>&gt;&gt;&gt;</c> <c>s</c> <c>=</c> [<c>u</c>'', <c>u</c>'<c>Hello</c>', <c>u</c>'<c>Cool</c>', <c>u</c>'<c>Glam</c>']
<c>&gt;&gt;&gt;</c> <c>i</c> <c>=</c> <c>s</c><c>.</c><c>index(</c>"""")
<c>&gt;&gt;&gt;</c> <c>del</c> <c>s</c>[<c>i</c>]
<c>&gt;&gt;&gt;</c> <c>s</c>
[<c>u</c>'<c>Hello</c>', <c>u</c>'<c>Cool</c>', <c>u</c>'<c>Glam</c>']
</code>

<t>But</t> <t>if</t> <t>there</t> <t>is</t> <t>no</t> <t>empty</t> <t>string</t>:

<code><c>&gt;&gt;&gt;</c> <c>s</c> <c>=</c> [<c>u</c>'<c>Hello</c>', <c>u</c>'<c>Cool</c>', <c>u</c>'<c>Glam</c>']
<c>&gt;&gt;&gt;</c> <c>if</c> <c>s</c><c>.</c><c>index(</c>""""):
        <c>i</c> <c>=</c> <c>s</c><c>.</c><c>index(</c>"""")
        <c>del</c> <c>s</c>[<c>i</c>]
    <c>else</c>:
        <c>print</c> ""<c>new_tag_list</c> <c>has</c> <c>no</c> <c>empty</c> <c>string</c>""
</code>

<t>But</t> <t>this</t> <t>gives</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>&lt;</c><c>pyshell</c>#<c>30</c><c>&gt;</c>"", <c>line</c> <c>1</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>if</c> <c>new_tag_list</c><c>.</c><c>index(</c>""""):
        <c>ValueError</c>: <c>list</c><c>.</c><c>index(</c><c>x</c>): <c>x</c> <c>not</c> <c>in</c> <c>list</c>
</code>

<t>Why</t> <t>does</t> <t>this</t> <t>happen</t>, <t>and</t> <t>how</t> <t>do</t> <t>I</t> <t>work</t> <t>around</t> <t>it</t>?
"
4934806|"<t>How</t> <t>can</t> <t>I</t> <t>find</t> <t>script's</t> <t>directory</t> <t>with</t> <t>Python</t>?"|"<t>Consider</t> <t>the</t> <t>following</t> <t>Python</t> <t>code</t>:

<code><c>import</c> <c>os</c>
<c>print</c> <c>os</c><c>.</c><c>getcwd(</c>)
</code>

<t>I</t> <t>use</t> <code><c>os</c><c>.</c><c>getcwd(</c>)</code> <t>to</t> <t>get</t> <t>the</t> <t>script</t> <t>file's</t> <t>directory</t> <t>location</t>. <t>When</t> <t>I</t> <t>run</t> <t>the</t> <t>script</t> <t>from</t> <t>the</t> <t>command</t> <t>line</t> <t>it</t> <t>gives</t> <t>me</t> <t>the</t> <t>correct</t> <t>path</t> <t>whereas</t> <t>when</t> <t>I</t> <t>run</t> <t>it</t> <t>from</t> <t>a</t> <t>script</t> <t>run</t> <t>by</t> <t>code</t> <t>in</t> <t>a</t> <t>Django</t> <t>view</t> <t>it</t> <t>prints</t> <code><c>/</c></code>.

<t>How</t> <t>can</t> <t>I</t> <t>get</t> <t>the</t> <t>path</t> <t>to</t> <t>the</t> <t>script</t> <t>from</t> <t>within</t> <t>a</t> <t>script</t> <t>run</t> <t>by</t> <t>a</t> <t>Django</t> <t>view</t>?

<t>UPDATE</t>:
<t>Summing</t> <t>up</t> <t>the</t> <t>answers</t> <t>thus</t> <t>far</t> <t>-</t> <code><c>os</c><c>.</c><c>getcwd(</c>)</code> <t>and</t> <code><c>os</c><c>.</c><c>path</c><c>.</c><c>abspath(</c>)</code> <t>both</t> <t>give</t> <t>the</t> <t>current</t> <t>working</t> <t>directory</t> <t>which</t> <t>may</t> <t>or</t> <t>may</t> <t>not</t> <t>be</t> <t>the</t> <t>directory</t> <t>where</t> <t>the</t> <t>script</t> <t>resides</t>. <t>In</t> <t>my</t> <t>web</t> <t>host</t> <t>setup</t> <code><c><</c><c>code</c><c>></c><c>__file__</c></code><t></code></t> <t>gives</t> <t>only</t> <t>the</t> <t>filename</t> <t>without</t> <t>the</t> <t>path</t>.

<t>Isn't</t> <t>there</t> <t>any</t> <t>way</t> <t>in</t> <t>Python</t> <t>to</t> (<t>always</t>) <t>be</t> <t>able</t> <t>to</t> <t>receive</t> <t>the</t> <t>path</t> <t>in</t> <t>which</t> <t>the</t> <t>script</t> <t>resides</t>?
"
4940032|"<t>Search</t> <t>for</t> <t>string</t> <t>in</t> <t>txt</t> <t>file</t> <t>Python</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>check</t> <t>if</t> <t>a</t> <t>string</t> <t>is</t> <t>in</t> <t>a</t> <t>text</t> <t>file</t>. <t>If</t> <t>it</t> <t>is</t>, <t>do</t> <t>X</t>. <t>If</t> <t>it's</t> <t>not</t>, <t>do</t> <t>Y</t>. <t>However</t>, <t>this</t> <t>code</t> <t>always</t> <t>returns</t> <code><c>True</c></code> <t>for</t> <t>some</t> <t>reason</t>. <t>Can</t> <t>anyone</t> <t>see</t> <t>what</t> <t>is</t> <t>wrong</t>?

<code><c>def</c> <c>check(</c>):
    <c>datafile</c> <c>=</c> <c>file(</c>'<c>example</c><c>.</c><c>txt</c>')
    <c>found</c> <c>=</c> <c>False</c>
    <c>for</c> <c>line</c> <c>in</c> <c>datafile</c>:
        <c>if</c> <c>blabla</c> <c>in</c> <c>line</c>:
            <c>found</c> <c>=</c> <c>True</c>
            <c>break</c>

<c>check(</c>)
<c>if</c> <c>True</c>:
    <c>print</c> ""<c>true</c>""
<c>else</c>:
    <c>print</c> ""<c>false</c>""
</code>
"
4960208|"<t>Python</t> <t>2.7</t> <t>getting</t> <t>user</t> <t>input</t> <t>and</t> <t>manipulating</t> <t>as</t> <t>string</t> <t>without</t> <t>quotations</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>get</t> <t>a</t> <t>string</t> <t>from</t> <t>a</t> <t>user</t>, <t>and</t> <t>then</t> <t>to</t> <t>manipulate</t> <t>it</t>.

<code><c>testVar</c> <c>=</c> <c>input(</c>""<c>Ask</c> <c>user</c> <c>for</c> <c>something</c><c>.</c>"")
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>for</t> <t>testVar</t> <t>to</t> <t>be</t> <t>a</t> <t>string</t> <t>without</t> <t>me</t> <t>having</t> <t>the</t> <t>user</t> <t>type</t> <t>his</t> <t>response</t> <t>in</t> <t>quotes</t>?  <t>i.e.</t> ""<t>Hello</t>"" <t>vs</t>. <t>Hello</t>

<t>If</t> <t>the</t> <t>user</t> <t>types</t> <t>in</t> <t>Hello</t>, <t>I</t> <t>get</t> <t>the</t> <t>following</t> <t>error</t>:

<t>NameError</t>: <t>name</t> '<t>Hello</t>' <t>is</t> <t>not</t> <t>defined</t>
"
4978787|"<t>How</t> <t>to</t> <t>split</t> <t>a</t> <t>string</t> <t>into</t> <t>array</t> <t>of</t> <t>characters</t> <t>with</t> <t>Python</t>?"|"<t>I've</t> <t>tried</t> <t>to</t> <t>look</t> <t>around</t> <t>the</t> <t>web</t> <t>for</t> <t>answers</t> <t>to</t> <t>splitting</t> <t>a</t> <t>string</t> <t>into</t> <t>an</t> <t>array</t> <t>of</t> <t>characters</t> <t>but</t> <t>I</t> <t>can't</t> <t>seem</t> <t>to</t> <t>find</t> <t>a</t> <t>simple</t> <t>method</t>

<code><c>str</c><c>.</c><c>split(</c><c>//)</c></code> <t>does</t> <t>not</t> <t>seem</t> <t>to</t> <t>work</t> <t>like</t> <t>Ruby</t> <t>does</t>. <t>Is</t> <t>there</t> <t>a</t> <t>simple</t> <t>way</t> <t>of</t> <t>doing</t> <t>this</t> <t>without</t> <t>looping</t>?
"
4990718|"<t>Python</t>: <t>about</t> <t>catching</t> <t>ANY</t> <t>exception</t>"|"<t>How</t> <t>can</t> <t>I</t> <t>write</t> <t>a</t> <code><c>try</c></code><t>/</t><code><c>except</c></code> <t>block</t> <t>that</t> <t>catches</t> <t>all</t> <t>exceptions</t>?
"
4998629|"<t>Python</t>: <t>Split</t> <t>string</t> <t>with</t> <t>multiple</t> <t>delimiters</t>"|"<t>I</t> <t>found</t> <t>some</t> <t>answers</t> <t>online</t>, <t>but</t> <t>I</t> <t>have</t> <t>no</t> <t>experience</t> <t>with</t> <t>regular</t> <t>expressions</t>, <t>which</t> <t>I</t> <t>believe</t> <t>is</t> <t>what</t> <t>is</t> <t>needed</t> <t>here</t>.

<t>I</t> <t>have</t> <t>a</t> <t>string</t> <t>that</t> <t>needs</t> <t>to</t> <t>be</t> <t>split</t> <t>by</t> <t>either</t> <t>a</t> '<t>;</t>' <t>or</t> ', '
<t>That</t> <t>is</t>, <t>it</t> <t>has</t> <t>to</t> <t>be</t> <t>either</t> <t>a</t> <t>semicolon</t> <t>or</t> <t>a</t> <t>comma</t> <t>followed</t> <t>by</t> <t>a</t> <t>space</t>. <t>Individual</t> <t>commas</t> <t>without</t> <t>trailing</t> <t>spaces</t> <t>should</t> <t>be</t> <t>left</t> <t>untouched</t>

<t>Example</t> <t>string</t>:

<code>""<c>b-staged</c> <c>divinylsiloxane-bis-benzocyclobutene</c> [<c>124221-30-3</c>], <c>mesitylene</c> [<c>000108-67-8</c>]; <c>polymerized</c> <c>1</c>,<c>2-dihydro-2</c>,<c>2</c>,<c>4</c><c>-</c> <c>trimethyl</c> <c>quinoline</c> [<c>026780-96-1</c>]""
</code>

<t>should</t> <t>be</t> <t>split</t> <t>into</t> <t>a</t> <t>list</t> <t>containing</t> <t>the</t> <t>following</t>:

<code>('<c>b-staged</c> <c>divinylsiloxane-bis-benzocyclobutene</c> [<c>124221-30-3</c>]' , '<c>mesitylene</c> [<c>000108-67-8</c>]', '<c>polymerized</c> <c>1</c>,<c>2-dihydro-2</c>,<c>2</c>,<c>4</c><c>-</c> <c>trimethyl</c> <c>quinoline</c> [<c>026780-96-1</c>]') 
</code>
"
5074225|"<t>Python</t> <t>unexpected</t> <t>EOF</t> <t>while</t> <t>parsing</t>"|"<t>Here's</t> <t>my</t> <t>python</t> <t>code</t>. <t>Could</t> <t>someone</t> <t>show</t> <t>me</t> <t>what's</t> <t>wrong</t> <t>with</t> <t>it</t>.

<code><c>while</c> <c>1</c>:
<c>date</c><c>=</c><c>input(</c>""<c>Example</c>: <c>March</c> <c>21</c> <c>|</c> <c>What</c> <c>is</c> <c>the</c> <c>date</c><c>?</c> "")
<c>if</c> <c>date</c><c>==</c>""<c>June</c> <c>21</c>"":
    <c>sd</c><c>=</c>""<c>23.5</c><c>°</c> <c>North</c> <c>Latitude</c>""
<c>if</c> <c>date</c><c>==</c>""<c>March</c> <c>21</c>"" <c>|</c> <c>date</c><c>==</c>""<c>September</c> <c>21</c>"":
    <c>sd</c><c>=</c>""<c>0</c><c>°</c> <c>Latitude</c>""
<c>if</c> <c>date</c><c>==</c>""<c>December</c> <c>21</c>"":
    <c>sd</c><c>=</c>""<c>23.5</c><c>°</c> <c>South</c> <c>Latitude</c>""
<c>if</c> <c>sd</c>:
    <c>print</c> <c>sd</c>
</code>

<t>And Here's</t> <t>what</t> <t>happens</t>:

<code><c>&gt;&gt;&gt;</c> 
<c>Example</c>: <c>March</c> <c>21</c> <c>|</c> <c>What</c> <c>is</c> <c>the</c> <c>date</c><c>?</c> 
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>C:\Users\Daniel\Desktop\Solar</c> <c>Declination</c> <c>Calculater</c><c>.</c><c>py</c>"", <c>line</c> <c>2</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>date</c><c>=</c><c>input(</c>""<c>Example</c>: <c>March</c> <c>21</c> <c>|</c> <c>What</c> <c>is</c> <c>the</c> <c>date</c><c>?</c> "")
  <c>File</c> ""<c>&lt;</c><c>string</c><c>&gt;</c>"", <c>line</c> <c>0</c>

   <c>^</c>
<c>SyntaxError</c>: <c>unexpected</c> <c>EOF</c> <c>while</c> <c>parsing</c>
<c>&gt;&gt;&gt;</c> 
</code>
"
5082452|"<t>Python</t> <t>string</t> <t>formatting</t>: <t>%</t> <t>vs</t>. .<t>format</t>"|"<t>Python</t> <t>2.6</t> <t>introduced</t> <t>the</t> <code><c>str</c><c>.</c><c>format(</c>)</code> <t>method</t> <t>with</t> <t>a</t> <t>slightly</t> <t>different</t> <t>syntax</t> <t>from</t> <t>the</t> <t>existing</t> <code><c>%</c></code> <t>operator</t>. <t>Which</t> <t>is</t> <t>better</t> <t>and</t> <t>for</t> <t>what</t> <t>situations</t>?


<t>The</t> <t>following</t> <t>uses</t> <t>each</t> <t>method</t> <t>and</t> <t>has</t> <t>the</t> <t>same</t> <t>outcome</t>, <t>so</t> <t>what</t> <t>is</t> <t>the</t> <t>difference</t>?

<code>#<c>!</c><c>/usr/bin/python
sub1</c> <c>=</c> ""<c>python</c> <c>string</c><c>!</c>""
<c>sub2</c> <c>=</c> ""<c>an</c> <c>arg</c>""

<c>a</c> <c>=</c> ""<c>i</c> <c>am</c> <c>a</c> <c>%</c><c>s</c>"" <c>%</c> <c>sub1</c>
<c>b</c> <c>=</c> ""<c>i</c> <c>am</c> <c>a</c> {<c>0</c>}""<c>.</c><c>format(</c><c>sub1</c>)

<c>c</c> <c>=</c> ""<c>with</c> <c>%</c>(<c>kwarg</c>)<c>s</c><c>!</c>"" <c>%</c> {'<c>kwarg</c>':<c>sub2</c>}
<c>d</c> <c>=</c> ""<c>with</c> {<c>kwarg</c>}<c>!</c>""<c>.</c><c>format(</c><c>kwarg</c><c>=</c><c>sub2</c>)

<c>print</c> <c>a</c>    # ""<c>i</c> <c>am</c> <c>a</c> <c>python</c> <c>string</c><c>!</c>""
<c>print</c> <c>b</c>    # ""<c>i</c> <c>am</c> <c>a</c> <c>python</c> <c>string</c><c>!</c>""
<c>print</c> <c>c</c>    # ""<c>with</c> <c>an</c> <c>arg</c><c>!</c>""
<c>print</c> <c>d</c>    # ""<c>with</c> <c>an</c> <c>arg</c><c>!</c>""
</code>
<t>Furthermore</t> <t>when</t> <t>does</t> <t>string</t> <t>formatting</t> <t>occur</t> <t>in</t> <t>Python</t>? <t>For</t> <t>example</t>, <t>if</t> <t>my</t> <t>logging</t> <t>level</t> <t>is</t> <t>set</t> <t>to</t> <t>HIGH</t> <t>will</t> <t>I</t> <t>still</t> <t>take</t> <t>a</t> <t>hit</t> <t>for</t> <t>performing</t> <t>the</t> <t>following</t> <code><c>%</c></code> <t>operation</t>? <t>And</t> <t>if</t> <t>so</t>, <t>is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>avoid</t> <t>this</t>?

<code><c>log</c><c>.</c><c>debug(</c>""<c>some</c> <c>debug</c> <c>info</c>: <c>%</c><c>s</c>"" <c>%</c> <c>some_info</c>)
</code>

"
5137497|"<t>Find</t> <t>current</t> <t>directory</t> <t>and</t> <t>file's</t> <t>directory</t>"|"<t>In</t> <t>Python</t>, <t>what</t> <t>commands</t> <t>can</t> <t>I</t> <t>use</t> <t>to</t> <t>find</t>:


<t>the</t> <t>current</t> <t>directory</t> (<t>where</t> <t>I</t> <t>was</t> <t>in</t> <t>the</t> <t>terminal</t> <t>when</t> <t>I</t> <t>ran</t> <t>the</t> <t>Python</t> <t>script</t>), <t>and</t>
<t>where</t> <t>the</t> <t>file</t> <t>I</t> <t>am</t> <t>executing</t> <t>is</t>?

"
5142418|"<t>What</t> <t>is</t> <t>the</t> <t>use</t> <t>of</t> ""<t>assert</t>"" <t>in</t> <t>Python</t>?"|"<t>I</t> <t>have</t> <t>been</t> <t>reading</t> <t>some</t> <t>source</t> <t>code</t> <t>and</t> <t>in</t> <t>several</t> <t>places</t> <t>I</t> <t>have</t> <t>seen</t> <t>the</t> <t>usage</t> <t>of</t> <code><c>assert</c></code>. 

<t>What</t> <t>does</t> <t>it</t> <t>mean</t> <t>exactly</t>? <t>What</t> <t>is</t> <t>its</t> <t>usage</t>?
"
5178292|"<t>pip</t> <t>install</t> <t>mysql-python</t> <t>fails</t> <t>with</t> <t>EnvironmentError</t>: <t>mysql_config</t> <t>not</t> <t>found</t>"|"<t>This</t> <t>is</t> <t>the</t> <t>error</t> <t>I</t> <t>get</t>

<code>(<c>mysite</c>)<c>zjm1126</c><c>@</c><c>zjm1126-G41MT-S2</c>:<c>~</c><c>/zjm_test/mysite$</c> <c>pip</c> <c>install</c> <c>mysql-python</c>
<c>Downloading</c><c>/unpacking</c> <c>mysql-python</c>
  <c>Downloading</c> <c>MySQL-python-1.2.3</c><c>.</c><c>tar</c><c>.</c><c>gz</c> (<c>70</c><c>Kb</c>): <c>70</c><c>Kb</c> <c>downloaded</c>
  <c>Running</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>for</c> <c>package</c> <c>mysql-python</c>
    <c>sh</c>: <c>mysql_config</c>: <c>not</c> <c>found</c>
    <c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
      <c>File</c> ""<c>&lt;</c><c>string</c><c>&gt;</c>"", <c>line</c> <c>14</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
      <c>File</c> ""<c>/home/zjm1126/zjm_test/mysite/build/mysql-python/setup.py</c>"", <c>line</c> <c>15</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
        <c>metadata</c>, <c>options</c> <c>=</c> <c>get_config(</c>)
      <c>File</c> ""<c>setup_posix</c><c>.</c><c>py</c>"", <c>line</c> <c>43</c>, <c>in</c> <c>get_config</c>
        <c>libs</c> <c>=</c> <c>mysql_config(</c>""<c>libs_r</c>"")
      <c>File</c> ""<c>setup_posix</c><c>.</c><c>py</c>"", <c>line</c> <c>24</c>, <c>in</c> <c>mysql_config</c>
        <c>raise</c> <c>EnvironmentError(</c>""<c>%</c><c>s</c> <c>not</c> <c>found</c>"" <c>%</c> (<c>mysql_config</c><c>.</c><c>path</c>,))
    <c>EnvironmentError</c>: <c>mysql_config</c> <c>not</c> <c>found</c>
    <c>Complete</c> <c>output</c> <c>from</c> <c>command</c> <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c>:
    <c>sh</c>: <c>mysql_config</c>: <c>not</c> <c>found</c>

<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):

  <c>File</c> ""<c>&lt;</c><c>string</c><c>&gt;</c>"", <c>line</c> <c>14</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>

  <c>File</c> ""<c>/home/zjm1126/zjm_test/mysite/build/mysql-python/setup.py</c>"", <c>line</c> <c>15</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>

    <c>metadata</c>, <c>options</c> <c>=</c> <c>get_config(</c>)

  <c>File</c> ""<c>setup_posix</c><c>.</c><c>py</c>"", <c>line</c> <c>43</c>, <c>in</c> <c>get_config</c>

    <c>libs</c> <c>=</c> <c>mysql_config(</c>""<c>libs_r</c>"")

  <c>File</c> ""<c>setup_posix</c><c>.</c><c>py</c>"", <c>line</c> <c>24</c>, <c>in</c> <c>mysql_config</c>

    <c>raise</c> <c>EnvironmentError(</c>""<c>%</c><c>s</c> <c>not</c> <c>found</c>"" <c>%</c> (<c>mysql_config</c><c>.</c><c>path</c>,))

<c>EnvironmentError</c>: <c>mysql_config</c> <c>not</c> <c>found</c>

<c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c>
<c>Command</c> <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>failed</c> <c>with</c> <c>error</c> <c>code</c> <c>1</c>
<c>Storing</c> <c>complete</c> <c>log</c> <c>in</c> <c>/home/zjm1126/.pip/pip.log
(mysite)zjm1126@zjm1126-G41MT-S2:~/zjm_test/mysite$</c> <c>pip</c> <c>install</c> <c>mysql-python</c>
<c>Downloading</c><c>/unpacking</c> <c>mysql-python</c>
  <c>Running</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>for</c> <c>package</c> <c>mysql-python</c>
    <c>sh</c>: <c>mysql_config</c>: <c>not</c> <c>found</c>
    <c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
      <c>File</c> ""<c>&lt;</c><c>string</c><c>&gt;</c>"", <c>line</c> <c>14</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
      <c>File</c> ""<c>/home/zjm1126/zjm_test/mysite/build/mysql-python/setup.py</c>"", <c>line</c> <c>15</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
        <c>metadata</c>, <c>options</c> <c>=</c> <c>get_config(</c>)
      <c>File</c> ""<c>setup_posix</c><c>.</c><c>py</c>"", <c>line</c> <c>43</c>, <c>in</c> <c>get_config</c>
        <c>libs</c> <c>=</c> <c>mysql_config(</c>""<c>libs_r</c>"")
      <c>File</c> ""<c>setup_posix</c><c>.</c><c>py</c>"", <c>line</c> <c>24</c>, <c>in</c> <c>mysql_config</c>
        <c>raise</c> <c>EnvironmentError(</c>""<c>%</c><c>s</c> <c>not</c> <c>found</c>"" <c>%</c> (<c>mysql_config</c><c>.</c><c>path</c>,))
    <c>EnvironmentError</c>: <c>mysql_config</c> <c>not</c> <c>found</c>
    <c>Complete</c> <c>output</c> <c>from</c> <c>command</c> <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c>:
    <c>sh</c>: <c>mysql_config</c>: <c>not</c> <c>found</c>

<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):

  <c>File</c> ""<c>&lt;</c><c>string</c><c>&gt;</c>"", <c>line</c> <c>14</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>

  <c>File</c> ""<c>/home/zjm1126/zjm_test/mysite/build/mysql-python/setup.py</c>"", <c>line</c> <c>15</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>

    <c>metadata</c>, <c>options</c> <c>=</c> <c>get_config(</c>)

  <c>File</c> ""<c>setup_posix</c><c>.</c><c>py</c>"", <c>line</c> <c>43</c>, <c>in</c> <c>get_config</c>

    <c>libs</c> <c>=</c> <c>mysql_config(</c>""<c>libs_r</c>"")

  <c>File</c> ""<c>setup_posix</c><c>.</c><c>py</c>"", <c>line</c> <c>24</c>, <c>in</c> <c>mysql_config</c>

    <c>raise</c> <c>EnvironmentError(</c>""<c>%</c><c>s</c> <c>not</c> <c>found</c>"" <c>%</c> (<c>mysql_config</c><c>.</c><c>path</c>,))

<c>EnvironmentError</c>: <c>mysql_config</c> <c>not</c> <c>found</c>

<c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c>
<c>Command</c> <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>failed</c> <c>with</c> <c>error</c> <c>code</c> <c>1</c>
<c>Storing</c> <c>complete</c> <c>log</c> <c>in</c> <c>/home/zjm1126/.pip/pip.log
</c></code>

<t>What</t> <t>can</t> <t>I</t> <t>do</t> <t>to</t> <t>resolve</t> <t>this</t>?
"
5188792|"<t>How</t> <t>to</t> <t>check</t> <t>a</t> <t>string</t> <t>for</t> <t>specific</t> <t>characters</t>?"|"<t>How</t> <t>can</t> <t>I</t> <t>check</t> <t>if</t> <t>a</t> <t>string</t> <t>value</t> <t>has</t> <t>exact</t> <t>characters</t> <t>in</t> <t>it</t> <t>using</t> <t>Python2</t>?
<t>Specifically</t>, <t>I</t> <t>am</t> <t>looking</t> <t>to</t> <t>detect</t> <t>if</t> <t>it</t> <t>has</t> <t>dollar</t> <t>signs</t> (""<t>$</t>""), <t>commas</t> ("",""), <t>and</t> <t>numbers</t>.
"
5214578|"<t>Python Print String To Text</t> <t>File</t>"|"<t>I'm</t> <t>using</t> <t>Python</t> <t>to</t> <t>open</t> <t>a</t> <t>text</t> <t>document</t>:

<code><c>text_file</c> <c>=</c> <c>open(</c>""<c>Output</c><c>.</c><c>txt</c>"", ""<c>w</c>"")

<c>text_file</c><c>.</c><c>write(</c>""<c>Purchase</c> <c>Amount</c>: "" '<c>TotalAmount</c>')

<c>text_file</c><c>.</c><c>close(</c>)
</code>

<t>I</t> <t>want</t> <t>to</t> <t>enter</t> <t>the</t> <t>string</t> <t>called</t> ""<t>TotalAmount</t>"" <t>into</t> <t>the</t> <t>text</t> <t>document</t>. <t>Can</t> <t>someone</t> <t>please</t> <t>let</t> <t>me</t> <t>know</t> <t>how</t> <t>to</t> <t>do</t> <t>this</t>?
"
5226311|"<t>Installing</t> <t>specific</t> <t>package</t> <t>versions</t> <t>with</t> <t>pip</t>"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>install</t> <t>version</t> <t>1.2.2</t> <t>of</t> <t>the</t> <t>MySQL_python</t> <t>adaptor</t>, <t>using</t> <t>a</t> <t>fresh</t> <t>virtualenv</t> <t>created</t> <t>with</t> <t>the</t> <code><c>-</c><c>-</c><c>no-site-packages</c></code> <t>option</t>. <t>The</t> <t>current</t> <t>version</t> <t>shown</t> <t>in</t> <t>PyPi</t> <t>is</t> <t>1.2.3.</t> <t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>install</t> <t>the</t> <t>older</t> <t>version</t>? <t>I</t> <t>found</t> <t>an</t> <t>article</t> <t>stating</t> <t>that</t> <t>this</t> <t>should</t> <t>do</t> <t>it</t>:

<code><c>pip</c> <c>install</c> <c>MySQL_python</c><c>==</c><c>1.2.2</c>
</code>

<t>When</t> <t>installed</t>, <t>however</t>, <t>it</t> <t>still</t> <t>shows</t> <t>MySQL_python-1.2.3-py2.6.egg-info</t> <t>in</t> <t>the</t> <t>site</t> <t>packages</t>. <t>Is</t> <t>this</t> <t>a</t> <t>problem</t> <t>specific</t> <t>to</t> <t>this</t> <t>package</t>, <t>or</t> <t>am</t> <t>I</t> <t>doing</t> <t>something</t> <t>wrong</t>?
"
5319922|"Python - <t>Check If Word Is In A</t> <t>String</t>"|"<t>I'm</t> <t>working</t> <t>with</t> <t>Python</t> <t>v2</t>, <t>and</t> <t>I'm</t> <t>trying</t> <t>to</t> <t>find</t> <t>out</t> <t>if</t> <t>you</t> <t>can</t> <t>tell</t> <t>if</t> <t>a</t> <t>word</t> <t>is</t> <t>in</t> <t>a</t> <t>string</t>.

<t>I</t> <t>have</t> <t>found</t> <t>some</t> <t>information</t> <t>about</t> <t>identifying</t> <t>if</t> <t>the</t> <t>word</t> <t>is</t> <t>in</t> <t>the</t> <t>string</t> <t>-</t> <t>using</t> .<t>find</t>, <t>but</t> <t>is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>do</t> <t>an</t> <t>IF</t> <t>statement</t>. <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>have</t> <t>something</t> <t>like</t> <t>the</t> <t>following</t>:

<code><c>if</c> <c>string</c><c>.</c><c>find(</c><c>word</c>):
    <c>print</c> '<c>success</c>'
</code>

<t>Thanks</t> <t>for</t> <t>any</t> <t>help</t>.
"
5404068|"<t>How</t> <t>to</t> <t>read</t> <t>keyboard-input</t>?"|"<t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>read</t> <t>data</t> <t>from</t> <t>the</t> <t>keyboard</t> <t>in</t> <t>python</t>

<t>I</t> <t>try</t> <t>this</t> :

<code><c>nb</c> <c>=</c> <c>input(</c>'<c>Choose</c> <c>a</c> <c>number</c>')
<c>print</c> ('<c>Number</c><c>%</c><c>s</c> <c>\n</c>' <c>%</c> (<c>nb</c>))
</code>

<t>and</t> <t>this</t> <t>one</t> :

<code><c>conv</c> <c>=</c> <c>BufferedReader</c> (<c>InputStreamReader(</c><c>System</c><c>.</c><c>inputStream</c>))
<c>nb</c> <c>=</c> <c>conv</c><c>.</c><c>readLine(</c>)
<c>print</c> ('<c>Number</c> <c>%</c><c>s</c> <c>\n</c>' <c>%</c> (<c>nb</c>))
</code>

<t>But</t> <t>nothing</t> <t>works</t>, <t>neither</t> <t>with</t> <t>eclipse</t> <t>nor</t> <t>in</t> <t>the</t> <t>terminal</t>, <t>it's</t> <t>always</t> <t>stop</t> <t>of</t> <t>the</t> <t>question</t>. <t>I</t> <t>can</t> <t>type</t> <t>a</t> <t>number</t> <t>but</t> <t>after</t> <t>nothing</t> <t>happen</t>.

<t>Do</t> <t>you</t> <t>know</t> <t>why</t>?
"
5420789|"<t>How</t> <t>to</t> <t>install</t> <t>psycopg2</t> <t>with</t> ""<t>pip</t>"" <t>on</t> <t>Python</t>?"|"<t>I'm</t> <t>using</t> <code><c>virtualenv</c></code> <t>and</t> <t>I</t> <t>need</t> <t>to</t> <t>install</t> ""<t>psycopg2</t>"".

<t>I</t> <t>have</t> <t>done</t> <t>the</t> <t>following</t>:

<code><c>pip</c> <c>install</c> <c>htt</c><c>p://pypi.python.org/packages/source/p/psycopg2/psycopg2-2.4.tar.gz#md5=24f4368e2cfdc1a2b03282ddda814160
</c></code>

<t>And</t> <t>I</t> <t>have</t> <t>the</t> <t>following</t> <t>messages</t>:

<code><c>Downloading</c><c>/unpacking</c> <c>htt</c><c>p://pypi.python.org/packages/source/p/psycopg2/psycopg2
-2.4.tar.gz#md5=24f4368e2cfdc1a2b03282ddda814160
</c>  <c>Downloading</c> <c>psycopg2-2.4</c><c>.</c><c>tar</c><c>.</c><c>gz</c> (<c>607</c><c>Kb</c>): <c>607</c><c>Kb</c> <c>downloaded</c>
  <c>Running</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>for</c> <c>package</c> <c>from</c> <c>htt</c><c>p://pypi.python.org/packages/sou
rce/p/psycopg2/psycopg2-2.4.tar.gz#md5=24f4368e2cfdc1a2b03282ddda814160
</c>    <c>Error</c>: <c>pg_config</c> <c>executable</c> <c>not</c> <c>found</c><c>.</c>

    <c>Please</c> <c>add</c> <c>the</c> <c>directory</c> <c>containing</c> <c>pg_config</c> <c>to</c> <c>the</c> <c>PATH</c>
    <c>or</c> <c>specify</c> <c>the</c> <c>full</c> <c>executable</c> <c>path</c> <c>with</c> <c>the</c> <c>option</c>:

        <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>build_ext</c> <c>-</c><c>-</c><c>pg-config</c> <c>/path/to/pg_config</c> <c>build</c> ...

    <c>or</c> <c>with</c> <c>the</c> <c>pg_config</c> <c>option</c> <c>in</c> '<c>setup</c><c>.</c><c>cfg</c>'<c>.</c>
    <c>Complete</c> <c>output</c> <c>from</c> <c>command</c> <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c>:
    <c>running</c> <c>egg_info</c>

<c>creating</c> <c>pip-egg-info\psycopg2.egg-info

writing</c> <c>pip-egg-info\psycopg2.egg-info\PKG-INFO

writing</c> <c>top-level</c> <c>names</c> <c>to</c> <c>pip-egg-info\psycopg2.egg-info\top_level.txt

writing</c> <c>dependency_links</c> <c>to</c> <c>pip-egg-info\psycopg2.egg-info\dependency_links.txt

writing</c> <c>manifest</c> <c>file</c> '<c>pip-egg-info\psycopg2.egg-info\SOURCES.txt</c>'

<c>warning</c>: <c>manifest_maker</c>: <c>standard</c> <c>file</c> '<c>-</c><c>c</c>' <c>not</c> <c>found</c>

<c>Error</c>: <c>pg_config</c> <c>executable</c> <c>not</c> <c>found</c><c>.</c>



<c>Please</c> <c>add</c> <c>the</c> <c>directory</c> <c>containing</c> <c>pg_config</c> <c>to</c> <c>the</c> <c>PATH</c>

<c>or</c> <c>specify</c> <c>the</c> <c>full</c> <c>executable</c> <c>path</c> <c>with</c> <c>the</c> <c>option</c>:



    <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>build_ext</c> <c>-</c><c>-</c><c>pg-config</c> <c>/path/to/pg_config</c> <c>build</c> ...



<c>or</c> <c>with</c> <c>the</c> <c>pg_config</c> <c>option</c> <c>in</c> '<c>setup</c><c>.</c><c>cfg</c>'<c>.</c>

<c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c>
<c>Command</c> <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>failed</c> <c>with</c> <c>error</c> <c>code</c> <c>1</c>
<c>Storing</c> <c>complete</c> <c>log</c> <c>in</c> <c>C:\Documents</c> <c>and</c> <c>Settings</c><c>\anlopes\Application</c> <c>Data</c><c>\pip\p
ip.log
</c></code>

<t>My</t> <t>question</t>, <t>I</t> <t>only</t> <t>need</t> <t>to</t> <t>do</t> <t>this</t> <t>to</t> <t>get</t> <t>the</t> <t>psycopg2</t> <t>working</t>?

<code><c>python</c> <c>setup</c><c>.</c><c>py</c> <c>build_ext</c> <c>-</c><c>-</c><c>pg-config</c> <c>/path/to/pg_config</c> <c>build</c> ...
</code>
"
5424716|"<t>How</t> <t>to</t> <t>check</t> <t>if</t> <t>string</t> <t>input</t> <t>is</t> <t>a</t> <t>number</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>check</t> <t>if</t> <t>a</t> <t>user's</t> <t>string</t> <t>input</t> <t>is</t> <t>a</t> <t>number</t> (<t>e.g.</t> <code><c>-</c><c>1</c></code>, <code><c>0</c></code>, <code><c>1</c></code>, <t>etc</t>.)?

<code><c>user_input</c> <c>=</c> <c>input(</c>""<c>Enter</c> <c>something</c>:"")

<c>if</c> <c>type(</c><c>user_input</c>) <c>==</c> <c>int</c>:
    <c>print(</c>""<c>Is</c> <c>a</c> <c>number</c>"")
<c>else</c>:
    <c>print(</c>""<c>Not</c> <c>a</c> <c>number</c>"")
</code>

<t>The</t> <t>above</t> <t>won't</t> <t>work</t> <t>since</t> <code><c>input</c></code> <t>always</t> <t>returns</t> <t>a</t> <t>string</t>.
"
5458048|"<t>How</t> <t>to</t> <t>make</t> <t>a</t> <t>Python</t> <t>script</t> <t>standalone</t> <t>executable</t> <t>to</t> <t>run</t> <t>without</t> <t>ANY</t> <t>dependency</t>?"|"<t>I'm</t> <t>building</t> <t>a</t> <t>Python</t> <t>application</t> <t>and</t> <t>don't</t> <t>want</t> <t>to</t> <t>force</t> <t>my</t> <t>clients</t> <t>to</t> <t>install</t> <t>Python</t> <t>and</t> <t>modules</t>. <t>I</t> <t>also</t> <t>want</t> <t>to</t> <t>make</t> <t>my</t> <t>application</t> <t>closed-source</t>.

<t>So</t>, <t>is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>compile</t> <t>Python</t> <t>scripts</t> <t>to</t> <t>standalone</t> <t>executables</t>?
"
5471158|"<t>TypeError</t>: '<t>str</t>' <t>does</t> <t>not</t> <t>support</t> <t>the</t> <t>buffer</t> <t>interface</t>"|"<code><c>plaintext</c> <c>=</c> <c>input(</c>""<c>Please</c> <c>enter</c> <c>the</c> <c>text</c> <c>you</c> <c>want</c> <c>to</c> <c>compress</c>"")
<c>filename</c> <c>=</c> <c>input(</c>""<c>Please</c> <c>enter</c> <c>the</c> <c>desired</c> <c>filename</c>"")
<c>with</c> <c>gzip</c><c>.</c><c>open(</c><c>filename</c> <c>+</c> ""<c>.</c><c>gz</c>"", ""<c>wb</c>"") <c>as</c> <c>outfile</c>:
    <c>outfile</c><c>.</c><c>write(</c><c>plaintext</c>) 
</code>

<t>The</t> <t>above</t> <t>python</t> <t>code</t> <t>is</t> <t>giving</t> <t>me</t> <t>following</t> <t>error</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>C:/Users/Ankur</c> <c>Gupta</c><c>/Desktop/Python_works/gzip_work1.py</c>"", <c>line</c> <c>33</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>compress_string(</c>)
  <c>File</c> ""<c>C:/Users/Ankur</c> <c>Gupta</c><c>/Desktop/Python_works/gzip_work1.py</c>"", <c>line</c> <c>15</c>, <c>in</c> <c>compress_string</c>
    <c>outfile</c><c>.</c><c>write(</c><c>plaintext</c>)
  <c>File</c> ""<c>C:\Python32\lib\gzip.py</c>"", <c>line</c> <c>312</c>, <c>in</c> <c>write</c>
    <c>self</c><c>.</c><c>crc</c> <c>=</c> <c>zlib</c><c>.</c><c>crc32(</c><c>data</c>, <c>self</c><c>.</c><c>crc</c>) <c>&</c><c>amp</c>; 0xffffffff
<c>TypeError</c>: '<c>str</c>' <c>does</c> <c>not</c> <c>support</c> <c>the</c> <c>buffer</c> <c>interface</c>
</code>
"
5563089|"<t>raw_input</t> <t>function</t> <t>in</t> <t>Python</t>"|"<t>What</t> <t>is</t> <t>the</t> <code><c>raw_input</c></code> <t>function</t>? <t>Is</t> <t>it</t> <t>a</t> <t>user</t> <t>interface</t>? <t>When</t> <t>do</t> <t>we</t> <t>use</t> <t>it</t>?
"
5574702|"<t>How</t> <t>to</t> <t>print</t> <t>to</t> <t>stderr</t> <t>in</t> <t>Python</t>?"|"<t>I've</t> <t>come</t> <t>across</t> <t>at</t> <t>least</t> <t>three</t> <t>ways</t> <t>to</t> <t>print</t> <t>to</t> <t>stderr</t>:

<code> <c>import</c> <c>sys</c>

 <c>print</c> <c>&gt;&gt;</c> <c>sys</c><c>.</c><c>stderr</c>, '<c>spam</c>'

 <c>sys</c><c>.</c><c>stderr</c><c>.</c><c>write(</c>'<c>spam</c><c>\n</c>')

 <c>from</c> <c>__future__</c> <c>import</c> <c>print_function</c>
 <c>print(</c>'<c>spam</c>', <c>file</c><c>=</c><c>sys</c><c>.</c><c>stderr</c>)
</code>

<t>It</t> <t>seems</t> <t>to</t> <t>contradict</t> <t>zen</t> <t>of</t> <t>Python</t> <t>#13</t> <t>†</t>, <t>so</t> <t>what's</t> <t>the</t> <t>preferred</t> <t>way</t> <t>to</t> <t>do</t> <t>it</t>? <t>Are</t> <t>there</t> <t>any</t> <t>advantages</t> <t>or</t> <t>disadvantages</t> <t>to</t> <t>one</t> <t>way</t> <t>or</t> <t>the</t> <t>other</t>?

<t>†</t> <t>There</t> <t>should</t> <t>be</t> <t>one</t> <t>—</t> <t>and</t> <t>preferably</t> <t>only</t> <t>one</t> <t>—</t> <t>obvious</t> <t>way</t> <t>to</t> <t>do</t> <t>it</t>.
"
5584586|"<t>Find</t> <t>the</t> <t>division</t> <t>remainder</t> <t>of</t> <t>a</t> <t>number</t>"|"<t>How</t> <t>could</t> <t>I</t> <t>go</t> <t>about</t> <t>finding</t> <t>the</t> <t>division</t> <t>remainder</t> <t>of</t> <t>a</t> <t>number</t> <t>in</t> <t>Python</t>?

<t>For</t> <t>example</t>:
<t>If</t> <t>the</t> <t>number</t> <t>is</t> <t>26</t> <t>and</t> <t>divided</t> <t>number</t> <t>is</t> <t>7</t>, <t>then</t> <t>the</t> <t>division</t> <t>remainder</t> <t>is</t> <t>5</t>.
(<t>since</t> <t>7+7+7=21</t> <t>and</t> <t>26-21=5</t>.)
"
5598181|"<t>Python</t> <t>print</t> <t>on</t> <t>same</t> <t>line</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>run</t> <t>a</t> <t>script</t>, <t>which</t> <t>basicly</t> <t>shows</t> <t>things</t> <t>like</t>:

<code><c>Installing</c> <c>XXX</c>...               [<c>DONE</c>]
</code>

<t>Now</t>, <t>at</t> <t>the</t> <t>moment</t>, <t>I</t> <t>use</t> <t>print</t> <t>to</t> <t>print</t> <t>the</t> <t>whole</t> <t>line</t> <t>AFTER</t> <t>the</t> <t>function</t> <t>has</t> <t>succeeded</t>. <t>However</t>, <t>I</t> <t>now</t> <t>want</t> <t>it</t> <t>to</t> <t>print</t> ""<t>Installing</t> <t>xxx...</t>"" <t>first</t>, <t>and</t> <t>AFTER</t> <t>the</t> <t>function</t> <t>has</t> <t>run</t>, <t>to</t> <t>add</t> <t>the</t> ""<t>DONE</t>"" <t>tag;</t> <t>but</t> <t>on</t> <t>the</t> <t>same</t> <t>line</t>.

<t>Any</t> <t>ideas</t>?
"
5607551|"<t>How</t> <t>to</t> <t>urlencode</t> <t>a</t> <t>querystring</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>urlencode</t> <t>this</t> <t>string</t> <t>before</t> <t>I</t> <t>submit</t>. 

<code><c>queryString</c> <c>=</c> '<c>eventName</c><c>=</c>' <c>+</c> <c>evt</c><c>.</c><c>fields</c>[""<c>eventName</c>""] <c>+</c> '<c>&</c><c>amp</c>;' <c>+</c> '<c>eventDescription</c><c>=</c>' <c>+</c> <c>evt</c><c>.</c><c>fields</c>[""<c>eventDescription</c>""]; 
</code>
"
5653533|"<t>IndexError</t>: <t>list</t> <t>assignment</t> <t>index</t> <t>out</t> <t>of</t> <t>range</t>"|"<t>Please</t> <t>consider</t> <t>the</t> <t>following</t> <t>code</t>:

<code><c>i</c> <c>=</c> [<c>1</c>, <c>2</c>, <c>3</c>, <c>5</c>, <c>8</c>, <c>13</c>]
<c>j</c> <c>=</c> []
<c>k</c> <c>=</c> <c>0</c>

<c>for</c> <c>l</c> <c>in</c> <c>i</c>:
    <c>j</c>[<c>k</c>] <c>=</c> <c>l</c>
    <c>k</c> <c>+=</c> <c>1</c>

<c>print</c> <c>j</c>
</code>

<t>The</t> <t>output</t> (<t>Python</t> <t>2.6.6</t> <t>on</t> <t>Win</t> <t>7</t> <t>32-bit</t>) <t>is</t>:

<code><c>&gt;</c> <c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>): 
<c>&gt;</c>     <c>j</c>[<c>k</c>] <c>=</c> <c>l</c> <c>IndexError</c>: <c>list</c> <c>assignment</c> <c>index</c> <c>out</c> <c>of</c> <c>range</c>
</code>

<t>I</t> <t>guess</t> <t>it's</t> <t>something</t> <t>simple</t> <t>I</t> <t>don't</t> <t>understand</t>. <t>Can</t> <t>someone</t> <t>clear</t> <t>it</t> <t>up</t>?
"
5676646|"<t>How</t> <t>can</t> <t>I</t> <t>fill</t> <t>out</t> <t>a</t> <t>Python</t> <t>string</t> <t>with</t> <t>spaces</t>?"|"<t>I</t> <t>want</t> <t>to</t> <t>fill</t> <t>out</t> <t>a</t> <t>string</t> <t>with</t> <t>spaces</t>. <t>I</t> <t>know</t> <t>that</t> <t>the</t> <t>following</t> <t>works</t> <t>for</t> <t>zero's</t>:

<code><c>&gt;&gt;&gt;</c> <c>print</c>  ""'<c>%</c><c>0</c><c>6</c><c>d</c>'""<c>%</c><c>4</c>
'<c>00000</c><c>4</c>'
</code>

<t>But</t> <t>what</t> <t>should</t> <t>I</t> <t>do</t> <t>when</t> <t>I</t> <t>want</t> <t>this</t>?:

<code>'<c>hi</c>    '
</code>

<t>of</t> <t>course</t> <t>I</t> <t>can</t> <t>measure</t> <t>string</t> <t>length</t> <t>and</t> <t>do</t> <code><c>str</c><c>+</c>"" ""<c>*</c><c>leftover</c></code>, <t>but</t> <t>I'd</t> <t>like</t> <t>the</t> <t>shortest</t> <t>way</t>.
"
5685406|"""<t>inconsistent</t> <t>use</t> <t>of</t> <t>tabs</t> <t>and</t> <t>spaces</t> <t>in</t> <t>indentation</t>"""|"<t>I'm</t> <t>trying</t> <t>to</t> <t>create</t> <t>an</t> <t>application</t> <t>in</t> <t>Python</t> <t>3.2</t> <t>and</t> <t>i</t> <t>use</t> <t>tabs</t> <t>all</t> <t>the</t> <t>time</t> <t>for</t> <t>indentation</t>, <t>but</t> <t>even</t> <t>the</t> <t>editor</t> <t>changes</t> <t>some</t> <t>of</t> <t>them</t> <t>into</t> <t>spaces</t> <t>and</t> <t>then</t> <t>print</t> <t>out</t> ""<t>inconsistent</t> <t>use</t> <t>of</t> <t>tabs</t> <t>and</t> <t>spaces</t> <t>in</t> <t>indentation</t>"" <t>when</t> <t>i</t> <t>try</t> <t>to</t> <t>run</t> <t>the</t> <t>program</t>.

<t>How</t> <t>can</t> <t>i</t> <t>change</t> <t>the</t> <t>spaces</t> <t>into</t> <t>tabs</t>? <t>It's</t> <t>driving</t> <t>me</t> <t>crazy</t>. (<t>I'm</t> <t>a</t> <t>beginner</t> <t>in</t> <t>programming</t>). <t>I</t> <t>would</t> <t>be</t> <t>glad</t> <t>if</t> <t>i</t> <t>could</t> <t>get</t> <t>some</t> <t>overall</t> <t>tips</t> <t>on</t> <t>my</t> <t>code</t>, <t>if</t> <t>i</t> <t>have</t> <t>done</t> <t>a</t> <t>lot</t> <t>of</t> <t>misstakes</t> <t>i</t> <t>would</t> <t>be</t> <t>happy</t> <t>to</t> <t>hear</t>.

<code><c>import</c> <c>random</c>

<c>attraktioner</c> <c>=</c> [""<c>frittfall</c>"",""<c>bergodalbana</c>"",""<c>spökhuset</c>""]


<c>class</c> <c>Nojesfalt</c>:
    <c>def</c> <c>__init__(</c><c>self</c>, <c>attraktion</c>):
        <c>self</c><c>.</c><c>val</c> <c>=</c> <c>attraktion</c>
        <c>self</c><c>.</c><c>langd</c> <c>=</c> <c>0</c>
        <c>self</c><c>.</c><c>alder</c> <c>=</c> <c>0</c>


#<c>längdgräns</c> <c>för</c> <c>fritt</c> <c>fall</c>
    <c>def</c> <c>langdgrans(</c><c>self</c>):
        <c>print(</c>"""")
        <c>self</c><c>.</c><c>langd</c> <c>=</c> <c>int(</c><c>input(</c>""<c>Hur</c> <c>lång</c> <c>är</c> <c>du</c> <c>i</c> <c>cm</c><c>?</c> ""))
        <c>if</c> <c>self</c><c>.</c><c>langd</c> <c>&lt;</c> <c>140</c>:
            <c>print(</c>""<c>tyvärr</c>, <c>du</c> <c>är</c> <c>för</c> <c>kort</c>, <c>prova</c> <c>något</c> <c>annat</c>"")
            <c>return</c> <c>0</c>
        <c>elif</c> <c>self</c><c>.</c><c>langd</c> <c>&gt;</c><c>=</c> <c>140</c>:
            <c>print(</c>""<c>håll</c> <c>dig</c> <c>hatten</c>, <c>nu</c> <c>åker</c> <c>vi</c><c>!</c>"")
            <c>print(</c>"" "")
            <c>return</c> <c>1</c>

#<c>åldersgräns</c> <c>för</c> <c>spökhuset</c>
    <c>def</c> <c>aldersgrans(</c><c>self</c>):
        <c>print(</c>"""")
        <c>self</c><c>.</c><c>alder</c> <c>=</c> <c>int(</c><c>input(</c>""<c>Hur</c> <c>gammal</c> <c>är</c> <c>du</c><c>?</c> ""))
        <c>if</c> <c>self</c><c>.</c><c>alder</c> <c>&lt;</c> <c>10</c>:
            <c>print(</c>""<c>tyvärr</c>, <c>du</c> <c>är</c> <c>för</c> <c>ung</c>, <c>prova</c> <c>något</c> <c>annat</c>"")
            <c>return</c> <c>0</c>
        <c>elif</c> <c>self</c><c>.</c><c>alder</c> <c>&gt;</c><c>=</c> <c>10</c>:
            <c>print(</c>""<c>Gå</c> <c>in</c> <c>om</c> <c>du</c> <c>törs</c><c>!</c>"")
            <c>print(</c>"" "")
            <c>return</c> <c>1</c>


#<c>åker</c> <c>attraktion</c> <c>frittfall</c> <c>lr</c> <c>bergodalbana</c>
        <c>def</c> <c>aka(</c><c>self</c>):
                <c>print(</c>"""")
        <c>print(</c><c>self</c><c>.</c><c>val</c>)
        <c>tal</c> <c>=</c> <c>random</c><c>.</c><c>randint(</c><c>0</c>,<c>100</c>)
        <c>if</c> <c>tal</c> <c>&lt;</c> <c>20</c>:
            <c>print(</c>""<c>åkturen</c> <c>gick</c> <c>åt</c> <c>skogen</c>, <c>bättre</c> <c>lycka</c> <c>nästa</c> <c>gång</c>"")            
        <c>elif</c> <c>tal</c> <c>&gt;</c><c>=</c> <c>20</c>:
            <c>print(</c>""<c>jabbadabbbadoooooooo</c>"")
            <c>return</c> <c>1</c>

#<c>går</c> <c>i</c> <c>spökhuset</c>
        <c>def</c> <c>aka1(</c><c>self</c>):
                <c>print(</c>"""")
        <c>print(</c><c>self</c><c>.</c><c>val</c>)
        <c>tal</c> <c>=</c> <c>random</c><c>.</c><c>randint(</c><c>0</c>,<c>100</c>)
        <c>if</c> <c>tal</c> <c>&lt;</c> <c>20</c>:
            <c>print(</c>""<c>du</c> <c>är</c> <c>omringad</c> <c>av</c> <c>spöken</c> <c>och</c> <c>kan</c> <c>inte</c> <c>fortsätta</c>"")            <c>return</c> <c>0</c>
        <c>elif</c> <c>tal</c> <c>&gt;</c><c>=</c> <c>20</c>:
            <c>print(</c>""<c>Buhuuuuuu</c>, <c>buuuhuuuu</c>"")
            <c>return</c> <c>1</c>

#<c>programkod</c>
<c>print(</c>""<c>Välkommen</c> <c>till</c> <c>nöjesfältet</c>, <c>vad</c> <c>vill</c> <c>du</c> <c>göra</c><c>?</c>"")
<c>print(</c>"" "")

<c>while</c> <c>1</c>:
    <c>vald_attr</c> <c>=</c> <c>input(</c>""<c>Vad</c> <c>vill</c> <c>du</c> <c>göra</c><c>?</c><c>\n1.</c> <c>frittfall</c><c>\n2.</c> <c>bergodalbana</c><c>\n3.</c> <c>spökhuset</c><c>\n4.</c> <c>Avsluta</c><c>\n</c>"")
    <c>if</c> <c>vald_attr</c> <c>==</c> ""<c>1</c>"":
        <c>val</c> <c>=</c> <c>Nojesfalt(</c><c>attraktioner</c>[<c>0</c>])
        <c>if</c> <c>val</c><c>.</c><c>langdgrans(</c>) <c>==</c> <c>1</c>:
            <c>val</c><c>.</c><c>aka(</c>)
    <c>elif</c> <c>vald_attr</c> <c>==</c> ""<c>2</c>"":
        <c>val</c> <c>=</c> <c>Nojesfalt(</c><c>attraktioner</c>[<c>1</c>])
        <c>val</c><c>.</c><c>aka(</c>)
    <c>elif</c> <c>vald_attr</c> <c>==</c> ""<c>3</c>"":
        <c>val</c> <c>=</c> <c>Nojesfalt(</c><c>attraktioner</c>[<c>2</c>])
        <c>if</c> <c>val</c><c>.</c><c>aldersgrans(</c>) <c>==</c> <c>1</c>:
            <c>val</c><c>.</c><c>aka1(</c>)
    <c>elif</c> <c>vald_attr</c> <c>==</c> ""<c>4</c>"":
        <c>break</c>
</code>
"
5844672|"<t>Delete</t> <t>an</t> <t>item</t> <t>from</t> <t>a</t> <t>dictionary</t>"|"<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>delete</t> <t>an</t> <t>item</t> <t>from</t> <t>a</t> <t>dictionary</t> <t>in</t> <t>Python</t>?

<t>I</t> <t>know</t> <t>I</t> <t>can</t> <t>just</t> <t>call</t> <code><c>.</c><c>pop</c></code> <t>on</t> <t>the</t> <t>dictionary</t>, <t>but</t> <t>that</t> <t>returns</t> <t>the</t> <t>item</t> <t>that</t> <t>was</t> <t>removed</t>. <t>What I'm</t> <t>looking</t> <t>for</t> <t>is</t> <t>something</t> <t>returns</t> <t>the</t> <t>dictionary</t> <t>minus</t> <t>the</t> <t>element</t> <t>in</t> <t>question</t>. 

<t>At</t> <t>present</t> <t>I</t> <t>have</t> <t>a</t> <t>helper</t> <t>function</t> <t>that</t> <t>accepts</t> <t>the</t> <t>dictionary</t> <t>in</t> <t>question</t> <t>as</t> <t>parameter</t>, <t>and</t> <t>then</t> <t>returns</t> <t>a</t> <t>dictionary</t> <t>with</t> <t>the</t> <t>item</t> <t>removed</t>, <t>Is</t> <t>there</t> <t>a</t> <t>more</t> <t>elegant</t> <t>solution</t>?
"
5904969|"<t>How</t> <t>to</t> <t>print</t> <t>a</t> <t>dictionary's</t> <t>key</t>?"|"<t>I</t> <t>found</t> <t>a</t> <t>my</t> <t>question</t> <t>in</t> <t>SO</t> <t>already</t>, <t>but</t> <t>it</t> <t>was</t> <t>not</t> <t>answered</t> <t>directly</t>. <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>print</t> <t>a</t> <t>specific</t> <t>Python</t> <t>dictionary</t> <t>key</t>:

<code><c>mydic</c> <c>=</c> {}
<c>mydic</c>['<c>key_name</c>'] <c>=</c> '<c>value_name</c>'
</code>

<t>Now</t> <t>I</t> <t>can</t> <t>check</t> <t>if</t> <code><c>mydic</c><c>.</c><c>has_key(</c>'<c>key_name</c>')</code>, <t>but</t> <t>what</t> <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>do</t> <t>is</t> <t>print</t> <t>the</t> <t>name</t> <t>of</t> <t>the</t> <t>key</t> <code>'<c>key_name</c>'</code>. <t>Of</t> <t>course</t> <t>I</t> <t>could</t> <t>use</t> <code><c>mydic</c><c>.</c><c>items(</c>)</code>, <t>but</t> <t>I</t> <t>don't</t> <t>want</t> <t>all</t> <t>the</t> <t>keys</t> <t>listed</t>, <t>merely</t> <t>one</t> <t>specific</t> <t>key</t>. <t>For</t> <t>instance</t> <t>I'd</t> <t>expect</t> <t>something</t> <t>like</t> <t>this</t> (<t>in</t> <t>pseudo-code</t>):

<code><c>print</c> ""<c>the</c> <c>key</c> <c>name</c> <c>is</c>"", <c>mydic</c>['<c>key_name</c>']<c>.</c><c>name_the_key(</c>), ""<c>and</c> <c>its</c> <c>value</c> <c>is</c>"", <c>mydic</c>['<c>key_name</c>']
</code>

<t>Is</t> <t>there</t> <t>any</t> <code><c>name_the_key(</c>)</code> <t>method</t> <t>to</t> <t>print</t> <t>a</t> <t>key</t> <t>name</t>?



<t>Edit</t>:
<t>OK</t>, <t>thanks</t> <t>a</t> <t>lot</t> <t>guys</t> <t>for</t> <t>your</t> <t>reactions</t>! :) <t>I</t> <t>realise</t> <t>my</t> <t>question</t> <t>is</t> <t>not</t> <t>well</t> <t>formulated</t> <t>and</t> <t>trivial</t>. <t>I</t> <t>just</t> <t>got</t> <t>confused</t> <t>because</t> <t>i</t> <t>realised</t> <t>key_name</t> <t>and</t> <code><c>mydic</c>['<c>key_name</c>']</code> <t>are</t> <t>two</t> <t>different</t> <t>things</t> <t>and</t> <t>i</t> <t>thought</t> <t>it</t> <t>would</t> <t>incorrect</t> <t>to</t> <t>print</t> <t>the</t> <code><c>key_name</c></code> <t>out</t> <t>of</t> <t>the</t> <t>dictionary</t> <t>context</t>. <t>But</t> <t>indeed</t> <t>i</t> <t>can</t> <t>simply</t> <t>use</t> <t>the</t> '<t>key_name</t>' <t>to</t> <t>refer</t> <t>to</t> <t>the</t> <t>key</t>! :)
"
5971312|"<t>How</t> <t>to</t> <t>set</t> <t>environment</t> <t>variables</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>need</t> <t>to</t> <t>set</t> <t>some</t> <t>environment</t> <t>variables</t> <t>in</t> <t>the</t> <t>python</t> <t>script</t> <t>and</t> <t>I</t> <t>want</t> <t>all</t> <t>the</t> <t>other</t> <t>scripts</t> <t>that</t> <t>are</t> <t>called</t> <t>from</t> <t>python</t> (<t>shell</t> <t>scripts</t>) <t>which</t> <t>will</t> <t>be</t> <t>child</t> <t>process</t> <t>to</t> <t>see</t> <t>the</t> <t>environment</t> <t>variables</t> <t>set</t>. <t>The</t> <t>value</t> <t>is</t> <t>a</t> <t>number</t>.

<t>If</t> <t>I</t> <t>do</t> <code><c>os</c><c>.</c><c>environ</c>[""<c>DEBUSSY</c>""] <c>=</c> <c>1</c></code>, <t>it</t> <t>complains</t> <t>saying</t> <t>that</t> <code><c>1</c></code> <t>has</t> <t>to</t> <t>be</t> <t>string</t>.
<t>I</t> <t>also</t> <t>want</t> <t>to</t> <t>know</t> <t>how</t> <t>to</t> <t>read</t> <t>the</t> <t>environment</t> <t>variables</t> <t>in</t> <t>python</t> (<t>in</t> <t>the</t> <t>later</t> <t>part</t> <t>of</t> <t>the</t> <t>script</t>) <t>once</t> <t>I</t> <t>set</t> <t>it</t>. 
"
5982206|"<t>How</t> <t>to</t> <t>print</t> <t>a</t> <t>linebreak</t> <t>in</t> <t>a</t> <t>python</t> <t>function</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>list</t> <t>of</t> <t>strings</t> <t>in</t> <t>my</t> <t>code;</t>

<code><c>A</c> <c>=</c> ['<c>a1</c>', '<c>a2</c>', '<c>a3</c>' ...]
<c>B</c> <c>=</c> ['<c>b1</c>', '<c>b2</c>', '<c>b3</c>' ...]
</code>

<t>and</t> <t>I</t> <t>want</t> <t>to</t> <t>print</t> <t>them</t> <t>separated</t> <t>by</t> <t>a</t> <t>linebreak</t>, <t>like</t> <t>this</t>:

<code><c>&gt;</c><c>a1</c>
<c>b1</c>
<c>&gt;</c><c>a2</c>
<c>b2</c>
<c>&gt;</c><c>a3</c>
<c>b3</c>
</code>

<t>I've</t> <t>tried</t>:

<code><c>print</c> '<c>&gt;</c>' <c>+</c> <c>A</c> <c>+</c> '<c>/n</c>' <c>+</c> <c>B</c>
</code>

<t>But</t> <t>/n</t> <t>isn't</t> <t>recognized</t> <t>like</t> <t>a</t> <t>line</t> <t>break</t>.
"
5998245|"<t>Get</t> <t>current</t> <t>time</t> <t>in</t> <t>milliseconds</t> <t>in</t> <t>Python</t>?"|"<t>How</t> <t>can</t> <t>I</t> <t>get</t> <t>the</t> <t>current</t> <t>time</t> <t>in</t> <t>milliseconds</t> <t>in</t> <t>Python</t>? 
"
6039605|"<t>TypeError</t>: '<t>str</t>' <t>object</t> <t>is</t> <t>not</t> <t>callable</t> (<t>Python</t>)"|"<t>Code</t>:

<code><c>import</c> <c>urllib2</c> <c>as</c> <c>u</c>
<c>import</c> <c>os</c> <c>as</c> <c>o</c>
<c>inn</c> <c>=</c> '<c>dword</c><c>.</c><c>txt</c>'
<c>w</c> <c>=</c> <c>open(</c><c>inn</c>)
<c>z</c> <c>=</c> <c>w</c><c>.</c><c>readline(</c>)
<c>b</c> <c>=</c> <c>w</c><c>.</c><c>readline(</c>)
<c>c</c> <c>=</c> <c>w</c><c>.</c><c>readline(</c>)
<c>x</c> <c>=</c> <c>w</c><c>.</c><c>readline(</c>)
<c>m</c> <c>=</c> <c>w</c><c>.</c><c>readline(</c>)
<c>def</c> <c>Dict(</c><c>Let</c>, <c>Mod</c>):
    <c>global</c> <c>str</c>
    <c>inn</c> <c>=</c> '<c>dword</c><c>.</c><c>txt</c>'
    <c>den</c> <c>=</c> '<c>definitions</c><c>.</c><c>txt</c>'

    <c>print</c> '<c>reading</c> <c>definitions</c>...'

    <c>dell</c> <c>=</c><c>open(</c><c>den</c>, '<c>w</c>')

    <c>print</c> '<c>getting</c> <c>source</c> <c>code</c>...'
    <c>f</c> <c>=</c> <c>u</c><c>.</c><c>urlopen(</c>'<c>htt</c><c>p://dictionary.reference.com/browse/</c>' <c>+</c> <c>Let</c>)
    <c>a</c> <c>=</c> <c>f</c><c>.</c><c>read(</c><c>800</c>)

    <c>print</c> '<c>writing</c> <c>source</c> <c>code</c> <c>to</c> <c>file</c>...'
    <c>f</c> <c>=</c> <c>open(</c>""<c>dic1</c><c>.</c><c>txt</c>"", ""<c>w</c>"")
    <c>f</c><c>.</c><c>write(</c><c>a</c>)
    <c>f</c><c>.</c><c>close(</c>)

    <c>j</c> <c>=</c> <c>open(</c>'<c>defs</c><c>.</c><c>txt</c>', '<c>w</c>')

    <c>print</c> '<c>finding</c> <c>definition</c> <c>is</c> <c>source</c> <c>code</c>'
    <c>for</c> <c>line</c> <c>in</c> <c>open(</c>""<c>dic1</c><c>.</c><c>txt</c>""):
        <c>if</c> '<c>&lt;</c><c>meta</c> <c>name</c><c>=</c>""<c>description</c>"" <c>content</c><c>=</c>' <c>in</c> <c>line</c>:
           <c>j</c><c>.</c><c>write(</c><c>line</c>)

    <c>j</c><c>.</c><c>close(</c>)

    <c>te</c> <c>=</c> <c>open(</c>'<c>defs</c><c>.</c><c>txt</c>', '<c>r</c>')<c>.</c><c>read(</c>)<c>.</c><c>split(</c>)
    <c>sto</c> <c>=</c> <c>open(</c>'<c>remove</c><c>.</c><c>txt</c>', '<c>r</c>')<c>.</c><c>read(</c>)<c>.</c><c>split(</c>)

    <c>print</c> '<c>skimming</c> <c>down</c> <c>the</c> <c>definition</c>...'
    <c>mar</c> <c>=</c> []
    <c>for</c> <c>t</c> <c>in</c> <c>te</c>:
        <c>if</c> <c>t</c><c>.</c><c>lower(</c>) <c>in</c> <c>sto</c>:
            <c>mar</c><c>.</c><c>append(</c>'')
        <c>else</c>: 
            <c>mar</c><c>.</c><c>append(</c><c>t</c>)
    <c>print</c> <c>mar</c>
    <c>str</c> <c>=</c> <c>str(</c><c>mar</c>)
    <c>str</c> <c>=</c> ''<c>.</c><c>join(</c>[ <c>c</c> <c>for</c> <c>c</c> <c>in</c> <c>str</c> <c>if</c> <c>c</c> <c>not</c> <c>in</c> ("","", ""'"", '[', ']', '')])

    <c>defin</c> <c>=</c> <c>open(</c><c>den</c>, <c>Mod</c>)
    <c>defin</c><c>.</c><c>write(</c><c>str</c>)
    <c>defin</c><c>.</c><c>write(</c>'                 ')
    <c>defin</c><c>.</c><c>close(</c>)

    <c>print</c> '<c>cleaning</c> <c>up</c>...'
    <c>o</c><c>.</c><c>system(</c>'<c>del</c> <c>dic1</c><c>.</c><c>txt</c>')
    <c>o</c><c>.</c><c>system(</c>'<c>del</c> <c>defs</c><c>.</c><c>txt</c>')
<c>Dict(</c><c>z</c>, '<c>w</c>')
<c>Dict(</c><c>b</c>, '<c>a</c>')
<c>Dict(</c><c>c</c>, '<c>a</c>')
<c>Dict(</c><c>x</c>, '<c>a</c>')
<c>Dict(</c><c>m</c>, '<c>a</c>')
<c>print</c> '<c>all</c> <c>of</c> <c>the</c> <c>definitions</c> <c>are</c> <c>in</c> <c>definitions</c><c>.</c><c>txt</c>'
</code>

<t>The</t> <t>first</t> <code><c>Dict(</c><c>z</c>, '<c>w</c>')</code> <t>works</t> <t>and</t> <t>then</t> <t>the</t> <t>second</t> <t>time</t> <t>around</t> <t>it</t> <t>comes</t> <t>up</t> <t>with</t> <t>an</t> <t>error</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>C:\Users\test.py</c>"", <c>line</c> <c>64</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>Dict(</c><c>b</c>, '<c>a</c>')
  <c>File</c> ""<c>C:\Users\test.py</c>"", <c>line</c> <c>52</c>, <c>in</c> <c>Dict</c>
    <c>str</c> <c>=</c> <c>str(</c><c>mar</c>)
<c>TypeError</c>: '<c>str</c>' <c>object</c> <c>is</c> <c>not</c> <c>callable</c>
</code>

<t>Does</t> <t>anyone</t> <t>know</t> <t>why</t> <t>this</t> <t>is</t>?

<t>@Greg</t> <t>Hewgill</t>: 

<t>I've</t> <t>already</t> <t>tried</t> <t>that</t> <t>and</t> <t>I</t> <t>get</t> <t>the</t> <t>error</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
 <c>File</c> ""<c>C:\Users\test.py</c>"", <c>line</c> <c>63</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>Dict(</c><c>z</c>, '<c>w</c>')
  <c>File</c> ""<c>C:\Users\test.py</c>"", <c>line</c> <c>53</c>, <c>in</c> <c>Dict</c>
   <c>strr</c> <c>=</c> ''<c>.</c><c>join(</c>[ <c>c</c> <c>for</c> <c>c</c> <c>in</c> <c>str</c> <c>if</c> <c>c</c> <c>not</c> <c>in</c> ("","", ""'"", '[', ']', '')])
<c>TypeError</c>: '<c>type</c>' <c>object</c> <c>is</c> <c>not</c> <c>iterable</c>
</code>
"
6049933|"<t>django</t> <t>import</t> <t>error</t> <t>-</t> <t>No</t> <t>module</t> <t>named</t> <t>core</t>.<t>management</t>"|"<t>Ok</t>, <t>I</t> <t>see</t> <t>plenty</t> <t>of</t> <t>these</t> <t>errors</t> <t>around</t>. <t>I</t> <t>have</t> <t>tried</t> <t>everything</t> <t>I</t> <t>know</t> <t>to</t> <t>do</t> <t>and</t> <t>have</t> <t>yet</t> <t>to</t> <t>figure</t> <t>this</t> <t>out</t>.

<t>I</t> <t>am</t> <t>working</t> <t>on</t> <t>a</t> <t>development</t> <t>server</t> <t>running</t> <t>python</t> <t>2.5</t> <t>and</t> <t>Django</t> <t>1.3.</t> <t>Django</t> <t>1.3</t> <t>was</t> <t>installed</t> <t>using</t> <t>python</t> <t>setup</t>.<t>py</t> <t>install</t> <t>after</t> <t>unpacking</t> <t>the</t> <t>tar</t>.<t>gz</t> <t>download</t>.

<t>All</t> <t>works</t> <t>well</t>, <t>I</t> <t>seldom</t> <t>have</t> <t>the</t> <t>need</t> <t>to</t> <t>run</t> <code><c>manage</c><c>.</c><c>py</c></code> <t>but</t> <t>am</t> <t>trying</t> <t>to</t> <t>use</t> <t>the</t> <t>new</t> <t>staticfiles</t> <t>app</t> <t>and</t> <t>am</t> <t>running</t> <t>into</t> <t>problems</t>.

<code><c>python</c> <c>manage</c><c>.</c><c>py</c> <c>collectstatic</c>
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>manage</c><c>.</c><c>py</c>"", <c>line</c> <c>2</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>from</c> <c>django</c><c>.</c><c>core</c><c>.</c><c>management</c> <c>import</c> <c>execute_manager</c>
<c>ImportError</c>: <c>No</c> <c>module</c> <c>named</c> <c>core</c><c>.</c><c>management</c>
</code>

<t>Ok</t>, <t>so</t> <t>I</t> <t>have</t> <code><c>PATH</c></code> <t>issue</t>.

<t>From Django</t> <t>install</t> <t>I</t> <t>double</t> <t>check</t> <t>my</t> <code><c>site-packages</c></code> <t>directory</t>.

<code><c>python</c> <c>-</c><c>c</c> ""<c>from</c> <c>distutils</c><c>.</c><c>sysconfig</c> <c>import</c> <c>get_python_lib</c>; <c>print</c> <c>get_python_lib(</c>)""
<c>/usr/lib/python2.5/site-packages
</c></code>

<t>Ok</t>, <t>let's</t> <t>check</t> <t>out</t> <t>what</t> <t>I</t> <t>have</t>, <t>echo</t> <t>$PYTHON_PATH</t> <t>was</t> <t>empty</t>, <t>so</t> <t>I</t> <t>set</t> <t>it</t>

<code><c>export</c> <c>PYTHON_PATH</c><c>=</c><c>/usr/lib/python2.5/site-packages/django
</c></code>

<t>Still</t> <t>no</t> <t>luck</t>. <t>Lets</t> <t>check</t> <t>what</t> <t>sys</t>.<t>path</t> <t>has</t> <t>to</t> <t>say</t>

<code><c>&gt;&gt;&gt;</c> <c>import</c> <c>sys</c>
<c>&gt;&gt;&gt;</c> <c>print</c> <c>sys</c><c>.</c><c>path</c>
['', '<c>/usr/lib/python2.5</c>', '<c>/usr/lib/python2.5/plat-linux2</c>', '<c>/usr/lib/python2.5/lib-tk</c>', '<c>/usr/lib/python2.5/lib-dynload</c>', '<c>/usr/local/lib/python2.5/site-packages</c>', '<c>/usr/lib/python2.5/site-packages</c>', '<c>/usr/lib/python2.5/site-packages/PIL</c>', '<c>/usr/lib/python2.5/site-packages/django</c>', '<c>/var/lib/python-support/python2.5</c>']
</code>

<t>path</t> <t>is</t> <t>there</t>, <t>I</t> <t>even</t> <t>created</t> <t>/usr/lib/python2.5/site-packages/django.pth</t> <t>with</t> <t>contents</t>

<code><c>cat</c> <c>/usr/lib/python2.5/site-packages/django.pth</c> 
<c>/usr/lib/python2.5/site-packages/django/
</c></code>

<t>Anyone</t> <t>got</t> <t>an</t> <t>clues</t> <t>to</t> <t>what</t> <t>is</t> <t>going</t> <t>on</t> <t>here</t>? 

<t>I</t> <t>found</t> <t>a</t> <t>symlink</t> <t>further</t> <t>up</t> <t>the</t> <t>path</t> <t>that</t> <t>was</t> <t>getting</t> <t>in</t> <t>the</t> <t>way</t>, <t>but</t> <t>no</t> <t>on</t> <t>to</t> <t>a</t> <t>new</t> <t>error</t>.

<code><c>python</c> <c>manage</c><c>.</c><c>py</c> <c>collectstatic</c>
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>manage</c><c>.</c><c>py</c>"", <c>line</c> <c>14</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>execute_manager(</c><c>settings</c>)
  <c>File</c> ""<c>/usr/lib/python2.5/site-packages/django/core/management/__init__.py</c>"", <c>line</c> <c>438</c>, <c>in</c> <c>execute_manager</c>
    <c>utility</c><c>.</c><c>execute(</c>)
  <c>File</c> ""<c>/usr/lib/python2.5/site-packages/django/core/management/__init__.py</c>"", <c>line</c> <c>349</c>, <c>in</c> <c>execute</c>
    <c>version</c><c>=</c><c>get_version(</c>),
  <c>File</c> ""<c>/usr/lib/python2.5/site-packages/django/__init__.py</c>"", <c>line</c> <c>12</c>, <c>in</c> <c>get_version</c>
    <c>from</c> <c>django</c><c>.</c><c>utils</c><c>.</c><c>version</c> <c>import</c> <c>get_svn_revision</c>
<c>ImportError</c>: <c>No</c> <c>module</c> <c>named</c> <c>utils</c><c>.</c><c>version</c>
</code>

<t>I</t> <t>also</t> <t>tried</t> <t>creating</t> <t>a</t> <t>new</t> <t>project</t> <t>to</t> <t>see</t> <t>if</t> <t>there</t> <t>were</t> <t>any</t> <t>issues</t> <t>there</t> <t>and</t> <t>get</t> <t>the</t> <t>same</t> <t>utils</t>.<t>version</t> <t>error</t>.

<t>Side</t> <t>node</t>: <t>Unode</t> <t>from</t> <t>#django</t> <t>helped</t> <t>me</t> <t>a</t> <t>bit</t>, <t>set</t> <t>up</t> <t>virtualenv</t> <t>on</t> <t>same</t> <t>machine</t> <t>and</t> <t>got</t> <t>past</t> <t>the</t> <t>errors</t> <t>so</t> <t>still</t> <t>not</t> <t>sure</t> <t>what</t> <t>is</t> <t>up</t> <t>with</t> <t>this</t> <t>actual</t> <t>install</t> <t>here</t>, <t>but</t> <t>it</t> <t>seems</t> <t>to</t> <t>not</t> <t>be</t> <t>in</t> <t>the</t> <t>django</t> <t>projects</t> <t>but</t> <t>in</t> <t>the</t> <t>django/python</t> <t>install</t>.
"
6077675|"<t>Why</t> <t>am</t> <t>I</t> <t>seeing</t> ""<t>TypeError</t>: <t>string</t> <t>indices</t> <t>must</t> <t>be</t> <t>integers</t>""?"|"<t>I'm</t> <t>playing</t> <t>with</t> <t>both</t> <t>learning</t> <t>python</t> <t>and</t> <t>trying</t> <t>to</t> <t>get</t> <t>github</t> <t>issues</t> <t>into</t> <t>a</t> <t>readable</t> <t>form</t>. <t>Using</t> <t>the</t> <t>advice</t> <t>on</t> <t>How</t> <t>can</t> <t>I</t> <t>convert</t> <t>JSON</t> <t>to</t> <t>CSV</t>? <t>I</t> <t>came</t> <t>up</t> <t>with</t> <t>this</t>:

<code><c>import</c> <c>json</c>
<c>import</c> <c>csv</c>

<c>f</c><c>=</c><c>open(</c>'<c>issues</c><c>.</c><c>json</c>')
<c>data</c> <c>=</c> <c>json</c><c>.</c><c>load(</c><c>f</c>)
<c>f</c><c>.</c><c>close(</c>)

<c>f</c><c>=</c><c>open(</c>""<c>issues</c><c>.</c><c>csv</c>"",""<c>wb</c><c>+</c>"")
<c>csv_file</c><c>=</c><c>csv</c><c>.</c><c>writer(</c><c>f</c>)

<c>csv_file</c><c>.</c><c>writerow(</c>[""<c>gravatar_id</c>"",""<c>position</c>"",""<c>number</c>"",""<c>votes</c>"",""<c>created_at</c>"",""<c>comments</c>"",""<c>body</c>"",""<c>title</c>"",""<c>updated_at</c>"",""<c>html_url</c>"",""<c>user</c>"",""<c>labels</c>"",""<c>state</c>""])

<c>for</c> <c>item</c> <c>in</c> <c>data</c>:
        <c>csv_file</c><c>.</c><c>writerow(</c>[<c>item</c>[""<c>gravatar_id</c>""], <c>item</c>[""<c>position</c>""], <c>item</c>[""<c>number</c>""], <c>item</c>[""<c>votes</c>""], <c>item</c>[""<c>created_at</c>""], <c>item</c>[""<c>comments</c>""], <c>item</c>[""<c>body</c>""], <c>item</c>[""<c>title</c>""], <c>item</c>[""<c>updated_at</c>""], <c>item</c>[""<c>html_url</c>""], <c>item</c>[""<c>user</c>""], <c>item</c>[""<c>labels</c>""], <c>item</c>[""<c>state</c>""]])
</code>

<t>Where</t> ""<t>issues</t>.<t>json</t>"" <t>is</t> <t>the</t> <t>json</t> <t>file</t> <t>containing</t> <t>my</t> <t>github</t> <t>issues</t>. <t>When</t> <t>I</t> <t>try</t> <t>to</t> <t>run</t> <t>that</t>, <t>I</t> <t>get</t> 

<code><c>File</c> ""<c>foo</c><c>.</c><c>py</c>"", <c>line</c> <c>14</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
<c>csv_file</c><c>.</c><c>writerow(</c>[<c>item</c>[""<c>gravatar_id</c>""], <c>item</c>[""<c>position</c>""], <c>item</c>[""<c>number</c>""], <c>item</c>[""<c>votes</c>""], <c>item</c>[""<c>created_at</c>""], <c>item</c>[""<c>comments</c>""], <c>item</c>[""<c>body</c>""], <c>item</c>[""<c>title</c>""], <c>item</c>[""<c>updated_at</c>""], <c>item</c>[""<c>html_url</c>""], <c>item</c>[""<c>user</c>""], <c>item</c>[""<c>labels</c>""], <c>item</c>[""<c>state</c>""]])

<c>TypeError</c>: <c>string</c> <c>indices</c> <c>must</c> <c>be</c> <c>integers</c>
</code>

<t>What</t> <t>am</t> <t>I</t> <t>missing</t> <t>here</t>? <t>Which</t> <t>are</t> <t>the</t> ""<t>string</t> <t>indices</t>""? <t>I'm</t> <t>sure</t> <t>that</t> <t>once</t> <t>I</t> <t>get</t> <t>this</t> <t>working</t> <t>I'll</t> <t>have</t> <t>more</t> <t>issues</t>, <t>but</t> <t>for</t> <t>now</t> , <t>I'd</t> <t>just</t> <t>love</t> <t>for</t> <t>this</t> <t>to</t> <t>work</t>!

<t>UPDATE</t>: 
<t>When</t> <t>I</t> <t>tweak</t> <t>the</t> <code><c>for</c></code> <t>statement</t> <t>to</t> <t>simply</t> 

<code><c>for</c> <c>item</c> <c>in</c> <c>data</c>:
    <c>print</c> <c>item</c>
</code>

<t>what</t> <t>I</t> <t>get</t> <t>is</t> <t>...</t> ""<t>issues</t>"" <t>--</t> <t>so</t> <t>I'm</t> <t>doing</t> <t>something</t> <t>more</t> <t>basic</t> <t>wrong</t>. <t>Here's</t> <t>a</t> <t>bit</t> <t>of</t> <t>my</t> <t>json</t>:

<code>{""<c>issues</c>"":[{""<c>gravatar_id</c>"":""<c>44230311</c><c>a3dcd684b6c5f81bf2ec9f60</c>"",""<c>position</c>"":<c>2.0</c>,""<c>number</c>"":<c>263</c>,""<c>votes</c>"":<c>0</c>,""<c>created_at</c>"":""<c>2010</c><c>/09/17</c> <c>16</c>:<c>0</c><c>6</c>:<c>50</c> <c>-</c><c>0</c><c>700</c>"",""<c>comments</c>"":<c>11</c>,""<c>body</c>"":""<c>Add</c> <c>missing</c> <c>paging</c> (<c>Older</c><c>&gt;&gt;</c>) <c>links</c>...
</code>

<t>when</t> <t>I</t> <t>print</t> <code><c>data</c></code> <t>it</t> <t>looks</t> <t>like</t> <t>it</t> <t>is</t> <t>getting</t> <t>munged</t> <t>really</t> <t>oddly</t>:

<code>{<c>u</c>'<c>issues</c>': [{<c>u</c>'<c>body</c>': <c>u</c>'<c>Add</c> <c>missing</c> <c>paging</c> (<c>Older</c><c>&gt;&gt;</c>) <c>lin</c>...
</code>
"
6159900|"<t>Correct</t> <t>way</t> <t>to</t> <t>write</t> <t>line</t> <t>to</t> <t>file</t> <t>in</t> <t>Python</t>"|"<t>I'm</t> <t>used</t> <t>to</t> <t>doing</t> <code><c>print</c> <c>&gt;&gt;</c><c>f</c>, ""<c>hi</c> <c>there</c>""</code>

<t>However</t>, <t>it</t> <t>seems</t> <t>that</t> <code><c>print</c> <c>&gt;&gt;</c></code> <t>is</t> <t>getting</t> <t>deprecated</t>. <t>What</t> <t>is</t> <t>the</t> <t>recommended</t> <t>way</t> <t>to</t> <t>do</t> <t>the</t> <t>line</t> <t>above</t>?

<t>Update</t>:
<t>Regarding</t> <t>all</t> <t>those</t> <t>answers</t> <t>with</t> <code>""<c>\n</c>""</code><t>...is</t> <t>this</t> <t>universal</t> <t>or</t> <t>Unix-specific</t>? <t>IE</t>, <t>should</t> <t>I</t> <t>be</t> <t>doing</t> <code>""<c>\r\n</c>""</code> <t>on</t> <t>Windows</t>?
"
6318156|"<t>Adding Python Path</t> <t>on</t> <t>Windows</t> <t>7</t>"|"<t>I've</t> <t>been</t> <t>trying</t> <t>to</t> <t>add</t> <t>the</t> <t>Python</t> <t>path</t> <t>to</t> <t>the</t> <t>command</t> <t>line</t> <t>on</t> <t>Windows</t> <t>7</t>, <t>yet</t> <t>no</t> <t>matter</t> <t>the</t> <t>method</t> <t>I</t> <t>try</t>, <t>nothing</t> <t>seems</t> <t>to</t> <t>work</t>. <t>I've</t> <t>used</t> <t>the</t> <code><c>set</c></code> <t>command</t>, <t>I've</t> <t>tried</t> <t>adding</t> <t>it</t> <t>through</t> <t>the</t> <t>Edit Environment</t> <t>variables</t> <t>prompt</t> <t>etc</t>.

<t>Further</t> <t>more</t> <t>if</t> <t>I</t> <t>run</t> <t>the</t> <t>set</t> <t>command</t> <t>on</t> <t>the</t> <t>command</t> <t>line</t> <t>it</t> <t>lists</t> <t>this</t>

<code><c>python</c> <c>=</c> <c>c:\python27
</c></code>

<t>Yet</t> <t>it</t> <t>still</t> <t>doesn't</t> <t>recognize</t> <t>the</t> <t>Python</t> <t>command</t>.

<t>Reading</t> <t>the</t> <t>documentation</t>, <t>and</t> <t>various</t> <t>other</t> <t>sources</t> <t>hasn't</t> <t>seemed</t> <t>to</t> <t>help</t>.

<t>Edit</t>: <t>Just</t> <t>to</t> <t>clarify</t> <t>further</t>, <t>I've</t> <t>appended</t> <t>the</t> <t>path</t> <t>of</t> <t>the</t> <t>Python</t> <t>executable</t> <t>to</t> <t>PATH</t> <t>in</t> <t>edit</t> <t>environment</t> <t>prompt</t>. <t>Doesn't</t> <t>seem</t> <t>to</t> <t>work</t>.
"
6390393|"<t>Matplotlib</t> <t>make</t> <t>tick</t> <t>labels</t> <t>font</t> <t>size</t> <t>smaller</t>"|"<t>In</t> <t>a</t> <t>matplotlib</t> <t>figure</t>, <t>how</t> <t>can</t> <t>I</t> <t>make</t> <t>the</t> <t>font</t> <t>size</t> <t>for</t> <t>the</t> <t>tick</t> <t>labels</t> <t>using</t> <code><c>ax1</c><c>.</c><c>set_xticklabels(</c>)</code> <t>smaller</t>?

<t>Further</t>, <t>how</t> <t>can</t> <t>one</t> <t>rotate</t> <t>it</t> <t>from</t> <t>horizontal</t> <t>to</t> <t>vertical</t>?
"
6416131|"<t>Python</t> <t>add</t> <t>new</t> <t>item</t> <t>to</t> <t>dictionary</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>add</t> <t>an</t> <t>item</t> <t>to</t> <t>an</t> <t>existing</t> <t>dictionary</t> <t>in</t> <t>python</t>. <t>For</t> <t>example</t>, <t>this</t> <t>is</t> <t>my</t> <t>dictionary</t>:

<code><c>default_data</c> <c>=</c> {
            '<c>item1</c>': <c>1</c>,
            '<c>item2</c>': <c>2</c>,
}
</code>

<t>I</t> <t>want</t> <t>to</t> <t>add</t> <t>new</t> <t>item</t> <t>such</t> <t>that</t>:

<code><c>default_data</c> <c>=</c> <c>default_data</c> <c>+</c> {'<c>item3</c>':<c>3</c>}
</code>

<t>How</t> <t>to</t> <t>achieve</t> <t>this</t>?
"
6468397|"<t>How</t> <t>to</t> <t>check</t> <t>Django</t> <t>version</t>"|"<t>I</t> <t>have</t> <t>to</t> <t>use</t> <t>Python</t> <t>and</t> <t>Django</t> <t>for</t> <t>our</t> <t>application</t>. <t>So</t> <t>I</t> <t>have</t> <t>two</t> <t>versions</t> <t>of</t> <t>Python</t>, <t>2.6</t> <t>and</t> <t>2.7.</t> <t>Now</t> <t>I</t> <t>have</t> <t>installed</t> <t>Django</t>. <t>I</t> <t>could</t> <t>run</t> <t>the</t> <t>sample</t> <t>application</t> <t>for</t> <t>testing</t> <t>Django</t> <t>succesfuly</t>. <t>But</t> <t>how</t> <t>do</t> <t>I</t> <t>make</t> <t>sure</t> <t>whether</t> <t>Django</t> <t>uses</t> <t>the</t> <t>2.6</t> <t>or</t> <t>2.7</t> <t>version</t> <t>and</t> <t>what</t> <t>version</t> <t>of</t> <t>modules</t> <t>Django</t> <t>uses</t>?
"
6470428|"<t>Catch</t> <t>multiple</t> <t>exceptions</t> <t>in</t> <t>one</t> <t>line</t> (<t>except</t> <t>block</t>)"|"<t>I</t> <t>know</t> <t>that</t> <t>I</t> <t>can</t> <t>do</t>:

<code><c>try</c>:
    # <c>do</c> <c>something</c> <c>that</c> <c>may</c> <c>fail</c>
<c>except</c>:
    # <c>do</c> <c>this</c> <c>if</c> <c>ANYTHING</c> <c>goes</c> <c>wrong</c>
</code>

<t>I</t> <t>can</t> <t>also</t> <t>do</t> <t>this</t>:

<code><c>try</c>:
    # <c>do</c> <c>something</c> <c>that</c> <c>may</c> <c>fail</c>
<c>except</c> <c>IDontLikeYouException</c>:
    # <c>say</c> <c>please</c>
<c>except</c> <c>YouAreTooShortException</c>:
    # <c>stand</c> <c>on</c> <c>a</c> <c>ladder</c>
</code>

<t>But</t> <t>if</t> <t>I</t> <t>want</t> <t>to</t> <t>do</t> <t>the</t> <t>same</t> <t>thing</t> <t>inside</t> <t>two</t> <t>different</t> <t>exceptions</t>, <t>the</t> <t>best</t> <t>I</t> <t>can</t> <t>think</t> <t>of</t> <t>right</t> <t>now</t> <t>is</t> <t>to</t> <t>do</t> <t>this</t>:

<code><c>try</c>:
    # <c>do</c> <c>something</c> <c>that</c> <c>may</c> <c>fail</c>
<c>except</c> <c>IDontLikeYouException</c>:
    # <c>say</c> <c>please</c>
<c>except</c> <c>YouAreBeingMeanException</c>:
    # <c>say</c> <c>please</c>
</code>

<t>Is</t> <t>there</t> <t>any</t> <t>way</t> <t>that</t> <t>I</t> <t>can</t> <t>do</t> <t>something</t> <t>like</t> <t>this</t> (<t>since</t> <t>the</t> <t>action</t> <t>to</t> <t>take</t> <t>in</t> <t>both</t> <t>exceptions</t> <t>is</t> <t>to</t> <code><c>say</c> <c>please</c></code>):

<code><c>try</c>:
    # <c>do</c> <c>something</c> <c>that</c> <c>may</c> <c>fail</c>
<c>except</c> <c>IDontLikeYouException</c>, <c>YouAreBeingMeanException</c>:
    # <c>say</c> <c>please</c>
</code>

<t>Now</t> <t>this</t> <t>really</t> <t>won't</t> <t>work</t>, <t>as</t> <t>it</t> <t>matches</t> <t>the</t> <t>syntax</t> <t>for</t>:

<code><c>try</c>:
    # <c>do</c> <c>something</c> <c>that</c> <c>may</c> <c>fail</c>
<c>except</c> <c>Exception</c>, <c>e</c>:
    # <c>say</c> <c>please</c>
</code>

<t>So</t>, <t>my</t> <t>effort</t> <t>to</t> <t>catch</t> <t>the</t> <t>two</t> <t>distinct</t> <t>exceptions</t> <t>doesn't</t> <t>exactly</t> <t>come</t> <t>through</t>.

<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>?
"
6504810|"<t>How</t> <t>to</t> <t>install</t> <t>lxml</t> <t>on</t> <t>Ubuntu</t>"|"<t>I'm</t> <t>having</t> <t>difficulty</t> <t>installing</t> <t>lxml</t> <t>with</t> <t>easy_install</t> <t>on</t> <t>Ubuntu</t> <t>11</t>.

<t>When</t> <t>I</t> <t>type</t> <code><c>$</c> <c>easy_install</c> <c>lxml</c></code> <t>I</t> <t>get</t>:

<code><c>Searching</c> <c>for</c> <c>lxml</c>
<c>Reading</c> <c>htt</c><c>p://pypi.python.org/simple/lxml/
Reading</c> <c>htt</c><c>p://codespeak.net/lxml
Best</c> <c>match</c>: <c>lxml</c> <c>2.3</c>
<c>Downloading</c> <c>htt</c><c>p://lxml.de/files/lxml-2.3.tgz
Processing</c> <c>lxml-2.3</c><c>.</c><c>tgz</c>
<c>Running</c> <c>lxml-2.3/setup.py</c> <c>-</c><c>q</c> <c>bdist_egg</c> <c>-</c><c>-</c><c>dist-dir</c> <c>/tmp/easy_install-7UdQOZ/lxml-2.3/egg-dist-tmp-GacQGy
Building</c> <c>lxml</c> <c>version</c> <c>2.3</c><c>.</c>
<c>Building</c> <c>without</c> <c>Cython</c><c>.</c>
<c>ERROR</c>: <c>/bin/sh:</c> <c>xslt-config</c>: <c>not</c> <c>found</c>

<c>**</c> <c>make</c> <c>sure</c> <c>the</c> <c>development</c> <c>packages</c> <c>of</c> <c>libxml2</c> <c>and</c> <c>libxslt</c> <c>are</c> <c>installed</c> <c>**</c>

<c>Using</c> <c>build</c> <c>configuration</c> <c>of</c> <c>libxslt</c> 
<c>In</c> <c>file</c> <c>included</c> <c>from</c> <c>src</c><c>/lxml/lxml.etree.c:227:0:
src/lxml/etree_defs.h:9:31:</c> <c>fatal</c> <c>error</c>: <c>libxml</c><c>/xmlversion.h:</c> <c>No</c> <c>such</c> <c>file</c> <c>or</c> <c>directory</c>
<c>compilation</c> <c>terminated</c><c>.</c>
</code>

<t>It</t> <t>seems</t> <t>that</t> <code><c>libxslt</c></code> <t>or</t> <code><c>libxml2</c></code> <t>is</t> <t>not</t> <t>installed</t>. <t>I've</t> <t>tried</t> <t>following</t> <t>the</t> <t>instructions</t> <t>at</t> <t>http://www.techsww.com/tutorials/libraries/libxslt/installation/installing_libxslt_on_ubuntu_linux.php</t> <t>and</t> <t>http://www.techsww.com/tutorials/libraries/libxml/installation/installing_libxml_on_ubuntu_linux.php</t> <t>with</t> <t>no</t> <t>success</t>.

<t>If</t> <t>I</t> <t>try</t> <code><c>wget</c> <c>ft</c><c>p://xmlsoft.org/libxml2/libxml2-sources-2.6.27.tar.gz</c></code> <t>I</t> <t>get</t>

<code><c>&lt;</c><c>successful</c> <c>connection</c> <c>info</c><c>&gt;</c>
<c>==</c><c>&gt;</c> <c>SYST</c> ... <c>done</c><c>.</c>    <c>==</c><c>&gt;</c> <c>PWD</c> ... <c>done</c><c>.</c>
<c>==</c><c>&gt;</c> <c>TYPE</c> <c>I</c> ... <c>done</c><c>.</c>  <c>==</c><c>&gt;</c> <c>CWD</c> (<c>1</c>) <c>/libxml2</c> ... <c>done</c><c>.</c>
<c>==</c><c>&gt;</c> <c>SIZE</c> <c>libxml2-sources-2.6.27</c><c>.</c><c>tar</c><c>.</c><c>gz</c> ... <c>done</c><c>.</c>
<c>==</c><c>&gt;</c> <c>PASV</c> ... <c>done</c><c>.</c>    <c>==</c><c>&gt;</c> <c>RETR</c> <c>libxml2-sources-2.6.27</c><c>.</c><c>tar</c><c>.</c><c>gz</c> ... 
<c>No</c> <c>such</c> <c>file</c> <c>`</c><c>libxml2-sources-2.6.27</c><c>.</c><c>tar</c><c>.</c><c>gz</c>'<c>.</c>
</code>

<t>If</t> <t>I</t> <t>try</t> <t>the</t> <t>other</t> <t>first</t>, <t>I'll</t> <t>get</t> <t>to</t> <code><c>.</c><c>/configure</c> <c>-</c><c>-</c><c>prefix</c><c>=</c><c>/usr/local/libxslt</c> <c>-</c><c>-</c><c>with-libxml-prefix</c><c>=</c><c>/usr/local/libxml2</c></code> <t>and</t> <t>that</t> <t>will</t> <t>fail</t> <t>eventually</t> <t>with</t>:

<code><c>checking</c> <c>for</c> <c>libxml</c> <c>libraries</c> <c>&gt;</c><c>=</c> <c>2.6.27</c>... <c>configure</c>: <c>error</c>: <c>Could</c> <c>not</c> <c>find</c> <c>libxml2</c> <c>anywhere</c>, <c>check</c> <c>ft</c><c>p://xmlsoft.org/.
</c></code>

<t>I've</t> <t>tried</t> <t>both</t> <t>versions</t> <code><c>2.6.27</c></code> <t>and</t> <code><c>2.6.29</c></code> <t>of</t> <code><c>libxml2</c></code> <t>with</t> <t>no</t> <t>difference</t>.

<t>Leaving</t> <t>no</t> <t>stone</t> <t>unturned</t>, <t>I</t> <t>have</t> <t>successfully</t> <t>done</t> <code><c>sudo</c> <c>apt-get</c> <c>install</c> <c>libxml2-dev</c></code>, <t>but</t> <t>this</t> <t>changes</t> <t>nothing</t>.
"
6587507|"<t>How</t> <t>to</t> <t>install</t> <t>pip</t> <t>with</t> <t>Python</t> <t>3</t>?"|"<t>I</t> <t>want</t> <t>to</t> <t>install</t> <t>pip</t>. <t>It</t> <t>should</t> <t>support</t> <t>Python</t> <t>3</t>, <t>but</t> <t>it</t> <t>requires</t> <t>setuptools</t>, <t>which</t> <t>is</t> <t>available</t> <t>only</t> <t>for</t> <t>Python</t> <t>2</t>.

<t>How</t> <t>can</t> <t>I</t> <t>install</t> <t>pip</t> <t>with</t> <t>Python</t> <t>3</t>?
"
6591931|"<t>Getting</t> <t>file</t> <t>size</t> <t>in</t> <t>Python</t>?"|"<t>Is</t> <t>there</t> <t>a</t> <t>built-in</t> <t>function</t> <t>for</t> <t>getting</t> <t>the</t> <t>size</t> <t>of</t> <t>a</t> <t>file</t> <t>object</t> <t>in</t> <t>bytes</t>? <t>I</t> <t>see</t> <t>some</t> <t>people</t> <t>do</t> <t>something</t> <t>like</t> <t>this</t>:

<code><c>def</c> <c>getSize(</c><c>fileobject</c>):
    <c>fileobject</c><c>.</c><c>seek(</c><c>0</c>,<c>2</c>) # <c>move</c> <c>the</c> <c>cursor</c> <c>to</c> <c>the</c> <c>end</c> <c>of</c> <c>the</c> <c>file</c>
    <c>size</c> <c>=</c> <c>fileobject</c><c>.</c><c>tell(</c>)
    <c>return</c> <c>size</c>

<c>file</c> <c>=</c> <c>open(</c>'<c>myfile</c><c>.</c><c>bin</c>', '<c>rb</c>')
<c>print</c> <c>getSize(</c><c>file</c>)
</code>

<t>But</t> <t>from</t> <t>my</t> <t>experience</t> <t>with</t> <t>Python</t>, <t>it</t> <t>has</t> <t>a</t> <t>lot</t> <t>of</t> <t>helper</t> <t>functions</t> <t>so</t> <t>I'm</t> <t>guessing</t> <t>maybe</t> <t>there</t> <t>is</t> <t>one</t> <t>built-in</t>.
"
6600878|"<t>Find</t> <t>all</t> <t>packages</t> <t>installed</t> <t>with</t> <t>easy_install/pip</t>?"|"<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>find</t> <t>all</t> <t>Python PyPI</t> <t>packages</t> <t>that</t> <t>were</t> <t>installed</t> <t>with</t> <t>easy_install</t> <t>or</t> <t>pip</t>?  <t>I</t> <t>mean</t>, <t>excluding</t> <t>everything</t> <t>that</t> <t>was/is</t> <t>installed</t> <t>with</t> <t>the</t> <t>distributions</t> <t>tools</t> (<t>in</t> <t>this</t> <t>case</t> <t>apt-get</t> <t>on</t> <t>Debian</t>).
"
6618002|"<t>Python</t> <t>@property</t> <t>versus</t> <t>getters</t> <t>and</t> <t>setters</t>"|"<t>Here</t> <t>is</t> <t>a</t> <t>pure</t> <t>Python-specific</t> <t>design</t> <t>question</t>: 

<code><c>class</c> <c>MyClass(</c><c>object</c>):
    ...
    <c>def</c> <c>get_my_attr(</c><c>self</c>):
        ...

    <c>def</c> <c>set_my_attr(</c><c>self</c>, <c>value</c>):
        ...
</code>

<t>and</t> 

<code><c>class</c> <c>MyClass(</c><c>object</c>):
    ...        
    <c>@</c><c>property</c>
    <c>def</c> <c>my_attr(</c><c>self</c>):
        ...

    <c>@</c><c>my_attr</c><c>.</c><c>setter</c>
    <c>def</c> <c>my_attr(</c><c>self</c>, <c>value</c>):
        ...
</code>

<t>Python</t> <t>lets</t> <t>us</t> <t>to</t> <t>do</t> <t>it</t> <t>either</t> <t>way</t>. <t>If</t> <t>you</t> <t>would</t> <t>design</t> <t>a</t> <t>Python</t> <t>program</t>, <t>which</t> <t>approach</t> <t>would</t> <t>you</t> <t>use</t> <t>and</t> <t>why</t>?
"
6667201|"<t>How</t> <t>to</t> <t>define</t> <t>two-dimensional</t> <t>array</t> <t>in</t> <t>python</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>define</t> <t>a</t> <t>two-dimensional</t> <t>array</t> <t>without</t> <t>an</t> <t>initialized</t> <t>length</t> <t>like</t> <t>this</t> :

<code><c>Matrix</c> <c>=</c> [][]
</code>

<t>but</t> <t>it</t> <t>does</t> <t>not</t> <t>work...</t>

<t>I've</t> <t>tried</t> <t>the</t> <t>code</t> <t>below</t>, <t>but</t> <t>it</t> <t>is</t> <t>wrong</t> <t>too</t>:

<code><c>Matrix</c> <c>=</c> [<c>5</c>][<c>5</c>]
</code>

<t>Error</t>:

<code><c>Traceback</c> ...

<c>IndexError</c>: <c>list</c> <c>index</c> <c>out</c> <c>of</c> <c>range</c>
</code>

<t>What</t> <t>is</t> <t>my</t> <t>mistake</t>?
"
6797984|"<t>How</t> <t>to</t> <t>convert</t> <t>string</t> <t>to</t> <t>lowercase</t> <t>in</t> <t>Python</t>?"|"<t>Is</t> <t>there</t> <t>any</t> <t>way</t> <t>to</t> <t>convert</t> <t>an</t> <t>entire</t> <t>user</t> <t>inputted</t> <t>string</t> <t>from</t> <t>uppercase</t>, <t>or</t> <t>even</t> <t>part</t> <t>uppercase</t> <t>to</t> <t>lowercase</t>? 

<t>E.g.</t> <t>Kilometers</t> <t>--></t> <t>kilometers</t>.
"
6996603|"<t>How</t> <t>to</t> <t>delete</t> <t>a</t> <t>file</t> <t>or</t> <t>folder</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>delete</t> <t>a</t> <t>file</t> <t>or</t> <t>folder</t> <t>in</t> <t>Python</t>?
"
7129285|"<t>Why</t> <t>would</t> <t>you</t> <t>use</t> <t>the</t> <t>return</t> <t>statement</t> <t>in</t> <t>Python</t>?"|"<t>What</t> <t>is</t> <t>the</t> <t>simple</t> <t>basic</t> <t>explanation</t> <t>of</t> <t>what</t> <t>the</t> <t>return</t> <t>statement</t> <t>is</t>, <t>how</t> <t>to</t> <t>use</t> <t>it</t> <t>in</t> <t>Python</t>?

<t>And</t> <t>what</t> <t>is</t> <t>the</t> <t>difference</t> <t>between</t> <t>it</t> <t>and</t> <t>the</t> <code><c>print</c></code> <t>statement</t>?
"
7152762|"<t>How</t> <t>to</t> <t>redirect</t> '<t>print</t>' <t>output</t> <t>to</t> <t>a</t> <t>file</t> <t>using</t> <t>python</t>?"|"<t>I</t> <t>want</t> <t>to</t> <t>redirect</t> <t>the</t> <t>print</t> <t>to</t> <t>a</t> .<t>txt</t> <t>file</t> <t>using</t> <t>python</t>. <t>I</t> <t>have</t> <t>a</t> '<t>for</t>' <t>loop</t>, <t>which</t> <t>will</t> '<t>print</t>' <t>the</t> <t>output</t> <t>for</t> <t>each</t> <t>of</t> <t>my</t> .<t>bam</t> <t>file;</t> <t>while</t> <t>I</t> <t>want</t> <t>to</t> <t>redirect</t> <t>ALL</t> <t>these</t> <t>output</t> <t>to</t> <t>one</t> <t>file</t>. <t>So</t> <t>I</t> <t>tried</t> <t>to</t> <t>put</t>

<code> <c>f</c> <c>=</c> <c>open(</c>'<c>output</c><c>.</c><c>txt</c>','<c>w</c>'); <c>sys</c><c>.</c><c>stdout</c> <c>=</c> <c>f</c>
</code>

<t>at</t> <t>the</t> <t>beginning</t> <t>of</t> <t>my</t> <t>script</t>. <t>However</t> <t>I</t> <t>get</t> <t>nothing</t> <t>in</t> <t>the</t> .<t>txt</t> <t>file</t>.
<t>My</t> <t>script</t> <t>is</t> <t>like</t> <t>below</t>:

<code>#<c>!</c><c>/usr/bin/python

import</c> <c>os</c>,<c>sys</c>
<c>import</c> <c>subprocess</c>
<c>import</c> <c>glob</c>
<c>from</c> <c>os</c> <c>import</c> <c>path</c>

<c>f</c> <c>=</c> <c>open(</c>'<c>output</c><c>.</c><c>txt</c>','<c>w</c>')
<c>sys</c><c>.</c><c>stdout</c> <c>=</c> <c>f</c>

<c>path</c><c>=</c> '<c>/home/xug/nearline/bamfiles</c>'
<c>bamfiles</c> <c>=</c> <c>glob</c><c>.</c><c>glob(</c><c>path</c> <c>+</c> '<c>/*.bam</c>')

<c>for</c> <c>bamfile</c> <c>in</c> <c>bamfiles</c>:
    <c>filename</c> <c>=</c> <c>bamfile</c><c>.</c><c>split(</c>'<c>/</c>')[<c>-</c><c>1</c>]
    <c>print</c> '<c>Filename</c>:', <c>filename</c>
    <c>samtoolsin</c> <c>=</c> <c>subprocess</c><c>.</c><c>Popen(</c>[""<c>/share/bin/samtools/samtools</c>"",""<c>view</c>"",<c>bamfile</c>],
                                  <c>stdout</c><c>=</c><c>subprocess</c><c>.</c><c>PIPE</c>,<c>bufsize</c><c>=</c><c>1</c>)
    <c>linelist</c><c>=</c> <c>samtoolsin</c><c>.</c><c>stdout</c><c>.</c><c>readlines(</c>)
    <c>print</c> '<c>Readlines</c> <c>finished</c><c>!</c>'
    <c>.</c><c>.</c>......<c>print</c><c>.</c><c>.</c><c>.</c>.
    ........<c>print</c><c>.</c>...
</code>

<t>So</t> <t>what's</t> <t>the</t> <t>problem</t>? <t>Any</t> <t>other</t> <t>way</t> <t>besides</t> <t>this</t> <t>sys</t>.<t>stdout</t>?
<t>thx</t>

<t>edit</t>:
<t>and</t> <t>i</t> <t>need</t> <t>my</t> <t>result</t> <t>look</t> <t>like</t>:

<code><c>Filename</c>: <c>ERR001268</c><c>.</c><c>bam</c>
<c>Readlines</c> <c>finished</c><c>!</c>
<c>Mean</c>: <c>233</c>
<c>SD</c>: <c>10</c>
<c>Interval</c> <c>is</c>: (<c>213</c>, <c>252</c>)
</code>
"
7225900|"<t>How</t> <t>to</t> <t>pip</t> <t>install</t> <t>packages</t> <t>according</t> <t>to</t> <t>requirements</t>.<t>txt</t> <t>from</t> <t>a</t> <t>local</t> <t>directory</t>?"|"<t>Here</t> <t>is</t> <t>the</t> <t>problem</t>

<t>I</t> <t>have</t> <t>a</t> <t>requirements</t>.<t>txt</t> <t>that</t> <t>looks</t> <t>like</t>:

<code><c>BeautifulSoup</c><c>==</c><c>3.2.0</c>
<c>Django</c><c>==</c><c>1.3</c>
<c>Fabric</c><c>==</c><c>1.2.0</c>
<c>Jinja2</c><c>==</c><c>2.5.5</c>
<c>PyYAML</c><c>==</c><c>3.09</c>
<c>Pygments</c><c>==</c><c>1.4</c>
<c>SQLAlchemy</c><c>==</c><c>0.7.1</c>
<c>South</c><c>==</c><c>0.7.3</c>
<c>amqplib</c><c>==</c><c>0.6.1</c>
<c>anyjson</c><c>==</c><c>0.3</c>
...
</code>

<t>I</t> <t>have</t> <t>a</t> <t>local</t> <t>archive</t> <t>directory</t> <t>containing</t> <t>all</t> <t>the</t> <t>packages</t> <t>+</t> <t>others</t>.

<t>I</t> <t>have</t> <t>created</t> <t>a</t> <t>new</t> <t>virtualenv</t> <t>with</t>

<code><c>bin</c><c>/virtualenv</c> <c>testing</c>
</code>

<t>upon</t> <t>activating</t> <t>it</t>, <t>I</t> <t>tried</t> <t>to</t> <t>install</t> <t>the</t> <t>packages</t> <t>according</t> <t>to</t> <t>requirements</t>.<t>txt</t> <t>from</t> <t>the</t> <t>local</t> <t>archive</t> <t>directory</t>.

<code><c>source</c> <c>bin</c><c>/activate
pip</c> <c>install</c> <c>-</c><c>r</c> <c>/path/to/requirements.txt</c> <c>-</c><c>f</c> <c>fil</c><c>e:///path/to/archive/
</c></code>

<t>I</t> <t>got</t> <t>some</t> <t>output</t> <t>that</t> <t>seems</t> <t>to</t> <t>indicate</t> <t>that</t> <t>the</t> <t>installation</t> <t>is</t> <t>fine</t>

<code><c>Downloading</c><c>/unpacking</c> <c>Fabric</c><c>==</c><c>1.2.0</c> (<c>from</c> <c>-</c><c>r</c> <c>.</c><c>.</c><c>/testing/requirements.txt</c> (<c>line</c> <c>3</c>))
  <c>Running</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>for</c> <c>package</c> <c>Fabric</c>
    <c>warning</c>: <c>no</c> <c>previously-included</c> <c>files</c> <c>matching</c> '<c>*</c>' <c>found</c> <c>under</c> <c>directory</c> '<c>docs</c><c>/_build</c>'
    <c>warning</c>: <c>no</c> <c>files</c> <c>found</c> <c>matching</c> '<c>fabfile</c><c>.</c><c>py</c>'
<c>Downloading</c><c>/unpacking</c> <c>South</c><c>==</c><c>0.7.3</c> (<c>from</c> <c>-</c><c>r</c> <c>.</c><c>.</c><c>/testing/requirements.txt</c> (<c>line</c> <c>8</c>))
  <c>Running</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>for</c> <c>package</c> <c>South</c>
<c>.</c>...
</code>

<t>But</t> <t>later</t> <t>check</t> <t>revealed</t> <t>none</t> <t>of</t> <t>the</t> <t>package</t> <t>is</t> <t>installed</t> <t>properly</t>. <t>I</t> <t>cannot</t> <t>import</t> <t>the</t> <t>package</t>, <t>and</t> <t>none</t> <t>is</t> <t>found</t> <t>in</t> <t>the</t> <t>site-packages</t> <t>directory</t> <t>of</t> <t>my</t> <t>virtualenv</t>. <t>So</t> <t>what</t> <t>went</t> <t>wrong</t>?
"
7263824|"<t>Get HTML Source</t> <t>of</t> <t>WebElement</t> <t>in</t> <t>Selenium WebDriver</t> <t>using</t> <t>Python</t>"|"<t>I'm</t> <t>using</t> <t>the</t> <t>Python</t> <t>bindings</t> <t>to</t> <t>run</t> <t>Selenium</t> <t>WebDriver</t>.

<code><c>from</c> <c>selenium</c> <c>import</c> <c>webdriver</c>
<c>wd</c> <c>=</c> <c>webdriver</c><c>.</c><c>Firefox(</c>)
</code>

<t>I</t> <t>know</t> <t>I</t> <t>can</t> <t>grab</t> <t>a</t> <t>webelement</t> <t>like</t> <t>so...</t>

<code><c>elem</c> <c>=</c> <c>wd</c><c>.</c><c>find_element_by_css_selector(</c>'#<c>my-id</c>')
</code>

<t>And</t> <t>I</t> <t>know</t> <t>I</t> <t>can</t> <t>get</t> <t>the</t> <t>full</t> <t>page</t> <t>source</t> <t>with...</t>

<code><c>wd</c><c>.</c><c>page_source</c>
</code>

<t>But</t> <t>is</t> <t>there</t> <t>anyway</t> <t>to</t> <t>get</t> <t>the</t> ""<t>element</t> <t>source</t>""?

<code><c>elem</c><c>.</c><c>source</c>   # <c>&lt;</c><c>-</c><c>-</c> <c>returns</c> <c>the</c> <c>HTML</c> <c>as</c> <c>a</c> <c>string</c>
</code>

<t>The</t> <t>selenium</t> <t>webdriver</t> <t>docs</t> <t>for</t> <t>Python</t> <t>are</t> <t>basically</t> <t>non-existent</t> <t>and</t> <t>I</t> <t>don't</t> <t>see</t> <t>anything</t> <t>in</t> <t>the</t> <t>code</t> <t>that</t> <t>seems</t> <t>to</t> <t>enable</t> <t>that</t> <t>functionality</t>.

<t>Any</t> <t>thoughts</t> <t>on</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>access</t> <t>the</t> <t>HTML</t> <t>of</t> <t>an</t> <t>element</t> (<t>and</t> <t>its</t> <t>children</t>)?
"
7370801|"<t>Measure</t> <t>time</t> <t>elapsed</t> <t>in</t> <t>Python</t>?"|"<t>What</t> <t>I</t> <t>want</t> <t>is</t> <t>to</t> <t>start</t> <t>counting</t> <t>time</t> <t>somewhere</t> <t>in</t> <t>my</t> <t>code</t> <t>and</t> <t>then</t> <t>get</t> <t>the</t> <t>passed</t> <t>time</t>, <t>to</t> <t>measure</t> <t>the</t> <t>time</t> <t>it</t> <t>took</t> <t>to</t> <t>execute</t> <t>few</t> <t>function</t>. <t>I</t> <t>think</t> <t>I'm</t> <t>using</t> <t>the</t> <t>timeit</t> <t>module</t> <t>wrong</t>, <t>but</t> <t>the</t> <t>docs</t> <t>are</t> <t>just</t> <t>confusing</t> <t>for</t> <t>me</t>.

<code><c>import</c> <c>timeit</c>

<c>start</c> <c>=</c> <c>timeit</c><c>.</c><c>timeit(</c>)
<c>print</c> ""<c>hello</c>""
<c>end</c> <c>=</c> <c>timeit</c><c>.</c><c>timeit(</c>)
<c>print</c> <c>end</c> <c>-</c> <c>start</c>
</code>
"
7446187|"<t>No</t> <t>module</t> <t>named</t> <t>pkg_resources</t>"|"<t>I'm</t> <t>deploying</t> <t>a</t> <t>Django</t> <t>app</t> <t>to</t> <t>a</t> <t>dev</t> <t>server</t> <t>and</t> <t>am</t> <t>hitting</t> <t>this</t> <t>error</t> <t>when</t> <t>i</t> <t>run</t> <t>pip</t> <t>install</t> <t>requirements</t>.<t>txt</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>/var/www/mydir/virtualenvs/dev/bin/pip</c>"", <c>line</c> <c>5</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>from</c> <c>pkg_resources</c> <c>import</c> <c>load_entry_point</c>
<c>ImportError</c>: <c>No</c> <c>module</c> <c>named</c> <c>pkg_resources</c>
</code>

<t>pkg_resources</t> <t>appears</t> <t>to</t> <t>be</t> <t>distributed</t> <t>with</t> <t>setuptools</t>.  <t>Initially</t> <t>I</t> <t>thought</t> <t>this</t> <t>might</t> <t>not</t> <t>be</t> <t>installed</t> <t>to</t> <t>the</t> <t>python</t> <t>in</t> <t>the</t> <t>virtualenv</t> <t>so</t> <t>I</t> <t>installed</t> <t>setuptools</t> (<t>2</t>.<t>6</t>, <t>same</t> <t>version</t> <t>as</t> <t>Python</t>) <t>to</t> <t>the</t> <t>Python</t> <t>site-packages</t> <t>in</t> <t>the</t> <t>virtualenv</t> <t>with</t> <t>the</t> <t>following</t> <t>command</t>

<code><c>sh</c> <c>setuptools-0.6c11-py2.6</c><c>.</c><c>egg</c> <c>-</c><c>-</c><c>install-dir</c> <c>/var/www/mydir/virtualenvs/dev/lib/python2.6/site-packages
</c></code>

<t>EDIT</t>
<t>This</t> <t>only</t> <t>happens</t> <t>inside</t> <t>the</t> <t>virtualenv</t>.  <t>If</t> <t>I</t> <t>open</t> <t>a</t> <t>console</t> <t>outside</t> <t>the</t> <t>virtualenv</t> <t>then</t> <t>pkg_resources</t> <t>is</t> <t>present</t>

<t>but</t> <t>I</t> <t>am</t> <t>still</t> <t>getting</t> <t>the</t> <t>same</t> <t>error</t>.  <t>Any</t> <t>ideas</t> <t>as</t> <t>to</t> <t>why</t> <t>pkg_resources</t> <t>is</t> <t>not</t> <t>on</t> <t>the</t> <t>path</t>?
"
7475223|"<t>mysql_config</t> <t>not</t> <t>found</t> <t>when</t> <t>installing</t> <t>mysqldb</t> <t>python</t> <t>interface</t>"|"<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>get</t> <t>a</t> <t>Python</t> <t>script</t> <t>to</t> <t>run</t> <t>on</t> <t>the</t> <t>linux</t> <t>server</t> <t>I'm</t> <t>connected</t> <t>to</t> <t>via</t> <t>ssh</t>. <t>The</t> <t>script</t> <t>uses</t> <t>mysqldb</t>. <t>I</t> <t>have</t> <t>all</t> <t>the</t> <t>other</t> <t>components</t> <t>I</t> <t>need</t>, <t>but</t> <t>when</t> <t>I</t> <t>try</t> <t>to</t> <t>install</t> <t>mySQLdb</t> <t>via</t> <t>setuptools</t> <t>like</t> <t>so</t>:, 

<code><c>python</c> <c>setup</c><c>.</c><c>py</c> <c>install</c>
</code>

<t>I</t> <t>get</t> <t>the</t> <t>following</t> <t>error</t> <t>report</t> <t>related</t> <t>to</t> <t>the</t> <code><c>mysql_config</c></code> <t>command</t>.

<code><c>sh</c>: <c>mysql_config</c>: <c>command</c> <c>not</c> <c>found</c>
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>setup</c><c>.</c><c>py</c>"", <c>line</c> <c>15</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>metadata</c>, <c>options</c> <c>=</c> <c>get_config(</c>)
  <c>File</c> ""<c>/usr/lib/python2.5/MySQL-python-1.2.3/setup_posix.py</c>"", <c>line</c> <c>43</c>, <c>in</c> <c>get_config</c>
    <c>libs</c> <c>=</c> <c>mysql_config(</c>""<c>libs_r</c>"")
  <c>File</c> ""<c>/usr/lib/python2.5/MySQL-python-1.2.3/setup_posix.py</c>"", <c>line</c> <c>24</c>, <c>in</c> <c>mysql_config</c>
    <c>raise</c> <c>EnvironmentError(</c>""<c>%</c><c>s</c> <c>not</c> <c>found</c>"" <c>%</c> (<c>mysql_config</c><c>.</c><c>path</c>,))
<c>EnvironmentError</c>: <c>mysql_config</c> <c>not</c> <c>found</c>
</code>

<t>Has</t> <t>anyone</t> <t>else</t> <t>encountered</t> <t>this</t> <t>error</t> <t>and</t> <t>if</t> <t>so</t> <t>how</t> <t>did</t> <t>you</t> <t>resolve</t> <t>it/what</t> <t>can</t> <t>I</t> <t>do</t> <t>to</t> <t>successfully</t> <t>install</t> <t>mysqldb</t>? 
"
7571635|"<t>Fastest</t> <t>way</t> <t>to</t> <t>check</t> <t>if</t> <t>a</t> <t>value</t> <t>exist</t> <t>in</t> <t>a</t> <t>list</t>"|"<t>I'm</t> <t>searching</t> <t>for</t> <t>the</t> <t>fastest</t> <t>way</t> <t>to</t> <t>know</t> <t>if</t> <t>a</t> <t>value</t> <t>exists</t> <t>in</t> <t>a</t> <t>list</t> (<t>a</t> <t>list</t> <t>with</t> <t>millions</t> <t>of</t> <t>values</t> <t>in</t> <t>it</t>) <t>and</t> <t>what</t> <t>its</t> <t>index</t> <t>is</t>? <t>I</t> <t>know</t> <t>all</t> <t>values</t> <t>in</t> <t>the</t> <t>list</t> <t>are</t> <t>unique</t> <t>like</t> <t>my</t> <t>example</t>.

<t>My</t> <t>first</t> <t>methods</t> <t>I</t> <t>try</t> <t>is(3</t>.<t>8sec</t> <t>in</t> <t>my</t> <t>real</t> <t>code</t>):

<code><c>a</c> <c>=</c> [<c>4</c>,<c>2</c>,<c>3</c>,<c>1</c>,<c>5</c>,<c>6</c>]

<c>if</c> <c>a</c><c>.</c><c>count(</c><c>7</c>) <c>==</c> <c>1</c>:
    <c>b</c><c>=</c><c>a</c><c>.</c><c>index(</c><c>7</c>)
    ""<c>Do</c> <c>something</c> <c>with</c> <c>variable</c> <c>b</c>""
</code>

<t>My</t> <t>second</t> <t>methods</t> <t>I</t> <t>try</t> <t>is</t> (<t>2x</t> <t>faster</t>:<t>1</t>.<t>9sec</t> <t>on</t> <t>my</t> <t>real</t> <t>code</t>):

<code><c>a</c> <c>=</c> [<c>4</c>,<c>2</c>,<c>3</c>,<c>1</c>,<c>5</c>,<c>6</c>]

<c>try</c>:
    <c>b</c><c>=</c><c>a</c><c>.</c><c>index(</c><c>7</c>)
<c>except</c> <c>ValueError</c>:
    ""<c>Do</c> <c>nothing</c>""
<c>else</c>:
    ""<c>Do</c> <c>something</c> <c>with</c> <c>variable</c> <c>b</c>""
</code>

<t>Proposed</t> <t>methods</t> <t>from</t> <t>Stackoverflow</t> <t>user</t> (<t>2</t>.<t>74sec</t> <t>on</t> <t>my</t> <t>real</t> <t>code</t>):

<code><c>a</c> <c>=</c> [<c>4</c>,<c>2</c>,<c>3</c>,<c>1</c>,<c>5</c>,<c>6</c>]
<c>if</c> <c>7</c> <c>in</c> <c>a</c>:
    <c>a</c><c>.</c><c>index(</c><c>7</c>)
</code>

<t>In</t> <t>my</t> <t>real</t> <t>code</t>, <t>first</t> <t>method</t> <t>take</t> <t>3.81sec</t> <t>and</t> <t>the</t> <t>second</t> <t>methods</t> <t>take</t> <t>1.88sec.</t>
<t>It's</t> <t>a</t> <t>good</t> <t>improvement</t> <t>but</t>:

<t>I'm</t> <t>a</t> <t>beginner</t> <t>with</t> <t>Python/scripting</t> <t>and</t> <t>I</t> <t>want</t> <t>to</t> <t>know</t> <t>if</t> <t>a</t> <t>fastest</t> <t>way</t> <t>exist</t> <t>to</t> <t>do</t> <t>the</t> <t>same</t> <t>things</t> <t>and</t> <t>save</t> <t>more</t> <t>process</t> <t>time</t>?

<t>More</t> <t>specific</t> <t>explication</t> <t>for</t> <t>my</t> <t>application</t>:

<t>In</t> <t>the</t> <t>API</t> <t>of</t> <t>blender</t> <t>a</t> <t>can</t> <t>access</t> <t>to</t> <t>a</t> <t>list</t> <t>of</t> <t>particles</t>:

<code><c>particles</c> <c>=</c> [<c>1</c>,<c>2</c>,<c>3</c>,4...etc.]
</code>

<t>From</t> <t>there</t> , <t>I</t> <t>can</t> <t>access</t> <t>to</t> <t>it's</t> <t>location</t>:

<code><c>particles</c>[<c>x</c>]<c>.</c><c>location</c> <c>=</c> [<c>x</c>,<c>y</c>,<c>z</c>]
</code>

<t>And</t> <t>I</t> <t>test</t> <t>for</t> <t>each</t> <t>particles</t> <t>if</t> <t>a</t> <t>neighbour</t> <t>exist</t> <t>by</t> <t>searching</t>
<t>in</t> <t>the</t> <t>location</t> <t>of</t> <t>each</t> <t>particles</t> <t>like</t>:

<code><c>if</c> [<c>x</c><c>+</c><c>1</c>,<c>y</c>,<c>z</c>] <c>in</c> <c>particles</c><c>.</c><c>location</c>
    ""<c>find</c> <c>the</c> <c>identity</c> <c>of</c> <c>this</c> <c>neighbour</c> <c>particles</c> <c>in</c> <c>x</c>:<c>the</c> <c>index</c> 
    <c>of</c> <c>the</c> <c>particles</c> <c>array</c>""
    <c>particles</c><c>.</c><c>index(</c>[<c>x</c><c>+</c><c>1</c>,<c>y</c>,<c>z</c>])
</code>
"
7585435|"<t>Best</t> <t>way</t> <t>to</t> <t>convert</t> <t>string</t> <t>to</t> <t>bytes</t> <t>in</t> <t>Python</t> <t>3</t>?"|"<t>There</t> <t>appears</t> <t>to</t> <t>be</t> <t>two</t> <t>different</t> <t>ways</t> <t>to</t> <t>convert</t> <t>a</t> <t>string</t> <t>to</t> <t>bytes</t>, <t>as</t> <t>seen</t> <t>in</t> <t>the</t> <t>answers</t> <t>to</t> <t>TypeError</t>: <t>&#39;str&#39;</t> <t>does</t> <t>not</t> <t>support</t> <t>the</t> <t>buffer</t> <t>interface</t>

<t>Which</t> <t>of</t> <t>these</t> <t>methods</t> <t>would</t> <t>be</t> <t>better</t> <t>or</t> <t>more</t> <t>Pythonic</t>? <t>Or</t> <t>is</t> <t>it</t> <t>just</t> <t>a</t> <t>matter</t> <t>of</t> <t>personal</t> <t>preference</t>?

<code><c>b</c> <c>=</c> <c>bytes(</c><c>mystring</c>, '<c>utf-8</c>')

<c>b</c> <c>=</c> <c>mystring</c><c>.</c><c>encode(</c>'<c>utf-8</c>')
</code>
"
7586063|"<t>How</t> <t>to</t> <t>calculate</t> <t>the</t> <t>angle</t> <t>between</t> <t>a</t> <t>line</t> <t>and</t> <t>the</t> <t>horizontal</t> <t>axis</t>?"|"<t>In</t> <t>a</t> <t>programming</t> <t>language</t> (<t>Python</t>, <t>C#</t>, <t>etc</t>) <t>I</t> <t>need</t> <t>to</t> <t>determine</t> <t>how</t> <t>to</t> <t>calculate</t> <t>the</t> <t>angle</t> <t>between</t> <t>a</t> <t>line</t> <t>and</t> <t>the</t> <t>horizontal</t> <t>axis</t>?

<t>I</t> <t>think</t> <t>an</t> <t>image</t> <t>describes</t> <t>best</t> <t>what</t> <t>I</t> <t>want</t>:



<t>Given</t> (<t>P1x</t>,<t>P1y</t>) <t>and</t> (<t>P2x</t>,<t>P2y</t>) <t>what</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>calculate</t> <t>this</t> <t>angle</t>? <t>The</t> <t>origin</t> <t>is</t> <t>in</t> <t>the</t> <t>topleft</t> <t>and</t> <t>only</t> <t>the</t> <t>positive</t> <t>quadrant</t> <t>is</t> <t>used</t>.
"
7604966|"<t>Maximum</t> <t>and</t> <t>Minimum</t> <t>values</t> <t>for</t> <t>ints</t>"|"<t>I</t> <t>am</t> <t>looking</t> <t>for</t> <t>minimum</t> <t>and</t> <t>maximum</t> <t>values</t> <t>for</t> <t>integers</t> <t>in</t> <t>python</t>. <t>For</t> <t>eg</t>., <t>in</t> <t>Java</t>, <t>we</t> <t>have</t> <code><c>Integer</c><c>.</c><c>MIN_VALUE</c></code> <t>and</t> <code><c>Integer</c><c>.</c><c>MAX_VALUE</c></code>. <t>Is</t> <t>there</t> <t>something</t> <t>like</t> <t>this</t> <t>in</t> <t>python</t>?
"
7696924|"<t>Way</t> <t>to</t> <t>create</t> <t>multiline</t> <t>comments</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>have</t> <t>recently</t> <t>started</t> <t>studying</t> <t>Python</t>, <t>but</t> <t>I</t> <t>couldn't</t> <t>find</t> <t>how</t> <t>to</t> <t>implement</t> <t>multi-line</t> <t>comments</t>. <t>Most</t> <t>languages</t> <t>have</t> <t>block</t> <t>comment</t> <t>symbols</t> <t>like</t> 

<code><c>/*</c> 

<c>*</c><c>/
</c></code>

<t>I</t> <t>tried</t> <t>this</t> <t>in</t> <t>Python</t>, <t>but</t> <t>it</t> <t>throws</t> <t>an</t> <t>error</t>, <t>so</t> <t>this</t> <t>probably</t> <t>is</t> <t>not</t> <t>the</t> <t>correct</t> <t>way</t>. <t>Does Python</t> <t>actually</t> <t>have</t> <t>a</t> <t>multiline</t> <t>comment</t> <t>feature</t>?
"
7716331|"<t>Calculating</t> <t>arithmetic</t> <t>mean</t> (<t>average</t>) <t>in</t> <t>Python</t>"|"<t>Is</t> <t>there</t> <t>a</t> <t>built-in</t> <t>or</t> <t>standard</t> <t>library</t> <t>method</t> <t>in</t> <t>Python</t> <t>to</t> <t>calculate</t> <t>the</t> <t>arithmetic</t> <t>mean</t> (<t>average</t>) <t>of</t> <t>a</t> <t>list</t> <t>of</t> <t>numbers</t>?
"
7771011|"<t>Parse JSON</t> <t>in</t> <t>Python</t>"|"<t>My</t> <t>project</t> <t>is</t> <t>currently</t> <t>receiving</t> <t>a</t> <t>JSON</t> <t>message</t> <t>in</t> <t>python</t> <t>which</t> <t>I</t> <t>need</t> <t>to</t> <t>get</t> <t>bits</t> <t>of</t> <t>information</t> <t>out</t> <t>of</t>. <t>For</t> <t>the</t> <t>purposes</t> <t>of</t> <t>this</t>, <t>lets</t> <t>set</t> <t>it</t> <t>to</t> <t>some</t> <t>simple</t> <t>JSON</t> <t>in</t> <t>a</t> <t>string</t>:

<code><c>jsonStr</c> <c>=</c> '{""<c>one</c>"" : ""<c>1</c>"", ""<c>two</c>"" : ""<c>2</c>"", ""<c>three</c>"" : ""<c>3</c>""}'
</code>

<t>So</t> <t>far</t> <t>I've</t> <t>been</t> <t>generating</t> <t>JSON</t> <t>requests</t> <t>using</t> <t>a</t> <t>list</t> <t>and</t> <t>then</t> <code><c>json</c><c>.</c><c>dumps</c></code> <t>but</t> <t>to</t> <t>do</t> <t>the</t> <t>opposite</t> <t>of</t> <t>this</t> <t>I</t> <t>think</t> <t>I</t> <t>need</t> <t>to</t> <t>use</t> <code><c>json</c><c>.</c><c>loads</c></code> <t>but</t> <t>I</t> <t>haven't</t> <t>had</t> <t>much</t> <t>luck</t> <t>with</t> <t>it</t>. <t>Could</t> <t>anyone</t> <t>provide</t> <t>me</t> <t>a</t> <t>snippet</t> <t>that</t> <t>would</t> <t>return</t> ""<t>2</t>"" <t>with</t> <t>the</t> <t>input</t> <t>of</t> ""<t>two</t>"" <t>in</t> <t>the</t> <t>above</t> <t>example</t>?
"
7818811|"<t>Import</t> <t>Error</t>: <t>No</t> <t>module</t> <t>named</t> <t>numpy</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>very</t> <t>similar</t> <t>question</t> <t>to</t> <t>this</t> <t>question</t>, <t>but</t> <t>still</t> <t>1</t> <t>step</t> <t>behind</t>. 
<t>I</t> <t>have</t> <t>only</t> <t>one</t> <t>version</t> <t>of</t> <t>python</t> <t>3</t> <t>installed</t> <t>on</t> <t>my</t> <t>Windows</t> <t>7(sorry</t>) <t>64-bit</t> <t>system</t>.
<t>I</t> <t>installed</t> <t>numpy</t> <t>following</t> <t>this</t> <t>link</t> <t>-</t> <t>as</t> <t>suggested</t> <t>in</t> <t>the</t> <t>question</t>. 
<t>The</t> <t>installation</t> <t>went</t> <t>fine</t> <t>but</t> <t>when</t> <t>I</t> <t>want</t> <t>to</t> <t>import</t>

<code><c>import</c> <c>numpy</c>

<c>Import</c> <c>error</c>:<c>No</c> <c>module</c> <c>named</c> <c>numpy</c>
</code>

<t>I</t> <t>know</t> <t>this</t> <t>is</t> <t>probably</t> <t>a</t> <t>super</t> <t>basic</t> <t>question</t>, <t>but</t> <t>I'm</t> <t>still</t> <t>learning...</t>
<t>Thanks</t>
"
7899732|"<t>Which</t> <t>is</t> <t>the</t> <t>best</t> <t>IDE</t> <t>for</t> <t>Python For</t> <t>Windows</t>"|"
  <t>Possible</t> <t>Duplicate</t>:
  <t>What IDE</t> <t>to</t> <t>use</t> <t>for</t> <t>Python</t>?  




<t>I</t> <t>am</t> <t>new</t> <t>to</t> <t>python</t> <t>and</t> <t>I</t> <t>am</t> <t>using</t> <t>simple</t> <t>gedit</t> <t>application</t> <t>on</t> <t>linux</t> <t>machine</t> <t>to</t> <t>write</t> <t>python</t> <t>code</t>, <t>however</t> <t>its</t> <t>very</t> <t>difficult</t> <t>to</t> <t>manage</t> <t>the</t> <t>indentations</t> <t>of</t> <t>my</t> <t>code</t>. <t>I</t> <t>am</t> <t>looking</t> <t>for</t> <t>any</t> <t>Python IDEs</t> <t>that</t> <t>provides</t> <t>some</t> <t>functionality</t> <t>and</t> <t>should</t> <t>not</t> <t>slow</t> <t>down</t> <t>my</t> <t>P4</t> <t>machine</t>.
"
7961363|"<t>Removing</t> <t>duplicates</t> <t>in</t> <t>lists</t>"|"<t>Pretty</t> <t>much</t> <t>I</t> <t>need</t> <t>to</t> <t>write</t> <t>a</t> <t>program</t> <t>to</t> <t>check</t> <t>if</t> <t>a</t> <t>list</t> <t>has</t> <t>any</t> <t>duplicates</t> <t>and</t> <t>if</t> <t>it</t> <t>does</t> <t>it</t> <t>removes</t> <t>them</t> <t>and</t> <t>returns</t> <t>a</t> <t>new</t> <t>list</t> <t>with</t> <t>the</t> <t>items</t> <t>that</t> <t>werent</t> <t>duplicated/removed</t>. <t>This</t> <t>is</t> <t>what</t> <t>I</t> <t>have</t> <t>but</t> <t>to</t> <t>be</t> <t>honest</t> <t>I</t> <t>do</t> <t>not</t> <t>know</t> <t>what</t> <t>to</t> <t>do</t>.

<code><c>def</c> <c>remove_duplicates(</c>):
    <c>t</c> <c>=</c> ['<c>a</c>', '<c>b</c>', '<c>c</c>', '<c>d</c>']
    <c>t2</c> <c>=</c> ['<c>a</c>', '<c>c</c>', '<c>d</c>']
    <c>for</c> <c>t</c> <c>in</c> <c>t2</c>:
        <c>t</c><c>.</c><c>append(</c><c>t</c><c>.</c><c>remove(</c>))
    <c>return</c> <c>t</c>
</code>
"
7999935|"<t>Python</t> <t>datetime</t> <t>to</t> <t>string</t> <t>without</t> <t>microsecond</t> <t>component</t>"|"<t>I'm</t> <t>adding</t> <t>UTC</t> <t>time</t> <t>strings</t> <t>to</t> <t>Bitbucket API</t> <t>responses</t> <t>that</t> <t>currently</t> <t>only</t> <t>contain</t> <t>Amsterdam</t> (!) <t>time</t> <t>strings</t>. <t>For</t> <t>consistency</t> <t>with</t> <t>the</t> <t>UTC</t> <t>time</t> <t>strings</t> <t>returned</t> <t>elsewhere</t>, <t>the</t> <t>desired</t> <t>format</t> <t>is</t> <code><c>2011-11-03</c> <c>11</c>:<c>0</c><c>7</c>:<c>0</c><c>4</c></code> (<t>followed</t> <t>by</t> <code><c>+</c><c>00</c>:<c>00</c></code>, <t>but</t> <t>that's</t> <t>not</t> <t>germane</t>).

<t>What's</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>create</t> <t>such</t> <t>a</t> <t>string</t> (<t>without</t> <t>a</t> <t>microsecond</t> <t>component</t>) <t>from</t> <t>a</t> <code><c>datetime</c></code> <t>instance</t> <t>with</t> <t>a</t> <t>microsecond</t> <t>component</t>?

<code><c>&gt;&gt;&gt;</c> <c>import</c> <c>datetime</c>
<c>&gt;&gt;&gt;</c> <c>print</c> <c>unicode(</c><c>datetime</c><c>.</c><c>datetime</c><c>.</c><c>now(</c>))
<c>2011-11-03</c> <c>11</c>:<c>13</c>:<c>39.278026</c>
</code>

<t>I'll</t> <t>add</t> <t>the</t> <t>best</t> <t>option</t> <t>that's</t> <t>occurred</t> <t>to</t> <t>me</t> <t>as</t> <t>a</t> <t>possible</t> <t>answer</t>, <t>but</t> <t>there</t> <t>may</t> <t>well</t> <t>be</t> <t>a</t> <t>more</t> <t>elegant</t> <t>solution</t>.

<t>Edit</t>: <t>I</t> <t>should</t> <t>mention</t> <t>that</t> <t>I'm</t> <t>not</t> <t>actually</t> <t>printing</t> <t>the</t> <t>current</t> <t>time</t> <t>–</t> <t>I</t> <t>used</t> <code><c>datetime</c><c>.</c><c>now</c></code> <t>to</t> <t>provide</t> <t>a</t> <t>quick</t> <t>example</t>. <t>So</t> <t>the</t> <t>solution</t> <t>should</t> <t>not</t> <t>assume</t> <t>that</t> <t>any</t> <code><c>datetime</c></code> <t>instances</t> <t>it</t> <t>receives</t> <t>will</t> <t>include</t> <t>microsecond</t> <t>components</t>.
"
8009882|"<t>How</t> <t>to</t> <t>read</t> <t>large</t> <t>file</t>, <t>line</t> <t>by</t> <t>line</t> <t>in</t> <t>python</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>iterate</t> <t>over</t> <t>each</t> <t>line</t> <t>of</t> <t>an</t> <t>entire</t> <t>file</t>. <t>One</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t> <t>is</t> <t>by</t> <t>reading</t> <t>the</t> <t>entire</t> <t>file</t>, <t>saving</t> <t>it</t> <t>to</t> <t>a</t> <t>list</t>, <t>then</t> <t>going</t> <t>over</t> <t>the</t> <t>line</t> <t>of</t> <t>interest</t>. <t>This</t> <t>method</t> <t>uses</t> <t>a</t> <t>lot</t> <t>of</t> <t>memory</t>, <t>so</t> <t>I</t> <t>am</t> <t>looking</t> <t>for</t> <t>an</t> <t>alternative</t>.

<t>My</t> <t>code</t> <t>so</t> <t>far</t>:

<code><c>for</c> <c>each_line</c> <c>in</c> <c>fileinput</c><c>.</c><c>input(</c><c>input_file</c>):
    <c>do_something(</c><c>each_line</c>)

    <c>for</c> <c>each_line_again</c> <c>in</c> <c>fileinput</c><c>.</c><c>input(</c><c>input_file</c>):
        <c>do_something(</c><c>each_line_again</c>)
</code>

<t>Executing</t> <t>this</t> <t>code</t> <t>gives</t> <t>an</t> <t>error</t> <t>message</t>: <code><c>device</c> <c>active</c></code>.

<t>Any</t> <t>suggestions</t>?

<t>EDIT</t>: <t>The</t> <t>purpose</t> <t>is</t> <t>to</t> <t>calculate</t> <t>pair-wise</t> <t>string</t> <t>similarity</t>, <t>meaning</t> <t>for</t> <t>each</t> <t>line</t> <t>in</t> <t>file</t>, <t>I</t> <t>want</t> <t>to</t> <t>calculate</t> <t>the</t> <t>Levenshtein</t> <t>distance</t> <t>with</t> <t>every</t> <t>other</t> <t>line</t>.
"
8023306|"<t>Get</t> <t>key</t> <t>by</t> <t>value</t> <t>in</t> <t>dictionary</t>"|"<t>I</t> <t>made</t> <t>a</t> <t>function</t> <t>which</t> <t>will</t> <t>look</t> <t>up</t> <t>ages</t> <t>in</t> <t>dictionary</t> <t>and</t> <t>show</t> <t>the</t> <t>matching</t> <t>name</t>:

<code><c>list</c> <c>=</c> {'<c>george</c>':<c>16</c>,'<c>amber</c>':<c>19</c>}
<c>search_age</c> <c>=</c> <c>raw_input(</c>""<c>Provide</c> <c>age</c>"")
<c>for</c> <c>age</c> <c>in</c> <c>list</c><c>.</c><c>values(</c>):
    <c>if</c> <c>age</c> <c>==</c> <c>search_age</c>:
        <c>name</c> <c>=</c> <c>list</c>[<c>age</c>]
        <c>print</c> <c>name</c>
</code>

<t>I</t> <t>know</t> <t>how</t> <t>to</t> <t>compare</t> <t>and</t> <t>find</t> <t>the</t> <t>age</t> <t>I</t> <t>just</t> <t>don't</t> <t>know</t> <t>how</t> <t>to</t> <t>show</t> <t>the</t> <t>name</t> <t>of</t> <t>the</t> <t>person</t>. <t>Additionally</t>, <t>I</t> <t>am</t> <t>getting</t> <t>a</t> <code><c>KeyError</c></code> <t>because</t> <t>of</t> <t>line</t> <t>5</t>. <t>I</t> <t>know</t> <t>it's</t> <t>not</t> <t>correct</t> <t>but</t> <t>I</t> <t>can't</t> <t>figure</t> <t>out</t> <t>to</t> <t>make</t> <t>it</t> <t>search</t> <t>backwards</t>.
"
8113782|"<t>Split</t> <t>string</t> <t>on</t> <t>whitespace</t> <t>in</t> <t>Python</t>"|"<t>I'm</t> <t>looking</t> <t>for</t> <t>the</t> <t>Python</t> <t>equivalent</t> <t>of</t> 

<code><c>String</c> <c>str</c> <c>=</c> ""<c>many</c>   <c>fancy</c> <c>word</c> <c>\nhello</c>    <c>\thi</c>"";
<c>String</c> <c>whiteSpaceRegex</c> <c>=</c> ""<c>\\s</c>"";
<c>String</c>[] <c>words</c> <c>=</c> <c>str</c><c>.</c><c>split(</c><c>whiteSpaceRegex</c>);

[""<c>many</c>"", ""<c>fancy</c>"", ""<c>word</c>"", ""<c>hello</c>"", ""<c>hi</c>""]
</code>
"
8214932|"<t>How</t> <t>to</t> <t>check</t> <t>if</t> <t>a</t> <t>value</t> <t>exists</t> <t>in</t> <t>a</t> <t>dictionary</t> (<t>python</t>)"|"<t>I</t> <t>have</t> <t>the</t> <t>following</t> <t>dictionary</t> <t>in</t> <t>python</t>: 

<code><c>d</c> <c>=</c> {'<c>1</c>': '<c>one</c>', '<c>3</c>': '<c>three</c>', '<c>2</c>': '<c>two</c>', '<c>5</c>': '<c>five</c>', '<c>4</c>': '<c>four</c>'}
</code>

<t>I</t> <t>need</t> <t>a</t> <t>way</t> <t>to</t> <t>find</t> <t>if</t> <t>a</t> <t>value</t> <t>such</t> <t>as</t> ""<t>one</t>"" <t>or</t> ""<t>two</t>"" <t>exists</t> <t>in</t> <t>this</t> <t>dictionary</t>.

<t>For</t> <t>example</t>, <t>if</t> <t>I</t> <t>wanted</t> <t>to</t> <t>know</t> <t>if</t> <t>the</t> <t>index</t> ""<t>1</t>"" <t>existed</t> <t>I</t> <t>would</t> <t>simply</t> <t>have</t> <t>to</t> <t>type</t>: 

<code>""<c>1</c>"" <c>in</c> <c>d</c>
</code>

<t>And</t> <t>then</t> <t>python</t> <t>would</t> <t>tell</t> <t>me</t> <t>if</t> <t>that</t> <t>is</t> <t>true</t> <t>or</t> <t>false</t>, <t>however</t> <t>I</t> <t>need</t> <t>to</t> <t>do</t> <t>that</t> <t>same</t> <t>exact</t> <t>thing</t> <t>except</t> <t>to</t> <t>find</t> <t>if</t> <t>a</t> <t>value</t> <t>exists</t>.
"
8237647|"<t>Clear</t> <t>variable</t> <t>in</t> <t>python</t>"|"<t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>clear</t> <t>the</t> <t>value</t> <t>of</t> <t>a</t> <t>variable</t> <t>in</t> <t>python</t>?

<t>For</t> <t>example</t> <t>if</t> <t>I</t> <t>was</t> <t>implementing</t> <t>a</t> <t>binary</t> <t>tree</t>:

<code><c>Class</c> <c>Node</c>:
    <c>self</c><c>.</c><c>left</c> <c>=</c> <c>somenode1</c>
    <c>self</c><c>.</c><c>right</c> <c>=</c> <c>somenode2</c>
</code>

<t>If</t> <t>I</t> <t>wanted</t> <t>to</t> <t>remove</t> <t>some</t> <t>node</t> <t>from</t> <t>the</t> <t>tree</t>, <t>I</t> <t>would</t> <t>need</t> <t>to</t> <t>set</t> <code><c>self</c><c>.</c><c>left</c></code> <t>to</t> <t>empty</t>.
"
8248397|"<t>How</t> <t>to</t> <t>know/change</t> <t>current</t> <t>directory</t> <t>in</t> <t>Python</t> <t>shell</t>?"|"<t>I</t> <t>am</t> <t>using</t> <t>Python</t> <t>3.2</t> <t>on</t> <t>Windows</t> <t>7</t>.  <t>When</t> <t>I</t> <t>open</t> <t>the</t> <t>Python</t> <t>shell</t>, <t>how</t> <t>can</t> <t>I</t> <t>know</t> <t>what</t> <t>the</t> <t>current</t> <t>directory</t> <t>is</t> <t>and</t> <t>how</t> <t>can</t> <t>I</t> <t>change</t> <t>it</t> <t>to</t> <t>another</t> <t>directory</t> <t>where</t> <t>my</t> <t>modules</t> <t>are</t>?
"
8266529|"<t>Python</t> <t>-</t> <t>convert</t> <t>string</t> <t>to</t> <t>list</t>"|"
  <t>Possible</t> <t>Duplicate</t>:
  <t>String</t> <t>to</t> <t>list</t> <t>in</t> <t>Python</t>  




<t>i</t> <t>have</t> <t>a</t> <t>string</t> <t>like</t> <t>this</t> :


  states = ""Alaska <t>Alabama Arkansas American Samoa Arizona California</t> <t>Colorado</t>""


<t>and</t> <t>I</t> <t>want</t> <t>to</t> <t>split</t> <t>it</t> <t>into</t> <t>a</t> <t>list</t> <t>like</t> <t>this</t>


  <t>states = {Alaska</t>, <t>Alabama</t>, <t>Arkansas</t>, <t>American</t>, <t>Samoa</t>, <t>....}</t>


<t>I</t> <t>am</t> <t>new</t> <t>in</t> <t>python</t>.

<t>Help</t> <t>me</t> <t>please</t>. :<t>-</t>))

<t>edit</t>: <t>I</t> <t>need</t> <t>to</t> <t>make</t> <t>random</t> <t>choice</t> <t>from</t> <t>states</t> <t>and</t> <t>make</t> <t>it</t> <t>like</t> <t>variable</t> .
"
8270092|"<t>Python</t> <t>remove</t> <t>all</t> <t>whitespace</t> <t>in</t> <t>a</t> <t>string</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>eliminate</t> <t>all</t> <t>the</t> <t>whitespace</t> <t>from</t> <t>a</t> <t>string</t>, <t>on</t> <t>both</t> <t>ends</t>, <t>and</t> <t>in</t> <t>between</t> <t>words</t>.

<t>I</t> <t>have</t> <t>this</t> <t>Python</t> <t>code</t>:

<code><c>def</c> <c>my_handle(</c><c>self</c>):
    <c>sentence</c> <c>=</c> ' <c>hello</c>  <c>apple</c>  '
    <c>sentence</c><c>.</c><c>strip(</c>)
</code>

<t>But</t> <t>that</t> <t>only</t> <t>eliminates</t> <t>the</t> <t>whitespace</t> <t>on</t> <t>both</t> <t>sides</t> <t>of</t> <t>the</t> <t>string</t>. <t>How</t> <t>do</t> <t>I</t> <t>remove</t> <t>all</t> <t>whitespace</t>?
"
8369219|"<t>How</t> <t>do</t> <t>I</t> <t>read</t> <t>a</t> <t>text</t> <t>file</t> <t>into</t> <t>a</t> <t>string</t> <t>variable</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>use</t> <t>the</t> <t>following</t> <t>code</t> <t>segment</t> <t>to</t> <t>read</t> <t>a</t> <t>file</t> <t>in</t> <t>python</t>

<code><c>with</c> <c>open</c> (""<c>data</c><c>.</c><c>txt</c>"", ""<c>r</c>"") <c>as</c> <c>myfile</c>:
    <c>data</c><c>=</c><c>myfile</c><c>.</c><c>readlines(</c>)
</code>

<t>input</t> <t>file</t> <t>is</t>

<code><c>LLKKKKKKKKMMMMMMMMNNNNNNNNNNNNN</c>
<c>GGGGGGGGGHHHHHHHHHHHHHHHHHHHHEEEEEEEE</c>
</code>

<t>and</t> <t>when</t> <t>I</t> <t>print</t> <t>data</t> <t>I</t> <t>get</t>

<code>['<c>LLKKKKKKKKMMMMMMMMNNNNNNNNNNNNN</c><c>\n</c>', '<c>GGGGGGGGGHHHHHHHHHHHHHHHHHHHHEEEEEEEE</c>']
</code>

<t>As</t> <t>I</t> <t>see</t> <t>data</t> <t>is</t> <t>in</t> <t>list</t> <t>form</t>. <t>How</t> <t>do</t> <t>I</t> <t>make</t> <t>it</t> <t>string</t>. <t>And</t> <t>also</t> <t>how</t> <t>do</t> <t>I</t> <t>remove</t> ""<t>\n</t>"", ""<t>[</t>"", <t>and</t> ""<t>]</t>"" <t>characters</t> <t>from</t> <t>it</t> ?
"
8384737|"<t>Extract</t> <t>file</t> <t>name</t> <t>from</t> <t>path</t>, <t>no</t> <t>matter</t> <t>what</t> <t>the</t> <t>os/path</t> <t>format</t>"|"<t>Which Python</t> <t>library</t> <t>can</t> <t>I</t> <t>use</t> <t>to</t> <t>extract</t> <t>filenames</t> <t>from</t> <t>paths</t>, <t>no</t> <t>matter</t> <t>what</t> <t>the</t> <t>operating</t> <t>system</t> <t>or</t> <t>path</t> <t>format</t> <t>could</t> <t>be</t>?

<t>For</t> <t>example</t>, <t>I'd</t> <t>like</t> <t>all</t> <t>of</t> <t>these</t> <t>paths</t> <t>to</t> <t>return</t> <t>me</t> <code><c>c</c></code>:

<code><c>a</c><c>/b/c/
a/b/c
\a\b\c
\a\b\c\
a\b\c
a/b/../../a/b/c/
a/b/../../a/b/c
</c></code>
"
8424942|"<t>Creating</t> <t>a</t> <t>new</t> <t>dict</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>build</t> <t>a</t> <t>dictionary</t> <t>in</t> <t>Python</t>. <t>However</t>, <t>all</t> <t>the</t> <t>examples</t> <t>that</t> <t>I</t> <t>see</t> <t>are</t> <t>instantiating</t> <t>a</t> <t>dictionary</t> <t>from</t> <t>a</t> <t>list</t>, <t>etc</t> . <t>..</t>

<t>How</t> <t>do</t> <t>I</t> <t>create</t> <t>a</t> <t>new</t> <t>empty</t> <t>dictionary</t> <t>in</t> <t>Python</t>?
"
8551735|"<t>How</t> <t>do</t> <t>I</t> <t>run</t> <t>Python</t> <t>code</t> <t>from</t> <t>Sublime Text</t> <t>2</t>?"|"<t>I</t> <t>want</t> <t>to</t> <t>set</t> <t>up</t> <t>a</t> <t>complete</t> <t>Python IDE</t> <t>in</t> <t>Sublime Text</t> <t>2</t>.

<t>I</t> <t>want</t> <t>to</t> <t>know</t> <t>how</t> <t>to</t> <t>run</t> <t>the</t> <t>Python</t> <t>code</t> <t>from</t> <t>within</t> <t>the</t> <t>editor</t>. <t>Is</t> <t>it</t> <t>done</t> <t>using</t> <t>build</t> <t>system</t>? <t>How</t> <t>do</t> <t>I</t> <t>do</t> <t>it</t> ?
"
8777753|"<t>Converting</t> <t>datetime</t>.<t>date</t> <t>to</t> <t>UTC</t> <t>timestamp</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>am</t> <t>dealing</t> <t>with</t> <t>dates</t> <t>in</t> <t>Python</t> <t>and</t> <t>I</t> <t>need</t> <t>to</t> <t>convert</t> <t>them</t> <t>to</t> <t>UTC</t> <t>timestamps</t> <t>to</t> <t>be</t> <t>used</t>
<t>inside</t> <t>Javascript</t>. <t>The</t> <t>following</t> <t>code</t> <t>does</t> <t>not</t> <t>work</t>:

<code><c>&gt;&gt;&gt;</c> <c>d</c> <c>=</c> <c>datetime</c><c>.</c><c>date(</c><c>2011</c>,<c>0</c><c>1</c>,<c>0</c><c>1</c>)
<c>&gt;&gt;&gt;</c> <c>datetime</c><c>.</c><c>datetime</c><c>.</c><c>utcfromtimestamp(</c><c>time</c><c>.</c><c>mktime(</c><c>d</c><c>.</c><c>timetuple(</c>)))
<c>datetime</c><c>.</c><c>datetime(</c><c>2010</c>, <c>12</c>, <c>31</c>, <c>23</c>, <c>0</c>)
</code>

<t>Converting</t> <t>the</t> <t>date</t> <t>object</t> <t>first</t> <t>to</t> <t>datetime</t> <t>also</t> <t>does</t> <t>not</t> <t>help</t>. <t>I</t> <t>tried</t> <t>the</t> <t>example</t> <t>at</t> <t>this</t> <t>link</t> <t>from</t>, <t>but</t>:

<code><c>from</c> <c>pytz</c> <c>import</c> <c>utc</c>, <c>timezone</c>
<c>from</c> <c>datetime</c> <c>import</c> <c>datetime</c>
<c>from</c> <c>time</c> <c>import</c> <c>mktime</c>
<c>input_date</c> <c>=</c> <c>datetime(</c><c>year</c><c>=</c><c>2011</c>, <c>month</c><c>=</c><c>1</c>, <c>day</c><c>=</c><c>15</c>)
</code>

<t>and</t> <t>now</t> <t>either</t>:

<code><c>mktime(</c><c>utc</c><c>.</c><c>localize(</c><c>input_date</c>)<c>.</c><c>utctimetuple(</c>))
</code>

<t>or</t>

<code><c>mktime(</c><c>timezone(</c>'<c>US</c><c>/Eastern</c>')<c>.</c><c>localize(</c><c>input_date</c>)<c>.</c><c>utctimetuple(</c>))
</code>

<t>does</t> <t>work</t>.

<t>So</t> <t>general</t> <t>question</t>: <t>how</t> <t>can</t> <t>I</t> <t>get</t> <t>a</t> <t>date</t> <t>converted</t> <t>to</t> <t>seconds</t> <t>since</t> <t>epoch</t> <t>according</t> <t>to</t> <t>UTC</t>?
"
8858008|"<t>How</t> <t>to</t> <t>move</t> <t>a</t> <t>file</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>looked</t> <t>into</t> <t>the</t> <t>Python</t> <code><c>os</c></code> <t>interface</t>, <t>but</t> <t>was</t> <t>unable</t> <t>to</t> <t>locate</t> <t>a</t> <t>method</t> <t>to</t> <t>move</t> <t>a</t> <t>file</t>. <t>How</t> <t>would</t> <t>I</t> <t>do</t> <t>the</t> <t>equivalent</t> <t>of</t> <code><c>$</c> <c>mv</c> ...</code> <t>in</t> <t>Python</t>?

<code><c>&gt;&gt;&gt;</c> <c>source_files</c> <c>=</c> '<c>/PATH/TO/FOLDER/*</c>'
<c>&gt;&gt;&gt;</c> <c>destination_folder</c> <c>=</c> '<c>PATH</c><c>/TO/FOLDER</c>'
<c>&gt;&gt;&gt;</c> # <c>equivalent</c> <c>of</c> <c>$</c> <c>mv</c> <c>source_files</c> <c>destination_folder</c>
</code>
"
8885663|"<t>How</t> <t>to</t> <t>format</t> <t>a</t> <t>floating</t> <t>number</t> <t>to</t> <t>fixed</t> <t>width</t> <t>in</t> <t>Python</t>"|"<t>How</t> <t>do</t> <t>I</t> <t>format</t> <t>a</t> <t>floating</t> <t>number</t> <t>to</t> <t>a</t> <t>fixed</t> <t>width</t> <t>with</t> <t>the</t> <t>following</t> <t>requirements</t>:


<t>Leading</t> <t>zero</t> <t>if</t> <t>n</t> <t>&lt;</t> <t>1</t>
<t>Add</t> <t>trailing</t> <t>decimal</t> <t>zero(s</t>) <t>to</t> <t>fill</t> <t>up</t> <t>fixed</t> <t>width</t>
<t>Truncate</t> <t>decimal</t> <t>digits</t> <t>past</t> <t>fixed</t> <t>width</t>
<t>Align</t> <t>all</t> <t>decimal</t> <t>points</t>


<t>For</t> <t>example</t>:

<code><c>%</c> <c>formatter</c> <c>something</c> <c>like</c> '{:<c>0</c><c>6</c>}'
<c>numbers</c> <c>=</c> [<c>23.23</c>, <c>0.123334987</c>, <c>1</c>, <c>4.223</c>, <c>9887.2</c>]

<c>for</c> <c>number</c> <c>in</c> <c>numbers</c>:
    <c>print</c> <c>formatter</c><c>.</c><c>format(</c><c>number</c>)
</code>

<t>The</t> <t>output</t> <t>would</t> <t>be</t> <t>like</t>

<code>  <c>23.2300</c>
   <c>0.1233</c>
   <c>1.0000</c>
   <c>4.2230</c>
<c>9887.2000</c>
</code>
"
8917885|"<t>Which</t> <t>version</t> <t>of</t> <t>Python</t> <t>do</t> <t>I</t> <t>have</t> <t>installed</t>?"|"<t>I</t> <t>have</t> <t>to</t> <t>run</t> <t>a</t> <t>Python</t> <t>script</t> <t>on</t> <t>a</t> <t>Windows</t> <t>server</t>. <t>How</t> <t>can</t> <t>I</t> <t>know</t> <t>which</t> <t>version</t> <t>of</t> <t>Python</t> <t>I</t> <t>have</t>, <t>and</t> <t>does</t> <t>it</t> <t>even</t> <t>really</t> <t>matter</t>? <t>I</t> <t>was</t> <t>thinking</t> <t>of</t> <t>updating</t> <t>to</t> <t>latest</t> <t>version</t> <t>of</t> <t>Python</t>.
"
8930915|"<t>Append</t> <t>dictionary</t> <t>to</t> <t>a</t> <t>dictionary</t>?"|"<t>I</t> <t>have</t> <t>two</t> <t>existing</t> <t>dictionaries</t>, <t>and</t> <t>I</t> <t>wish</t> <t>to</t> '<t>append</t>' <t>one</t> <t>of</t> <t>them</t> <t>to</t> <t>the</t> <t>other</t>. <t>By</t> <t>that</t> <t>I</t> <t>mean</t> <t>that</t> <t>the</t> <t>key</t>,<t>values</t> <t>of</t> <t>the</t> <t>other</t> <t>dictionary</t> <t>should</t> <t>be</t> <t>made</t> <t>into</t> <t>the</t> <t>first</t> <t>dictionary</t>. <t>For</t> <t>example</t>:

<code><c>orig</c> <c>=</c> {
   '<c>A</c>': <c>1</c>,
   '<c>B</c>': <c>2</c>,
   '<c>C</c>': <c>3</c>,
}

<c>extra</c> <c>=</c> {
   '<c>D</c>': <c>4</c>,
   '<c>E</c>': <c>5</c>,
}

<c>dest</c> <c>=</c> # <c>something</c> <c>here</c> <c>involving</c> <c>orig</c> <c>and</c> <c>extra</c>

<c>print</c> <c>dest</c>
{
   '<c>A</c>': <c>1</c>,
   '<c>B</c>': <c>2</c>,
   '<c>C</c>': <c>3</c>,
   '<c>D</c>': <c>4</c>,
   '<c>E</c>': <c>5</c>
}
</code>

<t>I</t> <t>think</t> <t>this</t> <t>all</t> <t>can</t> <t>be</t> <t>achieved</t> <t>through</t> <t>a</t> <code><c>for</c></code> <t>loop</t> (<t>maybe</t>?), <t>but</t> <t>is</t> <t>there</t> <t>some</t> <t>method</t> <t>of</t> <t>dictionaries</t> <t>or</t> <t>any</t> <t>other</t> <t>module</t> <t>that</t> <t>saves</t> <t>this</t> <t>job</t> <t>for</t> <t>me</t>? <t>The</t> <t>actual</t> <t>dictionaries</t> <t>I'm</t> <t>using</t> <t>are</t> <t>really</t> <t>big...</t>
"
8933237|"<t>How</t> <t>to</t> <t>find</t> <t>if</t> <t>directory</t> <t>exists</t> <t>in</t> <t>Python</t>"|"<t>In</t> <t>the</t> <code><c>os</c></code> <t>module</t> <t>in</t> <t>Python</t>, <t>is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>find</t> <t>if</t> <t>a</t> <t>directory</t> <t>exists</t>, <t>something</t> <t>like</t>:

<code><c>&gt;&gt;&gt;</c> <c>os</c><c>.</c><c>direxists(</c><c>os</c><c>.</c><c>path</c><c>.</c><c>join(</c><c>os</c><c>.</c><c>getcwd(</c>)), '<c>new_folder</c>')) # <c>in</c> <c>pseudocode</c>
<c>True</c><c>/False
</c></code>
"
8949252|"<t>Python</t>: <t>Attribute Error</t> <t>-</t> '<t>NoneType</t>' <t>object</t> <t>has</t> <t>no</t> <t>attribute</t> '<t>something</t>'"|"<t>I</t> <t>keep</t> <t>getting</t> <t>an</t> <t>error</t> <t>that</t> <t>says</t>

<code><c>AttributeError</c>: '<c>NoneType</c>' <c>object</c> <c>has</c> <c>no</c> <c>attribute</c> '<c>something</c>'
</code>

<t>The</t> <t>code</t> <t>I</t> <t>have</t> <t>is</t> <t>too</t> <t>long</t> <t>to</t> <t>post</t> <t>here</t>, <t>but</t> <t>I</t> <t>was</t> <t>wondering</t> <t>if</t> <t>someone</t> <t>could</t> <t>give</t> <t>a</t> <t>gist</t> <t>of</t> <t>what</t> <t>general</t> <t>scenarios</t> <t>would</t> <t>be</t> <t>cause</t> <t>this</t> '<t>AttributeError</t>', <t>and</t> <t>what</t> '<t>NoneType</t>' <t>is</t> <t>supposed</t> <t>to</t> <t>mean</t>? (<t>Usually</t> <t>you</t> <t>would</t> <t>receive</t> <t>the</t> <t>name</t> <t>of</t> <t>some</t> <t>object</t> <t>where</t> <t>the</t> <t>code</t> <t>went</t> <t>wrong</t>, <t>but</t> <t>since</t> <t>it</t> <t>gives</t> <t>me</t> '<t>NoneType</t>' <t>I'm</t> <t>not</t> <t>sure</t> <t>how</t> <t>it's</t> <t>possible</t> <t>to</t> <t>narrow</t> <t>down</t> <t>what's</t> <t>going</t> <t>on</t>, <t>other</t> <t>than</t> <t>line</t> <t>#</t>)
"
9001509|"<t>How</t> <t>can</t> <t>I</t> <t>sort</t> <t>a</t> <t>dictionary</t> <t>by</t> <t>key</t>?"|"<t>What</t> <t>would</t> <t>be</t> <t>a</t> <t>nice</t> <t>way</t> <t>to</t> <t>go</t> <t>from</t> <code>{<c>2</c>:<c>3</c>, <c>1</c>:<c>89</c>, <c>4</c>:<c>5</c>, <c>3</c>:<c>0</c>}</code> <t>to</t> <code>{<c>1</c>:<c>89</c>, <c>2</c>:<c>3</c>, <c>3</c>:<c>0</c>, <c>4</c>:<c>5</c>}</code>?
<t>I</t> <t>checked</t> <t>some</t> <t>posts</t> <t>but</t> <t>they</t> <t>all</t> <t>use</t> <t>the</t> ""<t>sorted</t>"" <t>operator</t> <t>that</t> <t>returns</t> <t>tuples</t>. 
"
9039961|"<t>Finding</t> <t>the</t> <t>average</t> <t>of</t> <t>a</t> <t>list</t>"|"<t>I</t> <t>have</t> <t>to</t> <t>find</t> <t>the</t> <t>average</t> <t>of</t> <t>a</t> <t>list</t> <t>in</t> <t>Python</t>. <t>This</t> <t>is</t> <t>my</t> <t>code</t> <t>so</t> <t>far</t>

<code><c>l</c> <c>=</c> [<c>15</c>, <c>18</c>, <c>2</c>, <c>36</c>, <c>12</c>, <c>78</c>, <c>5</c>, <c>6</c>, <c>9</c>]
<c>print</c> <c>reduce(</c><c>lambda</c> <c>x</c>, <c>y</c>: <c>x</c> <c>+</c> <c>y</c>, <c>l</c>)
</code>

<t>I've</t> <t>got</t> <t>it</t> <t>so</t> <t>it</t> <t>adds</t> <t>together</t> <t>the</t> <t>values</t> <t>in</t> <t>the</t> <t>list</t>, <t>but</t> <t>I</t> <t>don't</t> <t>know</t> <t>how</t> <t>to</t> <t>make</t> <t>it</t> <t>divide</t> <t>into</t> <t>them</t>?
"
9252543|"<t>ImportError</t>: <t>Cannot</t> <t>import</t> <t>name</t> <t>X</t>"|"<t>I</t> <t>have</t> <t>four</t> <t>different</t> <t>files</t> <t>named</t>: <t>main</t>, <t>vector</t>, <t>entity</t>, <t>and</t> <t>physics</t>. <t>I</t> <t>will</t> <t>not</t> <t>post</t> <t>all</t> <t>the</t> <t>code</t>, <t>mostly</t> <t>just</t> <t>the</t> <t>imports</t>, <t>because</t> <t>I</t> <t>think</t> <t>that's</t> <t>where</t> <t>the</t> <t>error</t> <t>is</t>. <t>But</t> <t>if</t> <t>you</t> <t>want</t>, <t>I</t> <t>can</t> <t>post</t> <t>more</t>.

<t>Main</t>:

<code><c>import</c> <c>time</c>
<c>from</c> <c>entity</c> <c>import</c> <c>Ent</c>
<c>from</c> <c>vector</c> <c>import</c> <c>Vect</c>
#<c>the</c> <c>rest</c> <c>just</c> <c>creates</c> <c>an</c> <c>entity</c> <c>and</c> <c>prints</c> <c>the</c> <c>result</c> <c>of</c> <c>movement</c>
</code>

<t>Entity</t>:

<code><c>from</c> <c>vector</c> <c>import</c> <c>Vect</c>
<c>from</c> <c>physics</c> <c>import</c> <c>Physics</c>
<c>class</c> <c>Ent</c>:
    #<c>holds</c> <c>vector</c> <c>information</c> <c>and</c> <c>id</c>
<c>def</c> <c>tick(</c><c>self</c>, <c>dt</c>):
    #<c>this</c> <c>is</c> <c>where</c> <c>physics</c> <c>changes</c> <c>the</c> <c>velocity</c> <c>and</c> <c>position</c> <c>vectors</c>
</code>

<t>Vector</t>:

<code><c>from</c> <c>math</c> <c>import</c> <c>*</c>
<c>class</c> <c>Vect</c>:
    #<c>holds</c> <c>i</c>, <c>j</c>, <c>k</c>, <c>and</c> <c>does</c> <c>vector</c> <c>math</c>
</code>

<t>Physics</t>:

<code><c>from</c> <c>entity</c> <c>import</c> <c>Ent</c>
<c>class</c> <c>Physics</c>:
    #<c>physics</c> <c>class</c> <c>gets</c> <c>an</c> <c>entity</c> <c>and</c> <c>does</c> <c>physics</c> <c>calculations</c> <c>on</c> <c>it</c><c>.</c>
</code>

<t>I</t> <t>then</t> <t>run</t> <t>from</t> <t>main</t>.<t>py</t> <t>and</t> <t>I</t> <t>get</t> <t>the</t> <t>following</t> <t>error</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
<c>File</c> ""<c>main</c><c>.</c><c>py</c>"", <c>line</c> <c>2</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>from</c> <c>entity</c> <c>import</c> <c>Ent</c>
<c>File</c> ""...<c>/entity.py</c>"", <c>line</c> <c>5</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>from</c> <c>physics</c> <c>import</c> <c>Physics</c>
<c>File</c> ""...<c>/physics.py</c>"", <c>line</c> <c>2</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>from</c> <c>entity</c> <c>import</c> <c>Ent</c>
<c>ImportError</c>: <c>cannot</c> <c>import</c> <c>name</c> <c>Ent</c>
</code>

<t>I</t> <t>am</t> <t>very</t> <t>new</t> <t>to</t> <t>python</t>, <t>but</t> <t>have</t> <t>worked</t> <t>with</t> <t>C++</t> <t>for</t> <t>a</t> <t>long</t> <t>time</t>. <t>I</t> <t>am</t> <t>guessing</t> <t>that</t> <t>the</t> <t>cause</t> <t>is</t> <t>from</t> <t>importing</t> <t>entity</t> <t>twice</t>, <t>once</t> <t>in</t> <t>main</t>, <t>and</t> <t>later</t> <t>in</t> <t>physics</t>, <t>but</t> <t>I</t> <t>don't</t> <t>know</t> <t>a</t> <t>workaround</t>. <t>Anyone</t> <t>help</t>?
"
9257094|"<t>How</t> <t>to</t> <t>change</t> <t>a</t> <t>string</t> <t>into</t> <t>uppercase</t>"|"<t>I</t> <t>have</t> <t>problem</t> <t>in</t> <t>changing</t> <t>a</t> <t>string</t> <t>into</t> <t>uppercase</t> <t>with</t> <t>Python</t>. <t>In</t> <t>my</t> <t>research</t>, <t>I</t> <t>got</t> <code><c>string</c><c>.</c><c>ascii_uppercase</c></code> <t>but</t> <t>it</t> <t>doesn't</t> <t>work</t>.

<t>The</t> <t>following</t> <t>code</t>:

<code> <c>&gt;&gt;</c><c>s</c> <c>=</c> '<c>sdsd</c>'
 <c>&gt;&gt;</c><c>s</c><c>.</c><c>ascii_uppercase</c>
</code>

<t>Gives</t> <t>this</t> <t>error</t> <t>message</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>&lt;</c><c>console</c><c>&gt;</c>"", <c>line</c> <c>1</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
<c>AttributeError</c>: '<c>str</c>' <c>object</c> <c>has</c> <c>no</c> <c>attribute</c> '<c>ascii_uppercase</c>'
</code>

<t>My</t> <t>question</t> <t>is</t>: <t>how</t> <t>can</t> <t>I</t> <t>convert</t> <t>a</t> <t>string</t> <t>into</t> <t>uppercase</t> <t>in</t> <t>Python</t>?
"
9316023|"<t>Python</t> <t>2.7</t>: <t>Print</t> <t>to</t> <t>File</t>"|"<t>Why</t> <t>does</t> <t>trying</t> <t>to</t> <t>print</t> <t>directly</t> <t>to</t> <t>a</t> <t>file</t> <t>instead</t> <t>of</t> <code><c>sys</c><c>.</c><c>stdout</c></code> <t>produce</t> <t>the</t> <t>following</t> <t>syntax</t> <t>error</t>:

<code><c>Python</c> <c>2.7.2</c><c>+</c> (<c>default</c>, <c>Oct</c>  <c>4</c> <c>2011</c>, <c>20</c>:<c>0</c><c>6</c>:<c>0</c><c>9</c>)
[<c>GCC</c> <c>4.6.1</c>] <c>on</c> <c>linux2</c>
<c>Type</c> ""<c>help</c>"", ""<c>copyright</c>"", ""<c>credits</c>"" <c>or</c> ""<c>license</c>"" <c>for</c> <c>more</c> <c>information</c><c>.</c>
<c>&gt;&gt;&gt;</c> <c>f1</c><c>=</c><c>open(</c>'<c>.</c><c>/testfile</c>', '<c>w</c><c>+</c>')
<c>&gt;&gt;&gt;</c> <c>print(</c>'<c>This</c> <c>is</c> <c>a</c> <c>test</c>', <c>file</c><c>=</c><c>f1</c>)
  <c>File</c> ""<c>&lt;</c><c>stdin</c><c>&gt;</c>"", <c>line</c> <c>1</c>
    <c>print(</c>'<c>This</c> <c>is</c> <c>a</c> <c>test</c>', <c>file</c><c>=</c><c>f1</c>)
                            <c>^</c>
<c>SyntaxError</c>: <c>invalid</c> <c>syntax</c>
</code>

<t>From</t> <t>help(__builtins__</t>) <t>I</t> <t>have</t> <t>the</t> <t>following</t> <t>info</t>:

<code><c>print(</c>...)
    <c>print(</c><c>value</c>, ..., <c>sep</c><c>=</c>' ', <c>end</c><c>=</c>'<c>\n</c>', <c>file</c><c>=</c><c>sys</c><c>.</c><c>stdout</c>)

    <c>Prints</c> <c>the</c> <c>values</c> <c>to</c> <c>a</c> <c>stream</c>, <c>or</c> <c>to</c> <c>sys</c><c>.</c><c>stdout</c> <c>by</c> <c>default</c><c>.</c>
    <c>Optional</c> <c>keyword</c> <c>arguments</c>:
    <c>file</c>: <c>a</c> <c>file-like</c> <c>object</c> (<c>stream</c>); <c>defaults</c> <c>to</c> <c>the</c> <c>current</c> <c>sys</c><c>.</c><c>stdout</c><c>.</c>
    <c>sep</c>:  <c>string</c> <c>inserted</c> <c>between</c> <c>values</c>, <c>default</c> <c>a</c> <c>space</c><c>.</c>
    <c>end</c>:  <c>string</c> <c>appended</c> <c>after</c> <c>the</c> <c>last</c> <c>value</c>, <c>default</c> <c>a</c> <c>newline</c><c>.</c>
</code>

<t>So</t> <t>what</t> <t>would</t> <t>be</t> <t>the</t> <t>right</t> <t>syntax</t> <t>to</t> <t>change</t> <t>the</t> <t>standard</t> <t>stream</t> <t>print</t> <t>writes</t> <t>to</t>?

<t>I</t> <t>know</t> <t>that</t> <t>there</t> <t>are</t> <t>different</t> <t>maybe</t> <t>better</t> <t>ways</t> <t>to</t> <t>write</t> <t>to</t> <t>file</t> <t>but</t> <t>I</t> <t>really</t> <t>don't</t> <t>get</t> <t>why</t> <t>this</t> <t>should</t> <t>be</t> <t>a</t> <t>syntax</t> <t>error...</t>

<t>A</t> <t>nice</t> <t>explanation</t> <t>would</t> <t>be</t> <t>appreciated</t>!
"
9542738|"<t>Python</t>: <t>Find</t> <t>in</t> <t>list</t>"|"<t>I</t> <t>have</t> <t>come</t> <t>across</t> <t>this</t> <t>delightful</t>:

<code><c>item</c> <c>=</c> <c>someSortOfSelection(</c>)
<c>if</c> <c>item</c> <c>in</c> <c>myList</c>:
    <c>doMySpecialFunction(</c><c>item</c>)
</code>

<t>but</t> <t>sometimes</t> <t>it</t> <t>does</t> <t>not</t> <t>work</t> <t>with</t> <t>all</t> <t>my</t> <t>items</t>, <t>as</t> <t>if</t> <t>they</t> <t>weren't</t> <t>recognized</t> <t>in</t> <t>the</t> <t>list</t> (<t>when</t> <t>it's</t> <t>a</t> <t>list</t> <t>of</t> <t>string</t>).

<t>is</t> <t>it</t> <t>the</t> <t>most</t> '<t>pythonic</t>' <t>way</t> <t>of</t> <t>finding</t> <t>an</t> <t>item</t> <t>in</t> <t>a</t> <t>list</t>: <code><c>if</c> <c>x</c> <c>in</c> <c>l</c>:</code>?
"
9573244|"<t>Most</t> <t>elegant</t> <t>way</t> <t>to</t> <t>check</t> <t>if</t> <t>the</t> <t>string</t> <t>is</t> <t>empty</t> <t>in</t> <t>Python</t>?"|"<t>Does Python</t> <t>have</t> <t>something</t> <t>like</t> <t>an</t> <t>empty</t> <t>string</t> <t>variable</t> <t>where</t> <t>you</t> <t>can</t> <t>do</t>?:

<code><c>if</c> <c>myString</c> <c>==</c> <c>string</c><c>.</c><c>empty</c>:
</code>

<t>Regardless</t> <t>what's</t> <t>the</t> <t>most</t> <t>elegant</t> <t>way</t> <t>to</t> <t>check</t> <t>for</t> <t>empty</t> <t>string</t> <t>values</t>? <t>I</t> <t>find</t> <t>hard</t> <t>coding</t> <code>""""</code> <t>every</t> <t>time</t> <t>for</t> <t>checking</t> <t>an</t> <t>empty</t> <t>string</t> <t>not</t> <t>as</t> <t>good</t>.
"
9622163|"<t>Save</t> <t>plot</t> <t>to</t> <t>image</t> <t>file</t> <t>instead</t> <t>of</t> <t>displaying</t> <t>it</t> <t>using</t> <t>Matplotlib</t>"|"<t>I</t> <t>am</t> <t>writing</t> <t>a</t> <t>quick-and-dirty</t> <t>script</t> <t>to</t> <t>generate</t> <t>plots</t> <t>on</t> <t>the</t> <t>fly</t>. <t>I</t> <t>am</t> <t>using</t> <t>the</t> <t>code</t> <t>below</t> (<t>from</t> <t>Matplotlib</t> <t>documentation</t>) <t>as</t> <t>a</t> <t>starting</t> <t>point</t>:

<code><c>from</c> <c>pylab</c> <c>import</c> <c>figure</c>, <c>axes</c>, <c>pie</c>, <c>title</c>, <c>show</c>

# <c>Make</c> <c>a</c> <c>square</c> <c>figure</c> <c>and</c> <c>axes</c>
<c>figure(</c><c>1</c>, <c>figsize</c><c>=</c>(<c>6</c>, <c>6</c>))
<c>ax</c> <c>=</c> <c>axes(</c>[<c>0.1</c>, <c>0.1</c>, <c>0.8</c>, <c>0.8</c>])

<c>labels</c> <c>=</c> '<c>Frogs</c>', '<c>Hogs</c>', '<c>Dogs</c>', '<c>Logs</c>'
<c>fracs</c> <c>=</c> [<c>15</c>, <c>30</c>, <c>45</c>, <c>10</c>]

<c>explode</c> <c>=</c> (<c>0</c>, <c>0.05</c>, <c>0</c>, <c>0</c>)
<c>pie(</c><c>fracs</c>, <c>explode</c><c>=</c><c>explode</c>, <c>labels</c><c>=</c><c>labels</c>, <c>autopct</c><c>=</c>'<c>%</c><c>1.1</c><c>f</c><c>%</c><c>%</c>', <c>shadow</c><c>=</c><c>True</c>)
<c>title(</c>'<c>Raining</c> <c>Hogs</c> <c>and</c> <c>Dogs</c>', <c>bbox</c><c>=</c>{'<c>facecolor</c>': '<c>0.8</c>', '<c>pad</c>': <c>5</c>})

<c>show(</c>)  # <c>Actually</c>, <c>don</c>'<c>t</c> <c>show</c>, <c>just</c> <c>save</c> <c>to</c> <c>foo</c><c>.</c><c>png</c>
</code>

<t>I</t> <t>don't</t> <t>want</t> <t>to</t> <t>display</t> <t>the</t> <t>plot</t> <t>on</t> <t>a</t> <t>GUI</t>, <t>instead</t>, <t>I</t> <t>want</t> <t>to</t> <t>save</t> <t>the</t> <t>plot</t> <t>to</t> <t>a</t> <t>file</t> (<t>say</t> <t>foo</t>.<t>png</t>), <t>so</t> <t>that</t>, <t>for</t> <t>example</t>, <t>it</t> <t>can</t> <t>be</t> <t>used</t> <t>in</t> <t>batch</t> <t>scripts</t>. <t>How</t> <t>do</t> <t>I</t> <t>do</t> <t>that</t>?
"
9641440|"<t>Convert</t> <t>from</t> <t>ASCII</t> <t>string</t> <t>encoded</t> <t>in</t> <t>Hex</t> <t>to</t> <t>plain</t> <t>ASCII</t>?"|"<t>How</t> <t>can</t> <t>I</t> <t>convert</t> <t>from</t> <t>hex</t> <t>to</t> <t>plain</t> <t>ASCII</t> <t>in</t> <t>Python</t>?

<t>Note</t> <t>that</t>, <t>for</t> <t>example</t>, <t>I</t> <t>want</t> <t>to</t> <t>convert</t> ""<t>0x7061756c</t>"" <t>to</t> ""<t>paul</t>"".
"
9733638|"<t>Post JSON</t> <t>using</t> <t>Python</t> <t>Requests</t>"|"<t>I</t> <t>need</t> <t>to</t> <t>POST</t> <t>a</t> <t>JSON</t> <t>from</t> <t>a</t> <t>client</t> <t>to</t> <t>a</t> <t>server</t>. <t>I'm</t> <t>using</t> <t>Python</t> <t>2.7.1</t> <t>and</t> <t>simplejson</t>. <t>The</t> <t>client</t> <t>is</t> <t>using</t> <t>Requests</t>. <t>The</t> <t>server</t> <t>is</t> <t>CherryPy</t>. <t>I</t> <t>can</t> <t>GET</t> <t>a</t> <t>hard-coded</t> <t>JSON</t> <t>from</t> <t>the</t> <t>server</t> (<t>code</t> <t>not</t> <t>shown</t>), <t>but</t> <t>when</t> <t>I</t> <t>try</t> <t>to</t> <t>POST</t> <t>a</t> <t>JSON</t> <t>to</t> <t>the</t> <t>server</t>, <t>I</t> <t>get</t> ""<t>400</t> <t>Bad</t> <t>Request</t>"".

<t>Here</t> <t>is</t> <t>my</t> <t>client</t> <t>code</t>:

<code><c>data</c> <c>=</c> {'<c>sender</c>':   '<c>Alice</c>',
    '<c>receiver</c>': '<c>Bob</c>',
    '<c>message</c>':  '<c>We</c> <c>did</c> <c>it</c><c>!</c>'}
<c>data_json</c> <c>=</c> <c>simplejson</c><c>.</c><c>dumps(</c><c>data</c>)
<c>payload</c> <c>=</c> {'<c>json_payload</c>': <c>data_json</c>}
<c>r</c> <c>=</c> <c>requests</c><c>.</c><c>post(</c>""<c>htt</c><c>p://localhost:8080</c>"", <c>data</c><c>=</c><c>payload</c>)
</code>

<t>Here</t> <t>is</t> <t>the</t> <t>server</t> <t>code</t>.

<code><c>class</c> <c>Root(</c><c>object</c>):

    <c>def</c> <c>__init__(</c><c>self</c>, <c>content</c>):
        <c>self</c><c>.</c><c>content</c> <c>=</c> <c>content</c>
        <c>print</c> <c>self</c><c>.</c><c>content</c>  # <c>this</c> <c>works</c>

    <c>exposed</c> <c>=</c> <c>True</c>

    <c>def</c> <c>GET(</c><c>self</c>):
        <c>cherrypy</c><c>.</c><c>response</c><c>.</c><c>headers</c>['<c>Content-Type</c>'] <c>=</c> '<c>application</c><c>/json</c>'
        <c>return</c> <c>simplejson</c><c>.</c><c>dumps(</c><c>self</c><c>.</c><c>content</c>)

    <c>def</c> <c>POST(</c><c>self</c>):
        <c>self</c><c>.</c><c>content</c> <c>=</c> <c>simplejson</c><c>.</c><c>loads(</c><c>cherrypy</c><c>.</c><c>request</c><c>.</c><c>body</c><c>.</c><c>read(</c>))
</code>

<t>Any</t> <t>ideas</t>?
"
9752958|"<t>How</t> <t>can</t> <t>I</t> <t>return</t> <t>two</t> <t>values</t> <t>from</t> <t>a</t> <t>function</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>return</t> <t>two</t> <t>values</t> <t>from</t> <t>a</t> <t>function</t> <t>in</t> <t>two</t> <t>separate</t> <t>variables</t>. 
<t>For</t> <t>example</t>:

<code><c>def</c> <c>select_choice(</c>):
    <c>loop</c> <c>=</c> <c>1</c>
    <c>row</c> <c>=</c> <c>0</c>
    <c>while</c> <c>loop</c> <c>==</c> <c>1</c>:
        <c>print(</c>'''Choose from the following options?:
                 1. Row 1
                 2. Row 2
                 3. Row 3''')

        <c>row</c> <c>=</c> <c>int(</c><c>input(</c>""<c>Which</c> <c>row</c> <c>would</c> <c>you</c> <c>like</c> <c>to</c> <c>move</c> <c>the</c> <c>card</c> <c>from</c><c>?</c>: ""))
        <c>if</c> <c>row</c> <c>==</c> <c>1</c>:
            <c>i</c> <c>=</c> <c>2</c>
            <c>card</c> <c>=</c> <c>list_a</c>[<c>-</c><c>1</c>]
        <c>elif</c> <c>row</c> <c>==</c> <c>2</c>:
            <c>i</c> <c>=</c> <c>1</c>
            <c>card</c> <c>=</c> <c>list_b</c>[<c>-</c><c>1</c>]
        <c>elif</c> <c>row</c> <c>==</c> <c>3</c>:
            <c>i</c> <c>=</c> <c>0</c>
            <c>card</c> <c>=</c> <c>list_c</c>[<c>-</c><c>1</c>]
        <c>return</c> <c>i</c>
        <c>return</c> <c>card</c>
</code>

<t>And</t> <t>I</t> <t>want</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>use</t> <t>these</t> <t>values</t> <t>separately</t>. <t>When</t> <t>I</t> <t>tried</t> <t>to</t> <t>use</t> <code><c>return</c> <c>i</c>, <c>card</c></code>, <t>it</t> <t>returns</t> <t>a</t> <code><c>tuple</c></code> <t>and</t> <t>this</t> <t>is</t> <t>not</t> <t>what</t> <t>I</t> <t>want</t>. 
"
9780717|"<t>bash</t>: <t>pip</t>: <t>command</t> <t>not</t> <t>found</t>"|"<t>I</t> <t>downloaded</t> <t>pip</t> <t>and</t> <t>ran</t> <code><c>python</c> <c>setup</c><c>.</c><c>py</c> <c>install</c></code> <t>and</t> <t>everything</t> <t>worked</t> <t>just</t> <t>fine</t>. <t>The</t> <t>very</t> <t>next</t> <t>step</t> <t>in</t> <t>the</t> <t>tutorial</t> <t>is</t> <t>to</t> <t>run</t> <code><c>pip</c> <c>install</c> <c>&lt;</c><c>lib</c> <c>you</c> <c>want</c><c>&gt;</c></code> <t>but</t> <t>before</t> <t>it</t> <t>even</t> <t>tries</t> <t>to</t> <t>find</t> <t>anything</t> <t>online</t> <t>I</t> <t>get</t> <t>an</t> <t>error</t> ""<t>bash</t>: <t>pip</t>: <t>command</t> <t>not</t> <t>found</t>"".

<t>This</t> <t>is</t> <t>on</t> <t>Mac OS</t> <t>X</t>, <t>which</t> <t>I'm</t> <t>new</t> <t>too</t>, <t>so</t> <t>I'm</t> <t>assuming</t> <t>there's</t> <t>some</t> <t>kind</t> <t>of</t> <t>path</t> <t>setting</t> <t>that</t> <t>was</t> <t>not</t> <t>set</t> <t>correctly</t> <t>when</t> <t>I</t> <t>ran</t> <t>setup.py.</t> <t>How</t> <t>can</t> <t>I</t> <t>investigate</t> <t>further</t>? <t>What</t> <t>do</t> <t>I</t> <t>need</t> <t>to</t> <t>check</t> <t>to</t> <t>get</t> <t>a</t> <t>better</t> <t>idea</t> <t>of</t> <t>the</t> <t>exact</t> <t>cause</t> <t>of</t> <t>the</t> <t>problem</t>?

<t>EDIT</t>: <t>I</t> <t>also</t> <t>tried</t> <t>installing</t> <t>Python</t> <t>2.7</t> <t>for</t> <t>Mac</t> <t>in</t> <t>the</t> <t>hopes</t> <t>that</t> <t>the</t> <t>friendly</t> <t>install</t> <t>process</t> <t>would</t> <t>do</t> <t>any</t> <t>housekeeping</t> <t>like</t> <t>editing</t> <t>PATH</t> <t>and</t> <t>whatever</t> <t>else</t> <t>needs</t> <t>to</t> <t>happy</t> <t>for</t> <t>everything</t> <t>to</t> <t>work</t> <t>according</t> <t>to</t> <t>the</t> <t>tutorials</t>, <t>but</t> <t>this</t> <t>didn't</t> <t>work</t>. <t>After</t> <t>installing</t> <t>is</t> <t>running</t> '<t>python</t>' <t>still</t> <t>ran</t> <t>Python</t> <t>2.6</t> <t>and</t> <t>PATH</t> <t>was</t> <t>not</t> <t>updated</t>.
"
9835762|"<t>Find</t> <t>and</t> <t>list</t> <t>duplicates</t> <t>in</t> <t>a</t> <t>list</t>?"|"<t>How</t> <t>can</t> <t>I</t> <t>find</t> <t>the</t> <t>duplicates</t> <t>in</t> <t>a</t> <t>Python</t> <t>list</t> <t>and</t> <t>create</t> <t>another</t> <t>list</t> <t>of</t> <t>the</t> <t>duplicates</t>?  <t>The</t> <t>list</t> <t>is</t> <t>just</t> <t>integers</t>.
"
9847213|"<t>which</t> <t>day</t> <t>of</t> <t>week</t> <t>given</t> <t>a</t> <t>date</t> <t>python</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>find</t> <t>out</t> <t>the</t> <t>following</t>:
<t>given</t> <t>a</t> <t>date</t> (<code><c>datetime</c></code> <t>object</t>), <t>what</t> <t>is</t> <t>the</t> <t>corresponding</t> <t>day</t> <t>of</t> <t>the</t> <t>week</t>.

<t>For</t> <t>instance</t> <t>Sunday</t> <t>is</t> <t>the</t> <t>first</t> <t>day</t>, <t>Monday</t>: <t>second</t> <t>day..</t> <t>and</t> <t>so</t> <t>on</t>

<t>And</t> <t>then</t> <t>if</t> <t>the</t> <t>input</t> <t>is</t> <t>something</t> <t>like</t> <t>Today's</t> <t>date</t>.
<t>The</t> <t>output</t> <t>is</t> <t>maybe</t> <code><c>6</c></code> (<t>since</t> <t>its</t> <t>Friday</t>)
"
9942594|"<t>UnicodeEncodeError</t>: '<t>ascii</t>' <t>codec</t> <t>can't</t> <t>encode</t> <t>character</t> <t>u'\xa0</t>' <t>in</t> <t>position</t> <t>20</t>: <t>ordinal</t> <t>not</t> <t>in</t> <t>range(128</t>)"|"<t>I'm</t> <t>having</t> <t>problems</t> <t>dealing</t> <t>with</t> <t>unicode</t> <t>characters</t> <t>from</t> <t>text</t> <t>fetched</t> <t>from</t> <t>different</t> <t>web</t> <t>pages</t> (<t>on</t> <t>different</t> <t>sites</t>). <t>I</t> <t>am</t> <t>using</t> <t>BeautifulSoup</t>. 

<t>The</t> <t>problem</t> <t>is</t> <t>that</t> <t>the</t> <t>error</t> <t>is</t> <t>not</t> <t>always</t> <t>reproducible;</t> <t>it</t> <t>sometimes</t> <t>works</t> <t>with</t> <t>some</t> <t>pages</t>, <t>and</t> <t>sometimes</t>, <t>it</t> <t>barfs</t> <t>by</t> <t>throwing</t> <t>a</t> <code><c>UnicodeEncodeError</c></code>. <t>I</t> <t>have</t> <t>tried</t> <t>just</t> <t>about</t> <t>everything</t> <t>I</t> <t>can</t> <t>think</t> <t>of</t>, <t>and</t> <t>yet</t> <t>I</t> <t>have</t> <t>not</t> <t>found</t> <t>anything</t> <t>that</t> <t>works</t> <t>consistently</t> <t>without</t> <t>throwing</t> <t>some</t> <t>kind</t> <t>of</t> <t>Unicode-related</t> <t>error</t>.

<t>One</t> <t>of</t> <t>the</t> <t>sections</t> <t>of</t> <t>code</t> <t>that</t> <t>is</t> <t>causing</t> <t>problems</t> <t>is</t> <t>shown</t> <t>below</t>:

<code><c>agent_telno</c> <c>=</c> <c>agent</c><c>.</c><c>find(</c>'<c>div</c>', '<c>agent_contact_number</c>')
<c>agent_telno</c> <c>=</c> '' <c>if</c> <c>agent_telno</c> <c>is</c> <c>None</c> <c>else</c> <c>agent_telno</c><c>.</c><c>contents</c>[<c>0</c>]
<c>p</c><c>.</c><c>agent_info</c> <c>=</c> <c>str(</c><c>agent_contact</c> <c>+</c> ' ' <c>+</c> <c>agent_telno</c>)<c>.</c><c>strip(</c>)
</code>

<t>Here</t> <t>is</t> <t>a</t> <t>stack</t> <t>trace</t> <t>produced</t> <t>on</t> <t>SOME</t> <t>strings</t> <t>when</t> <t>the</t> <t>snippet</t> <t>above</t> <t>is</t> <t>run</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>foobar</c><c>.</c><c>py</c>"", <c>line</c> <c>792</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>p</c><c>.</c><c>agent_info</c> <c>=</c> <c>str(</c><c>agent_contact</c> <c>+</c> ' ' <c>+</c> <c>agent_telno</c>)<c>.</c><c>strip(</c>)
<c>UnicodeEncodeError</c>: '<c>ascii</c>' <c>codec</c> <c>can</c>'<c>t</c> <c>encode</c> <c>character</c> <c>u</c>'<c>\xa0</c>' <c>in</c> <c>position</c> <c>20</c>: <c>ordinal</c> <c>not</c> <c>in</c> <c>range(</c><c>128</c>)
</code>

<t>I</t> <t>suspect</t> <t>that</t> <t>this</t> <t>is</t> <t>because</t> <t>some</t> <t>pages</t> (<t>or</t> <t>more</t> <t>specifically</t>, <t>pages</t> <t>from</t> <t>some</t> <t>of</t> <t>the</t> <t>sites</t>) <t>may</t> <t>be</t> <t>encoded</t>, <t>whilst</t> <t>others</t> <t>may</t> <t>be</t> <t>unencoded</t>. <t>All</t> <t>the</t> <t>sites</t> <t>are</t> <t>based</t> <t>in</t> <t>the</t> <t>UK</t> <t>and</t> <t>provide</t> <t>data</t> <t>meant</t> <t>for</t> <t>UK</t> <t>consumption</t> <t>-</t> <t>so</t> <t>there</t> <t>are</t> <t>no</t> <t>issues</t> <t>relating</t> <t>to</t> <t>internalization</t> <t>or</t> <t>dealing</t> <t>with</t> <t>text</t> <t>written</t> <t>in</t> <t>anything</t> <t>other</t> <t>than</t> <t>English</t>.

<t>Does</t> <t>anyone</t> <t>have</t> <t>any</t> <t>ideas</t> <t>as</t> <t>to</t> <t>how</t> <t>to</t> <t>solve</t> <t>this</t> <t>so</t> <t>that</t> <t>I</t> <t>can</t> <t>CONSISTENTLY</t> <t>fix</t> <t>this</t> <t>problem</t>?
"
10017147|"<t>Removing</t> <t>a</t> <t>list</t> <t>of</t> <t>characters</t> <t>in</t> <t>string</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>remove</t> <t>characters</t> <t>in</t> <t>a</t> <t>string</t> <t>in</t> <t>python</t>:

<code><c>string</c><c>.</c><c>replace(</c>',', '')<c>.</c><c>replace(</c>""<c>!</c>"", '')<c>.</c><c>replace(</c>"":"", '')<c>.</c><c>replace(</c>"";"", '')...
</code>

<t>But</t> <t>I</t> <t>have</t> <t>many</t> <t>characters</t> <t>I</t> <t>have</t> <t>to</t> <t>remove</t>. <t>I</t> <t>thought</t> <t>about</t> <t>a</t> <t>list</t>

<code><c>list</c> <c>=</c> [',', '<c>!</c>', '<c>.</c>', ';'...]
</code>

<t>But</t> <t>how</t> <t>can</t> <t>I</t> <t>use</t> <t>the</t> <code><c>list</c></code> <t>to</t> <t>replace</t> <t>the</t> <t>characters</t> <t>in</t> <t>the</t> <code><c>string</c></code>?
"
10116518|"<t>I'm</t> <t>getting</t> <t>Key</t> <t>error</t> <t>in</t> <t>python</t>"|"<t>In</t> <t>my</t> <t>python</t> <t>program</t> <t>I</t> <t>am</t> <t>getting</t> <t>this</t> <t>error</t>:

<code><c>KeyError</c>: '<c>variablename</c>'
</code>

<t>From</t> <t>this</t> <t>code</t>:

<code><c>path</c> <c>=</c> <c>meta_entry</c>['<c>path</c>']<c>.</c><c>strip(</c>'<c>/</c>'),
</code>

<t>Can</t> <t>anyone</t> <t>please</t> <t>explain</t> <t>why</t> <t>this</t> <t>is</t> <t>happening</t>?
"
10147455|"<t>How</t> <t>to</t> <t>send</t> <t>an</t> <t>email</t> <t>with</t> <t>Gmail</t> <t>as</t> <t>provider</t> <t>using</t> <t>Python</t>?"|"<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>send</t> <t>email</t> (<t>Gmail</t>) <t>using</t> <t>python</t>, <t>but</t> <t>I</t> <t>am</t> <t>getting</t> <t>following</t> <t>error</t>.

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):  
<c>File</c> ""<c>emailSend</c><c>.</c><c>py</c>"", <c>line</c> <c>14</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>  
<c>server</c><c>.</c><c>login(</c><c>username</c>,<c>password</c>)  
<c>File</c> ""<c>/usr/lib/python2.5/smtplib.py</c>"", <c>line</c> <c>554</c>, <c>in</c> <c>login</c>  
<c>raise</c> <c>SMTPException(</c>""<c>SMTP</c> <c>AUTH</c> <c>extension</c> <c>not</c> <c>supported</c> <c>by</c> <c>server</c><c>.</c>"")  
<c>smtplib</c><c>.</c><c>SMTPException</c>: <c>SMTP</c> <c>AUTH</c> <c>extension</c> <c>not</c> <c>supported</c> <c>by</c> <c>server</c><c>.</c>
</code>

<t>The Python</t> <t>script</t> <t>is</t> <t>the</t> <t>following</t>.

<code><c>import</c> <c>smtplib</c>
<c>fromaddr</c> <c>=</c> '<c>user_me</c><c>@</c><c>gmail</c><c>.</c><c>com</c>'
<c>toaddrs</c>  <c>=</c> '<c>user_you</c><c>@</c><c>gmail</c><c>.</c><c>com</c>'
<c>msg</c> <c>=</c> '<c>Why</c>,<c>Oh</c> <c>why</c><c>!</c>'
<c>username</c> <c>=</c> '<c>user_me</c><c>@</c><c>gmail</c><c>.</c><c>com</c>'
<c>password</c> <c>=</c> '<c>pwd</c>'
<c>server</c> <c>=</c> <c>smtplib</c><c>.</c><c>SMTP(</c>'<c>smtp</c><c>.</c><c>gmail</c><c>.</c><c>com</c>:<c>587</c>')
<c>server</c><c>.</c><c>starttls(</c>)
<c>server</c><c>.</c><c>login(</c><c>username</c>,<c>password</c>)
<c>server</c><c>.</c><c>sendmail(</c><c>fromaddr</c>, <c>toaddrs</c>, <c>msg</c>)
<c>server</c><c>.</c><c>quit(</c>)
</code>
"
10434599|"<t>How</t> <t>to</t> <t>get</t> <t>data</t> <t>received</t> <t>in</t> <t>Flask</t> <t>request</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>get</t> <t>the</t> <t>data</t> <t>sent</t> <t>to</t> <t>my</t> <t>Flask</t> <t>app</t>.  <t>I've</t> <t>tried</t> <t>accessing</t> <code><c>request</c><c>.</c><c>data</c></code> <t>but</t> <t>it</t> <t>is</t> <t>an</t> <t>empty</t> <t>string</t>. <t>How</t> <t>do</t> <t>you</t> <t>access</t> <t>request</t> <t>data</t>?

<code><c>@</c><c>app</c><c>.</c><c>route(</c>'<c>/</c>', <c>methods</c><c>=</c>['<c>GET</c>', '<c>POST</c>'])
<c>def</c> <c>parse_request(</c>):
    <c>data</c> <c>=</c> <c>request</c><c>.</c><c>data</c>  # <c>data</c> <c>is</c> <c>empty</c>
    # <c>need</c> <c>posted</c> <c>data</c> <c>here</c>
</code>



<t>The</t> <t>answer</t> <t>to</t> <t>this</t> <t>question</t> <t>led</t> <t>me</t> <t>to</t> <t>ask</t> <t>Get</t> <t>raw</t> <t>POST</t> <t>body</t> <t>in</t> <t>Python Flask</t> <t>regardless</t> <t>of</t> <t>Content-Type</t> <t>header</t> <t>next</t>, <t>which</t> <t>is</t> <t>about</t> <t>getting</t> <t>the</t> <t>raw</t> <t>data</t> <t>rather</t> <t>than</t> <t>the</t> <t>parsed</t> <t>data</t>.
"
10458437|"<t>What</t> <t>is</t> <t>the</t> <t>difference</t> <t>between</t> <t>dict</t>.<t>items</t>() <t>and</t> <t>dict</t>.<t>iteritems</t>()?"|"<t>Are</t> <t>there</t> <t>any</t> <t>applicable</t> <t>differences</t> <t>between</t> <code><c>dict</c><c>.</c><c>items(</c>)</code> <t>and</t> <code><c>dict</c><c>.</c><c>iteritems(</c>)</code>?

<t>From</t> <t>the</t> <t>Python</t> <t>docs</t>:


  <code><c>dict</c><c>.</c><c>items(</c>)</code>: <t>Return</t> <t>a</t> <t>copy</t> <t>of</t> <t>the</t> <t>dictionary’s</t> <t>list</t> <t>of</t> (<t>key</t>, <t>value</t>) <t>pairs</t>.
  
  <code><c>dict</c><c>.</c><c>iteritems(</c>)</code>: <t>Return</t> <t>an</t> <t>iterator</t> <t>over</t> <t>the</t> <t>dictionary’s</t> (<t>key</t>, <t>value</t>) <t>pairs</t>.


<t>If</t> <t>I</t> <t>run</t> <t>the</t> <t>code</t> <t>below</t>, <t>each</t> <t>seems</t> <t>to</t> <t>return</t> <t>a</t> <t>reference</t> <t>to</t> <t>the</t> <t>same</t> <t>object</t>. <t>Are</t> <t>there</t> <t>any</t> <t>subtle</t> <t>differences</t> <t>that</t> <t>I</t> <t>am</t> <t>missing</t>?

<code>#<c>!</c><c>/usr/bin/python

d={1:</c>'<c>one</c>',<c>2</c>:'<c>two</c>',<c>3</c>:'<c>three</c>'}
<c>print</c> '<c>d</c><c>.</c><c>items(</c>):'
<c>for</c> <c>k</c>,<c>v</c> <c>in</c> <c>d</c><c>.</c><c>items(</c>):
   <c>if</c> <c>d</c>[<c>k</c>] <c>is</c> <c>v</c>: <c>print</c> '<c>\tthey</c> <c>are</c> <c>the</c> <c>same</c> <c>object</c>' 
   <c>else</c>: <c>print</c> '<c>\tthey</c> <c>are</c> <c>different</c>'

<c>print</c> '<c>d</c><c>.</c><c>iteritems(</c>):'   
<c>for</c> <c>k</c>,<c>v</c> <c>in</c> <c>d</c><c>.</c><c>iteritems(</c>):
   <c>if</c> <c>d</c>[<c>k</c>] <c>is</c> <c>v</c>: <c>print</c> '<c>\tthey</c> <c>are</c> <c>the</c> <c>same</c> <c>object</c>' 
   <c>else</c>: <c>print</c> '<c>\tthey</c> <c>are</c> <c>different</c>'   
</code>

<t>Output</t>:

<code><c>d</c><c>.</c><c>items(</c>):
    <c>they</c> <c>are</c> <c>the</c> <c>same</c> <c>object</c>
    <c>they</c> <c>are</c> <c>the</c> <c>same</c> <c>object</c>
    <c>they</c> <c>are</c> <c>the</c> <c>same</c> <c>object</c>
<c>d</c><c>.</c><c>iteritems(</c>):
    <c>they</c> <c>are</c> <c>the</c> <c>same</c> <c>object</c>
    <c>they</c> <c>are</c> <c>the</c> <c>same</c> <c>object</c>
    <c>they</c> <c>are</c> <c>the</c> <c>same</c> <c>object</c>
</code>
"
10561923|"<t>UnicodeDecodeError</t>: '<t>ascii</t>' <t>codec</t> <t>can't</t> <t>decode</t> <t>byte</t> <t>0xef</t> <t>in</t> <t>position</t> <t>1</t>"|"<t>I'm</t> <t>having</t> <t>a</t> <t>few</t> <t>issues</t> <t>trying</t> <t>to</t> <t>encode</t> <t>a</t> <t>string</t> <t>to</t> <t>UTF-8</t>. <t>I've</t> <t>tried</t> <t>numerous</t> <t>things</t>, <t>including</t> <t>using</t> <code><c>string</c><c>.</c><c>encode(</c>'<c>utf-8</c>')</code> <t>and</t> <code><c>unicode(</c><c>string</c>)</code>, <t>but</t> <t>I</t> <t>get</t> <t>the</t> <t>error</t>:


  <t>UnicodeDecodeError</t>: '<t>ascii</t>' <t>codec</t> <t>can't</t> <t>decode</t> <t>byte</t> <t>0xef</t> <t>in</t> <t>position</t> <t>1</t>: <t>ordinal</t> <t>not</t> <t>in</t> <t>range(128</t>)


<t>This</t> <t>is</t> <t>my</t> <t>string</t>:

<code>(<c>｡</c><c>･</c><c>ω</c><c>･</c><c>｡</c>)<c>ﾉ</c>
</code>

<t>I</t> <t>don't</t> <t>see</t> <t>what's</t> <t>going</t> <t>wrong</t>, <t>any</t> <t>idea</t>?

<t>Edit</t>: <t>The</t> <t>problem</t> <t>is</t> <t>that</t> <t>printing</t> <t>the</t> <t>string</t> <t>as</t> <t>it</t> <t>is</t> <t>does</t> <t>not</t> <t>show</t> <t>properly</t>. <t>Also</t>, <t>this</t> <t>error</t> <t>when</t> <t>I</t> <t>try</t> <t>to</t> <t>convert</t> <t>it</t>:

<code><c>Python</c> <c>2.7.1</c><c>+</c> (<c>r271</c>:<c>86832</c>, <c>Apr</c> <c>11</c> <c>2011</c>, <c>18</c>:<c>13</c>:<c>53</c>)
[<c>GCC</c> <c>4.5.2</c>] <c>on</c> <c>linux2</c>
<c>Type</c> ""<c>help</c>"", ""<c>copyright</c>"", ""<c>credits</c>"" <c>or</c> ""<c>license</c>"" <c>for</c> <c>more</c> <c>information</c><c>.</c>
<c>&gt;&gt;&gt;</c> <c>s</c> <c>=</c> '(<c>\xef\xbd\xa1\xef\xbd\xa5\xcf\x89\xef\xbd\xa5\xef\xbd\xa1)\xef\xbe\x89</c>'
<c>&gt;&gt;&gt;</c> <c>s1</c> <c>=</c> <c>s</c><c>.</c><c>decode(</c>'<c>utf-8</c>')
<c>&gt;&gt;&gt;</c> <c>print</c> <c>s1</c>
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>&lt;</c><c>stdin</c><c>&gt;</c>"", <c>line</c> <c>1</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
<c>UnicodeEncodeError</c>: '<c>ascii</c>' <c>codec</c> <c>can</c>'<c>t</c> <c>encode</c> <c>characters</c> <c>in</c> <c>position</c> <c>1-5</c>: <c>ordinal</c> <c>not</c> <c>in</c> <c>range(</c><c>128</c>)
</code>
"
10588317|"<t>Python</t> <t>function</t> <t>global</t> <t>variables</t>?"|"<t>So</t> <t>I</t> <t>know</t> <t>I</t> <t>should</t> <t>avoid</t> <t>using</t> <t>global</t> <t>variables</t> <t>in</t> <t>the</t> <t>first</t> <t>place</t> <t>due</t> <t>to</t> <t>confusion</t> <t>like</t> <t>this</t>, <t>but</t> <t>if</t> <t>I</t> <t>were</t> <t>to</t> <t>use</t> <t>them</t>, <t>is</t> <t>the</t> <t>following</t> <t>a</t> <t>valid</t> <t>way</t> <t>to</t> <t>go</t> <t>about</t> <t>using</t> <t>them</t>? (<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>call</t> <t>the</t> <t>global</t> <t>copy</t> <t>of</t> <t>a</t> <t>variable</t> <t>created</t> <t>in</t> <t>a</t> <t>separate</t> <t>function</t>.)

<code><c>x</c> <c>=</c> <c>somevalue</c>

<c>def</c> <c>func_A</c> ():
   <c>global</c> <c>x</c>
   # <c>do</c> <c>things</c> <c>to</c> <c>x</c>
   <c>return</c> <c>x</c>

<c>def</c> <c>func_B(</c>):
   <c>x</c><c>=</c><c>func_A(</c>)
   # <c>do</c> <c>things</c>
   <c>return</c> <c>x</c>

<c>func_A(</c>)
<c>func_B(</c>)
</code>

<t>Does</t> <t>the</t> <code><c>x</c></code> <t>that</t> <t>the</t> <t>second</t> <t>function</t> <t>uses</t> <t>have</t> <t>the</t> <t>same</t> <t>value</t> <t>of</t> <t>the</t> <t>global</t> <t>copy</t> <t>of</t> <code><c>x</c></code> <t>that</t> <code><c>func_a</c></code> <t>uses</t> <t>and</t> <t>modifies</t>? <t>When</t> <t>calling</t> <t>the</t> <t>functions</t> <t>after</t> <t>definition</t>, <t>does</t> <t>order</t> <t>matter</t>?
"
10660435|"<t>Pythonic</t> <t>way</t> <t>to</t> <t>create</t> <t>a</t> <t>long</t> <t>multi-line</t> <t>string</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>very</t> <t>long</t> <t>query</t>. <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>split</t> <t>it</t> <t>in</t> <t>several</t> <t>lines</t> <t>in</t> <t>Python</t>. <t>A</t> <t>way</t> <t>to</t> <t>do</t> <t>it</t> <t>in</t> <t>JavaScript</t> <t>would</t> <t>be</t> <t>using</t> <t>several</t> <t>sentences</t> <t>and</t> <t>joining</t> <t>them</t> <t>with</t> <t>a</t> <code><c>+</c></code> <t>operator</t> (<t>I</t> <t>know</t>, <t>maybe</t> <t>it's</t> <t>not</t> <t>the</t> <t>most</t> <t>efficient</t> <t>way</t> <t>to</t> <t>do</t> <t>it</t>, <t>but</t> <t>I'm</t> <t>not</t> <t>really</t> <t>concerned</t> <t>about</t> <t>performance</t> <t>in</t> <t>this</t> <t>stage</t>, <t>just</t> <t>code</t> <t>readability</t>). <t>Example</t>:

<code><c>var</c> <c>long_string</c> <c>=</c> '<c>some</c> <c>text</c> <c>not</c> <c>important</c><c>.</c> <c>just</c> <c>garbage</c> <c>to</c>' <c>+</c>
                  '<c>illustrate</c> <c>my</c> <c>example</c>';
</code>

<t>I</t> <t>tried</t> <t>doing</t> <t>something</t> <t>similar</t> <t>in</t> <t>Python</t>, <t>but</t> <t>it</t> <t>didn't</t> <t>work</t>, <t>so</t> <t>I</t> <t>used</t> <code><c>\</c></code> <t>to</t> <t>split</t> <t>the</t> <t>long</t> <t>string</t>. <t>However</t>, <t>I'm</t> <t>not</t> <t>sure</t> <t>if</t> <t>this</t> <t>is</t> <t>the</t> <t>only/best/pythonicest</t> <t>way</t> <t>of</t> <t>doing</t> <t>it</t>. <t>It</t> <t>looks</t> <t>awkward</t>. 
<t>Actual</t> <t>code</t>:

<code><c>query</c> <c>=</c> '<c>SELECT</c> <c>action</c><c>.</c><c>descr</c> <c>as</c> ""<c>action</c>"", '<c>\
</c>    '<c>role</c><c>.</c><c>id</c> <c>as</c> <c>role_id</c>,'<c>\
</c>    '<c>role</c><c>.</c><c>descr</c> <c>as</c> <c>role</c>'<c>\
</c>    '<c>FROM</c> '<c>\
</c>    '<c>public</c><c>.</c><c>role_action_def</c>,'<c>\
</c>    '<c>public</c><c>.</c><c>role</c>,'<c>\
</c>    '<c>public</c><c>.</c><c>record_def</c>, '<c>\
</c>    '<c>public</c><c>.</c><c>action</c>'<c>\
</c>    '<c>WHERE</c> <c>role</c><c>.</c><c>id</c> <c>=</c> <c>role_action_def</c><c>.</c><c>role_id</c> <c>AND</c>'<c>\
</c>    '<c>record_def</c><c>.</c><c>id</c> <c>=</c> <c>role_action_def</c><c>.</c><c>def_id</c> <c>AND</c>'<c>\
</c>    '<c>action</c><c>.</c><c>id</c> <c>=</c> <c>role_action_def</c><c>.</c><c>action_id</c> <c>AND</c>'<c>\
</c>    '<c>role_action_def</c><c>.</c><c>account_id</c> <c>=</c> ' <c>+</c> <c>account_id</c> <c>+</c> ' <c>AND</c>'<c>\
</c>    '<c>record_def</c><c>.</c><c>account_id</c><c>=</c>' <c>+</c> <c>account_id</c> <c>+</c> ' <c>AND</c>'<c>\
</c>    '<c>def_id</c><c>=</c>' <c>+</c> <c>def_id</c>
</code>
"
10667960|"<t>Python Requests</t> <t>throwing</t> <t>up</t> <t>SSLError</t>"|"<t>I'm</t> <t>working</t> <t>on</t> <t>a</t> <t>simple</t> <t>script</t> <t>that</t> <t>involves</t> <t>CAS</t>, <t>jspring</t> <t>security</t> <t>check</t>, <t>redirection</t>, <t>etc</t>.  <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>use</t> <t>Kenneth Reitz's</t> <t>python</t> <t>requests</t> <t>because</t> <t>it's</t> <t>a</t> <t>great</t> <t>piece</t> <t>of</t> <t>work</t>!  <t>However</t>, <t>CAS</t> <t>requires</t> <t>getting</t> <t>validated</t> <t>via</t> <t>SSL</t> <t>so</t> <t>I</t> <t>have</t> <t>to</t> <t>get</t> <t>past</t> <t>that</t> <t>step</t> <t>first</t>.  <t>I</t> <t>don't</t> <t>know</t> <t>what</t> <t>Python</t> <t>requests</t> <t>is</t> <t>wanting</t>?  <t>Where</t> <t>is</t> <t>this</t> <t>SSL</t> <t>certificate</t> <t>suppose</t> <t>to</t> <t>reside</t>?

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>.</c><c>/test.py</c>"", <c>line</c> <c>24</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
  <c>response</c> <c>=</c> <c>requests</c><c>.</c><c>get(</c><c>url1</c>, <c>headers</c><c>=</c><c>headers</c>)
  <c>File</c> ""<c>build</c><c>/bdist.linux-x86_64/egg/requests/api.py</c>"", <c>line</c> <c>52</c>, <c>in</c> <c>get</c>
  <c>File</c> ""<c>build</c><c>/bdist.linux-x86_64/egg/requests/api.py</c>"", <c>line</c> <c>40</c>, <c>in</c> <c>request</c>
  <c>File</c> ""<c>build</c><c>/bdist.linux-x86_64/egg/requests/sessions.py</c>"", <c>line</c> <c>209</c>, <c>in</c> <c>request</c> 
  <c>File</c> ""<c>build</c><c>/bdist.linux-x86_64/egg/requests/models.py</c>"", <c>line</c> <c>624</c>, <c>in</c> <c>send</c>
  <c>File</c> ""<c>build</c><c>/bdist.linux-x86_64/egg/requests/models.py</c>"", <c>line</c> <c>300</c>, <c>in</c> <c>_build_response</c>
  <c>File</c> ""<c>build</c><c>/bdist.linux-x86_64/egg/requests/models.py</c>"", <c>line</c> <c>611</c>, <c>in</c> <c>send</c>
<c>requests</c><c>.</c><c>exceptions</c><c>.</c><c>SSLError</c>: [<c>Errno</c> <c>1</c>] <c>_ssl</c><c>.</c><c>c</c>:<c>503</c>: <c>error</c>:<c>14090086</c>:<c>SSL</c> <c>routines</c>:<c>SSL3_GET_SERVER_CERTIFICATE</c>:<c>certificate</c> <c>verify</c> <c>failed</c>
</code>
"
10712002|"<t>Create</t> <t>an</t> <t>empty</t> <t>list</t> <t>in</t> <t>python</t> <t>with</t> <t>certain</t> <t>size</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>create</t> <t>an</t> <t>empty</t> <t>list</t> (<t>or</t> <t>whatever</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t>) <t>that</t> <t>can</t> <t>hold</t> <t>10</t> <t>elements</t>.

<t>After</t> <t>that</t> <t>I</t> <t>want</t> <t>to</t> <t>assign</t> <t>values</t> <t>in</t> <t>that</t> <t>list</t>, <t>for</t> <t>example</t> <t>this</t> <t>is</t> <t>supposed</t> <t>to</t> <t>display</t> <t>0</t> <t>to</t> <t>9</t>:

<code><c>s1</c> <c>=</c> <c>list(</c>);
<c>for</c> <c>i</c> <c>in</c> <c>range(</c><c>0</c>,<c>9</c>):
   <c>s1</c>[<c>i</c>] <c>=</c> <c>i</c>

<c>print</c>  <c>s1</c>
</code>

<t>But</t> <t>when</t> <t>I</t> <t>run</t> <t>this</t> <t>code</t>, <t>it</t> <t>generates</t> <t>an</t> <t>error</t> <t>or</t> <t>in</t> <t>another</t> <t>case</t> <t>it</t> <t>just</t> <t>displays</t> <code>[]</code> (<t>empty</t>). 

<t>Can</t> <t>someone</t> <t>explain</t> <t>why</t>?
"
10715965|"<t>add</t> <t>one</t> <t>row</t> <t>in</t> <t>a</t> <t>pandas</t>.<t>DataFrame</t>"|"<t>I</t> <t>understand</t> <t>that</t> <t>pandas</t> <t>is</t> <t>designed</t> <t>to</t> <t>load</t> <t>fully</t> <t>populated</t> <code><c>DataFrame</c></code> <t>but</t> <t>I</t> <t>need</t> <t>to</t> <t>create</t> <t>an</t> <t>empty</t> <t>DataFrame</t> <t>then</t> <t>add</t> <t>rows</t>, <t>one</t> <t>by</t> <t>one</t>.
<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t> ?

<t>I</t> <t>successfully</t> <t>created</t> <t>an</t> <t>empty</t> <t>DataFrame</t> <t>with</t> :

<code><c>res</c> <c>=</c> <c>DataFrame(</c><c>columns</c><c>=</c>('<c>lib</c>', '<c>qty1</c>', '<c>qty2</c>'))
</code>

<t>Then</t> <t>I</t> <t>can</t> <t>add</t> <t>a</t> <t>new</t> <t>row</t> <t>and</t> <t>fill</t> <t>a</t> <t>field</t> <t>with</t> :

<code><c>res</c> <c>=</c> <c>res</c><c>.</c><c>set_value(</c><c>len(</c><c>res</c>), '<c>qty1</c>', <c>10.0</c>)
</code>

<t>It</t> <t>works</t> <t>but</t> <t>seems</t> <t>very</t> <t>odd</t> :<t>-/</t> (<t>it</t> <t>fails</t> <t>for</t> <t>adding</t> <t>string</t> <t>value</t>)

<t>How</t> <t>can</t> <t>I</t> <t>add</t> <t>a</t> <t>new</t> <t>row</t> <t>to</t> <t>my</t> <t>DataFrame</t> (<t>with</t> <t>different</t> <t>columns</t> <t>type</t>) ?
"
10763440|"<t>How</t> <t>to</t> <t>install</t> <t>python3</t> <t>version</t> <t>of</t> <t>package</t> <t>via</t> <t>pip</t> <t>on</t> <t>Ubuntu</t>?"|"<t>I</t> <t>have</t> <t>both</t> <code><c>python</c><c>2.7</c></code> <t>and</t> <code><c>python</c><c>3.2</c></code> <t>installed</t> <t>in</t> <code><c>Ubuntu</c> <c>12.04</c></code>.
<t>The</t> <t>symbolic</t> <t>link</t> <code><c>python</c></code> <t>links</t> <t>to</t> <code><c>python</c><c>2.7</c></code>.

<t>When</t> <t>I</t> <t>type</t>:

<code><c>sudo</c> <c>pip</c> <c>install</c> <c>package-name</c>
</code>

<t>It</t> <t>will</t> <t>default</t> <t>install</t> <code><c>python2</c></code> <t>version</t> <t>of</t> <code><c>package-name</c></code>.

<t>Some</t> <t>package</t> <t>supports</t> <t>both</t> <code><c>python2</c></code> <t>and</t> <code><c>python3</c></code>.
<t>How</t> <t>to</t> <t>install</t> <code><c>python3</c></code> <t>version</t> <t>of</t> <code><c>package-name</c></code> <t>via</t> <code><c>pip</c></code>?
"
10973766|"<t>Understanding</t> <t>the</t> <t>map</t> <t>function</t>"|"<code><c>map(</c><c>function</c>, <c>iterable</c>, ...)
</code>

<t>Apply</t> <t>function</t> <t>to</t> <t>every</t> <t>item</t> <t>of</t> <t>iterable</t> <t>and</t> <t>return</t> <t>a</t> <t>list</t> <t>of</t> <t>the</t> <t>results</t>. <t>If</t> <t>additional</t> <t>iterable</t> <t>arguments</t> <t>are</t> <t>passed</t>, <t>function</t> <t>must</t> <t>take</t> <t>that</t> <t>many</t> <t>arguments</t> <t>and</t> <t>is</t> <t>applied</t> <t>to</t> <t>the</t> <t>items</t> <t>from</t> <t>all</t> <t>iterables</t> <t>in</t> <t>parallel</t>. 

<t>If</t> <t>one</t> <t>iterable</t> <t>is</t> <t>shorter</t> <t>than</t> <t>another</t> <t>it</t> <t>is</t> <t>assumed</t> <t>to</t> <t>be</t> <t>extended</t> <t>with</t> <t>None</t> <t>items</t>. 

<t>If</t> <t>function</t> <t>is</t> <code><c>None</c></code>, <t>the</t> <t>identity</t> <t>function</t> <t>is</t> <t>assumed;</t> <t>if</t> <t>there</t> <t>are</t> <t>multiple</t> <t>arguments</t>, <code><c>map(</c>)</code> <t>returns</t> <t>a</t> <t>list</t> <t>consisting</t> <t>of</t> <t>tuples</t> <t>containing</t> <t>the</t> <t>corresponding</t> <t>items</t> <t>from</t> <t>all</t> <t>iterables</t> (<t>a</t> <t>kind</t> <t>of</t> <t>transpose</t> <t>operation</t>). 

<t>The</t> <t>iterable</t> <t>arguments</t> <t>may</t> <t>be</t> <t>a</t> <t>sequence</t> <t>or</t> <t>any</t> <t>iterable</t> <t>object;</t> <t>the</t> <t>result</t> <t>is</t> <t>always</t> <t>a</t> <t>list</t>.

<t>What</t> <t>role</t> <t>does</t> <t>this</t> <t>play</t> <t>in</t> <t>making</t> <t>a</t> <t>Cartesian</t> <t>product</t>?

<code><c>content</c> <c>=</c> <c>map(</c><c>tuple</c>, <c>array</c>)
</code>

<t>What</t> <t>effect</t> <t>does</t> <t>putting</t> <t>a</t> <t>tuple</t> <t>anywhere</t> <t>in</t> <t>there</t> <t>have</t>? <t>I</t> <t>also</t> <t>noticed</t> <t>that</t> <t>without</t> <t>the</t> <t>map</t> <t>function</t> <t>the</t> <t>output</t> <t>is</t> <code><c>abc</c></code> <t>and</t> <t>with</t> <t>it</t>, <t>it's</t> <code><c>a</c>, <c>b</c>, <c>c</c></code>.

<t>I</t> <t>want</t> <t>to</t> <t>fully</t> <t>understand</t> <t>this</t> <t>function</t>. <t>The</t> <t>reference</t> <t>definitions</t> <t>is</t> <t>also</t> <t>hard</t> <t>to</t> <t>understand</t>. <t>Too</t> <t>much</t> <t>fancy</t> <t>fluff</t>. 
"
11060506|"<t>Is</t> <t>there</t> <t>a</t> ""<t>not</t> <t>equal</t>"" <t>operator</t> <t>in</t> <t>Python</t>?"|"<t>How</t> <t>would</t> <t>you</t> <t>say</t> <t>does</t> <t>not</t> <t>equal</t>?

<t>Like</t> 

<code><c>if</c> <c>hi</c> <c>==</c> <c>hi</c>:
    <c>print</c> ""<c>hi</c>""
<c>elif</c> <c>hi</c> (<c>does</c> <c>not</c> <c>equal</c>) <c>bye</c>:
    <c>print</c> ""<c>no</c> <c>hi</c>""
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>replacement</t> <t>for</t> <code><c>==</c></code> <t>that</t> <t>means</t> ""<t>not</t> <t>equal</t>""?
"
11094718|"<t>error</t>: <t>command</t> '<t>gcc</t>' <t>failed</t> <t>with</t> <t>exit</t> <t>status</t> <t>1</t> <t>while</t> <t>installing</t> <t>eventlet</t>"|"<t>I</t> <t>wanted</t> <t>to</t> <t>install</t> <code><c>eventlet</c></code> <t>on</t> <t>my</t> <t>system</t> <t>in</t> <t>order</t> <t>to</t> <t>have</t> ""<t>Herd</t>"" <t>for</t> <t>software</t> <t>deployment..</t> <t>but</t> <t>the</t> <t>terminal</t> <t>is</t> <t>showing</t> <t>a</t> <t>gcc</t> <t>error</t>:

<code>  <c>root</c><c>@</c><c>agrover-OptiPlex-780</c>:<c>~</c># <c>easy_install</c> <c>-</c><c>U</c> <c>eventlet</c>
  <c>Searching</c> <c>for</c> <c>eventlet</c>
  <c>Reading</c> <c>htt</c><c>p://pypi.python.org/simple/eventlet/
</c>  <c>Reading</c> <c>htt</c><c>p://wiki.secondlife.com/wiki/Eventlet
</c>  <c>Reading</c> <c>htt</c><c>p://eventlet.net
</c>   <c>Best</c> <c>match</c>: <c>eventlet</c> <c>0.9.16</c>
    <c>Processing</c> <c>eventlet-0.9.16-py2.7</c><c>.</c><c>egg</c>
    <c>eventlet</c> <c>0.9.16</c> <c>is</c> <c>already</c> <c>the</c> <c>active</c> <c>version</c> <c>in</c> <c>easy-install</c><c>.</c><c>pth</c>

   <c>Using</c> <c>/usr/local/lib/python2.7/dist-packages/eventlet-0.9.16-py2.7.egg
</c> <c>Processing</c> <c>dependencies</c> <c>for</c> <c>eventlet</c>
 <c>Searching</c> <c>for</c> <c>greenlet</c><c>&gt;</c><c>=</c><c>0.3</c>
<c>Reading</c> <c>htt</c><c>p://pypi.python.org/simple/greenlet/
Reading</c> <c>http</c><c>s://github.com/python-greenlet/greenlet
Reading</c> <c>htt</c><c>p://bitbucket.org/ambroff/greenlet
Best</c> <c>match</c>: <c>greenlet</c> <c>0.3.4</c>
<c>Downloading</c> <c>htt</c><c>p://pypi.python.org/packages/source/g/greenlet/greenlet-</c>   <c>0.3.4</c><c>.</c><c>zip</c>#<c>md5</c><c>=</c><c>530</c><c>a69acebbb0d66eb5abd83523d8272</c>
<c>Processing</c> <c>greenlet-0.3.4</c><c>.</c><c>zip</c>
<c>Writing</c> <c>/tmp/easy_install-_aeHYm/greenlet-0.3.4/setup.cfg
Running</c> <c>greenlet-0.3.4/setup.py</c> <c>-</c><c>q</c> <c>bdist_egg</c> <c>-</c><c>-</c><c>dist-dir</c> <c>/tmp/easy_install-_aeHYm/greenlet-0.3.4/egg-dist-tmp-t9_gbW
In</c> <c>file</c> <c>included</c> <c>from</c> <c>greenlet</c><c>.</c><c>c</c>:<c>5</c>:<c>0</c>:
<c>greenlet</c><c>.</c><c>h</c>:<c>8</c>:<c>20</c>: <c>fatal</c> <c>error</c>: <c>Python</c><c>.</c><c>h</c>: <c>No</c> <c>such</c> <c>file</c> <c>or</c> <c>directory</c>
<c>compilation</c> <c>terminated</c><c>.</c>
<c>error</c>: <c>Setup</c> <c>script</c> <c>exited</c> <c>with</c> <c>error</c>: <c>command</c> '<c>gcc</c>' <c>failed</c> <c>with</c> <c>exit</c> <c>status</c> <c>1</c><c>`</c>
</code>

<t>Why</t> <t>can't</t> <code><c>Python</c><c>.</c><c>h</c></code> <t>be</t> <t>found</t>?
"
11178061|"<t>Print</t> <t>list</t> <t>without</t> <t>brackets</t> <t>in</t> <t>a</t> <t>single</t> <t>row</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>list</t> <t>in</t> <t>Python</t>
<t>e.g.</t>

<code><c>names</c> <c>=</c> [""<c>Sam</c>"", ""<c>Peter</c>"", ""<c>James</c>"", ""<c>Julian</c>"", ""<c>Ann</c>""]
</code>

<t>I</t> <t>want</t> <t>to</t> <t>print</t> <t>the</t> <t>array</t> <t>in</t> <t>a</t> <t>single</t> <t>line</t> <t>without</t> <t>the</t> <t>normal</t> "" <t>[]</t>

<code><c>names</c> <c>=</c> [""<c>Sam</c>"", ""<c>Peter</c>"", ""<c>James</c>"", ""<c>Julian</c>"", ""<c>Ann</c>""]
<c>print</c> (<c>names</c>)
</code>

<t>Will</t> <t>give</t> <t>the</t> <t>output</t> <t>as;</t>

<code>[""<c>Sam</c>"", ""<c>Peter</c>"", ""<c>James</c>"", ""<c>Julian</c>"", ""<c>Ann</c>""]
</code>

<t>That</t> <t>is</t> <t>not</t> <t>the</t> <t>format</t> <t>I</t> <t>want</t> <t>instead</t> <t>I</t> <t>want</t> <t>it</t> <t>to</t> <t>be</t> <t>like</t> <t>this;</t>

<code><c>Sam</c>, <c>Peter</c>, <c>James</c>, <c>Julian</c>, <c>Ann</c>
</code>

<t>Note</t>: <t>It</t> <t>must</t> <t>be</t> <t>in</t> <t>a</t> <t>single</t> <t>row</t>.
"
11200137|"<t>Installing Numpy</t> <t>on</t> <t>64bit</t> <t>Windows</t> <t>7</t> <t>with</t> <t>Python</t> <t>2.7.3</t>"|"<t>It</t> <t>looks</t> <t>like</t> <t>the</t> <t>only</t> <t>64</t> <t>bit</t> <t>windows</t> <t>installer</t> <t>for</t> <t>Numpy</t> <t>is</t> <t>for</t> <t>Numpy</t> <t>version</t> <t>1.3.0</t> <t>which</t> <t>only</t> <t>works</t> <t>with</t> <t>Python</t> <t>2.6</t>

<t>http</t>:<t>//sourceforge</t>.<t>net/projects/numpy/files/NumPy/</t>

<t>It</t> <t>strikes</t> <t>me</t> <t>as</t> <t>strange</t> <t>that</t> <t>I</t> <t>would</t> <t>have</t> <t>to</t> <t>roll</t> <t>back</t> <t>to</t> <t>Python</t> <t>2.6</t> <t>to</t> <t>use</t> <t>Numpy</t> <t>on</t> <t>Windows</t>, <t>which</t> <t>makes</t> <t>me</t> <t>think</t> <t>I'm</t> <t>missing</t> <t>something</t>.

<t>Am</t> <t>I</t>?
"
11266068|"<t>Python</t>: <t>avoid</t> <t>new</t> <t>line</t> <t>with</t> <t>print</t> <t>command</t>"|"<t>I've</t> <t>started</t> <t>programming</t> <t>today</t> <t>and</t> <t>have</t> <t>this</t> <t>issue</t> <t>with</t> <t>Python</t>. <t>It's</t> <t>pretty</t> <t>dumb</t> <t>but</t> <t>I</t> <t>can't</t> <t>figure</t> <t>out</t> <t>how</t> <t>to</t> <t>do</t> <t>it</t>. <t>When</t> <t>I</t> <t>use</t> <t>the</t> <t>print</t> <t>command</t>, <t>it</t> <t>prints</t> <t>whatever</t> <t>I</t> <t>want</t> <t>and</t> <t>then</t> <t>goes</t> <t>to</t> <t>a</t> <t>different</t> <t>line</t>. <t>For</t> <t>example</t>: 

<code><c>print</c> ""<c>this</c> <c>should</c> <c>be</c>""; <c>print</c> ""<c>on</c> <c>the</c> <c>same</c> <c>line</c>""
</code>

<t>Should</t> <t>return</t>: 


  <t>this</t> <t>should</t> <t>be</t> <t>on</t> <t>the</t> <t>same</t> <t>line</t>


<t>but</t> <t>instead</t> <t>returns</t>: 


  <t>this</t> <t>should</t> <t>be</t>
  <t>on</t> <t>the</t> <t>same</t> <t>line</t>


<t>More</t> <t>precisely</t> <t>I</t> <t>was</t> <t>trying</t> <t>to</t> <t>create</t> <t>a</t> <t>program</t> <t>with</t> <code><c>if</c></code> <t>that</t> <t>told</t> <t>me</t> <t>whether</t> <t>a</t> <t>number</t> <t>was</t> <t>a</t> <t>2</t> <t>or</t> <t>not</t>

<code><c>def</c> <c>test2(</c><c>x</c>):
    <c>if</c> <c>x</c> <c>==</c> <c>2</c>:
        <c>print</c> ""<c>Yeah</c> <c>bro</c>, <c>that</c>'<c>s</c> <c>tottaly</c> <c>a</c> <c>two</c>""
    <c>else</c>:
        <c>print</c> ""<c>Nope</c>, <c>that</c> <c>is</c> <c>not</c> <c>a</c> <c>two</c><c>.</c> <c>That</c> <c>is</c> <c>a</c> (<c>x</c>)""
</code>

<t>But</t> <t>it</t> <t>doesn't</t> <t>recognise</t> <t>the</t> <t>last</t> <code>(<c>x</c>)</code> <t>as</t> <t>the</t> <t>value</t> <t>entered</t>, <t>and</t> <t>rather</t> <t>prints</t> <t>exactly</t>: ""(<t>x</t>)"" (<t>the</t> <t>letter</t> <t>with</t> <t>the</t> <t>brackets</t>). <t>To</t> <t>make</t> <t>it</t> <t>work</t> <t>I</t> <t>have</t> <t>to</t> <t>write</t>:

<code><c>print</c> ""<c>Nope</c>, <c>that</c> <c>is</c> <c>not</c> <c>a</c> <c>two</c><c>.</c> <c>That</c> <c>is</c> <c>a</c>""; <c>print</c> (<c>x</c>)
</code>

<t>And</t> <t>if</t> <t>e.g.</t> <t>I</t> <t>enter</t> <code><c>test2(</c><c>3</c>)</code> <t>that</t> <t>gives</t>:


  <t>Nope</t>, <t>that</t> <t>is</t> <t>not</t> <t>a</t> <t>two</t>, <t>that</t> <t>is</t> <t>a</t>
  <t>3</t>


<t>So</t> <t>either</t> <t>i</t> <t>need</t> <t>to</t> <t>make</t> <t>Python</t> <t>recognise</t> <t>my</t> (<t>x</t>) <t>inside</t> <t>a</t> <t>print</t> <t>line</t> <t>as</t> <t>the</t> <t>number;</t> <t>or</t> <t>to</t> <t>print</t> <t>two</t> <t>separate</t> <t>things</t> <t>but</t> <t>on</t> <t>the</t> <t>same</t> <t>line</t>. 
<t>Thanks</t> <t>in</t> <t>advance</t> <t>and</t> <t>sorry</t> <t>for</t> <t>such</t> <t>a</t> <t>stupid</t> <t>question</t>.

<t>IMPORTANT</t> <t>NOTE</t>: <t>I</t> <t>am</t> <t>using</t> <t>version</t> <t>2.5.4</t>

<t>Another</t> <t>note</t>: <t>If</t> <t>i</t> <t>put</t> <code><c>print</c> ""<c>Thing</c>"" , <c>print</c> ""<c>Thing2</c>""</code> <t>it</t> <t>says</t> ""<t>Syntax</t> <t>error</t>"" <t>on</t> <t>the</t> <t>2nd</t> <t>print</t>.
"
11277432|"<t>How</t> <t>to</t> <t>remove</t> <t>a</t> <t>key</t> <t>from</t> <t>a</t> <t>python</t> <t>dictionary</t>?"|"<t>When</t> <t>trying</t> <t>to</t> <t>delete</t> <t>a</t> <t>key</t> <t>from</t> <t>a</t> <t>dictionary</t>, <t>I</t> <t>write</t>:

<code><c>if</c> '<c>key</c>' <c>in</c> <c>myDict</c>:
    <c>del</c> <c>myDict</c>['<c>key</c>']
</code>

<t>Is</t> <t>there</t> <t>a</t> <t>one</t> <t>line</t> <t>way</t> <t>of</t> <t>doing</t> <t>this</t>?
"
11285613|"<t>Selecting</t> <t>columns</t>"|"<t>I</t> <t>have</t> <t>data</t> <t>in</t> <t>different</t> <t>columns</t> <t>but</t> <t>I</t> <t>don't</t> <t>know</t> <t>how</t> <t>to</t> <t>extract</t> <t>it</t> <t>to</t> <t>save</t> <t>it</t> <t>in</t> <t>another</t> <t>variable</t>.

<code><c>index</c>  <c>a</c>   <c>b</c>   <c>c</c>
<c>1</c>      <c>2</c>   <c>3</c>   <c>4</c>
<c>2</c>      <c>3</c>   <c>4</c>   <c>5</c>
</code>

<t>How</t> <t>do</t> <t>I</t> <t>select</t> <code>'<c>b</c>'</code>, <code>'<c>c</c>'</code> <t>and</t> <t>save</t> <t>it</t> <t>in</t> <t>to</t> <t>df1</t>?

<t>I</t> <t>tried</t> 

<code><c>df1</c> <c>=</c> <c>df</c>['<c>a</c>':'<c>b</c>']
<c>df1</c> <c>=</c> <c>df</c><c>.</c><c>ix</c>[:, '<c>a</c>':'<c>b</c>']
</code>

<t>None</t> <t>seem</t> <t>to</t> <t>work</t>. <t>Any</t> <t>ideas</t> <t>would</t> <t>help</t> <t>thanks</t>.
"
11346283|"<t>Renaming</t> <t>columns</t> <t>in</t> <t>pandas</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>data</t> <t>table</t> <t>using</t> <t>pandas</t> <t>and</t> <t>column</t> <t>labels</t> <t>that</t> <t>I</t> <t>need</t> <t>to</t> <t>edit</t> <t>to</t> <t>replace</t> <t>the</t> <t>original</t> <t>column</t> <t>labels</t>. 

<t>I'd</t> <t>like</t> <t>to</t> <t>change</t> <t>the</t> <t>column</t> <t>names</t> <t>in</t> <t>a</t> <t>data</t> <t>table</t> <code><c>A</c></code> <t>where</t> <t>the</t> <t>original</t> <t>column</t> <t>names</t> <t>are</t>:

<code>['<c>$</c><c>a</c>', '<c>$</c><c>b</c>', '<c>$</c><c>c</c>', '<c>$</c><c>d</c>', '<c>$</c><c>e</c>'] 
</code>

<t>to</t> 

<code>['<c>a</c>', '<c>b</c>', '<c>c</c>', '<c>d</c>', '<c>e</c>']<c>.</c>
</code>

<t>I</t> <t>have</t> <t>the</t> <t>edited</t> <t>column</t> <t>names</t> <t>stored</t> <t>it</t> <t>in</t> <t>a</t> <t>list</t>, <t>but</t> <t>I</t> <t>don't</t> <t>know</t> <t>how</t> <t>to</t> <t>replace</t> <t>the</t> <t>column</t> <t>names</t>.
"
11425106|"<t>Python</t> <t>pip</t> <t>install</t> <t>fails</t>: <t>invalid</t> <t>command</t> <t>egg_info</t>"|"<t>I</t> <t>find</t> <t>that</t> <t>recently</t> <t>often</t> <t>when</t> <t>I</t> <t>try</t> <t>to</t> <t>install</t> <t>a</t> <t>Python</t> <t>package</t> <t>using</t> <t>pip</t>, <t>I</t> <t>get</t> <t>the</t> <t>error(s</t>) <t>below</t>.

<t>I</t> <t>found</t> <t>a</t> <t>reference</t> <t>online</t> <t>that</t> <t>one</t> <t>has</t> <t>to</t> <t>use</t> ""<t>python2</t> <t>setup</t>.<t>py</t> <t>install</t>"" <t>from</t> <t>the</t> <t>download</t> <t>directory</t>, <t>and</t> <t>indeed</t> <t>find</t> <t>that</t> <t>this</t> <t>will</t> <t>then</t> <t>work</t> <t>if</t> <t>I</t> <t>manually</t> <t>find</t> <t>and</t> <t>download</t> <t>the</t> <t>package</t> (<t>from</t> <t>pypi</t>).

<t>But</t>, <t>I</t> <t>don't</t> <t>know</t> <t>where</t> <t>pip</t> <t>is</t> <t>downloading</t> <t>packages</t> <t>to</t>, <t>and/or</t> <t>why</t> <t>it</t> <t>is</t> <t>failing</t> <t>in</t> <t>this</t> <t>manner</t>.

<t>I</t> <t>tried</t> <t>to</t> <t>do</t> <t>a</t> <t>pip</t> <t>upgrade</t>, <t>but</t> <t>it</t> <t>also</t> <t>failed</t> <t>in</t> <t>a</t> <t>similar</t> <t>manner</t>, <t>with</t> <t>a</t> <t>bunch</t> <t>of</t> ""<t>Unknown</t> <t>distribution</t> <t>option</t>"" <t>errors</t> (<t>entry_points</t>, <t>zip_safe</t>, <t>test_suite</t>, <t>tests_require</t>)!


<t>pip</t> <t>1.0.1</t>
<t>ActivePython</t> <t>2.7</t>


<t>Trying</t> <t>to</t> <t>use</t> <t>ActiveState's</t> <t>pypm</t> <t>fails</t>, <t>because</t> <t>they</t> <t>have</t> <t>a</t> <t>smaller</t> <t>library</t> <t>base</t>, <t>and</t> <t>it</t> <t>doesn't</t> <t>include</t> <t>these</t> <t>packages</t>.

<code><c>C:\test&gt;</c><c>pip</c> <c>install</c> <c>requests-oauth</c>
<c>Downloading</c><c>/unpacking</c> <c>requests-oauth</c>
  <c>Downloading</c> <c>requests-oauth-0.4.1</c><c>.</c><c>tar</c><c>.</c><c>gz</c>
  <c>Running</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>for</c> <c>package</c> <c>requests-oauth</c>
    <c>E:\Plang\ActivePython\lib\distutils\dist.py:267:</c> <c>UserWarning</c>: <c>Unknown</c> <c>distribution</c> <c>option</c>: '<c>zip_safe</c>'
      <c>warnings</c><c>.</c><c>warn(</c><c>msg</c>)
    <c>E:\Plang\ActivePython\lib\distutils\dist.py:267:</c> <c>UserWarning</c>: <c>Unknown</c> <c>distribution</c> <c>option</c>: '<c>install_requires</c>'
      <c>warnings</c><c>.</c><c>warn(</c><c>msg</c>)
    <c>usage</c>: <c>-</c><c>c</c> [<c>global_opts</c>] <c>cmd1</c> [<c>cmd1_opts</c>] [<c>cmd2</c> [<c>cmd2_opts</c>] ...]
       <c>or</c>: <c>-</c><c>c</c> <c>-</c><c>-</c><c>help</c> [<c>cmd1</c> <c>cmd2</c> ...]
       <c>or</c>: <c>-</c><c>c</c> <c>-</c><c>-</c><c>help-commands</c>
       <c>or</c>: <c>-</c><c>c</c> <c>cmd</c> <c>-</c><c>-</c><c>help</c>

    <c>error</c>: <c>invalid</c> <c>command</c> '<c>egg_info</c>'
    <c>Complete</c> <c>output</c> <c>from</c> <c>command</c> <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c>:
    <c>E:\Plang\ActivePython\lib\distutils\dist.py:267:</c> <c>UserWarning</c>: <c>Unknown</c> <c>distribution</c> <c>option</c>: '<c>zip_safe</c>'
  <c>warnings</c><c>.</c><c>warn(</c><c>msg</c>)

<c>E:\Plang\ActivePython\lib\distutils\dist.py:267:</c> <c>UserWarning</c>: <c>Unknown</c> <c>distribution</c> <c>option</c>: '<c>install_requires</c>'
  <c>warnings</c><c>.</c><c>warn(</c><c>msg</c>)

<c>usage</c>: <c>-</c><c>c</c> [<c>global_opts</c>] <c>cmd1</c> [<c>cmd1_opts</c>] [<c>cmd2</c> [<c>cmd2_opts</c>] ...]
   <c>or</c>: <c>-</c><c>c</c> <c>-</c><c>-</c><c>help</c> [<c>cmd1</c> <c>cmd2</c> ...]
   <c>or</c>: <c>-</c><c>c</c> <c>-</c><c>-</c><c>help-commands</c>
   <c>or</c>: <c>-</c><c>c</c> <c>cmd</c> <c>-</c><c>-</c><c>help</c>

<c>error</c>: <c>invalid</c> <c>command</c> '<c>egg_info</c>'
</code>
"
11497376|"<t>How</t> <t>would</t> <t>I</t> <t>specify</t> <t>a</t> <t>new</t> <t>line</t> <t>in</t> <t>Python</t>?"|"<t>How</t> <t>would</t> <t>I</t> <t>specify</t> <t>a</t> <t>new</t> <t>line</t> <t>in</t> <t>python</t>?

<t>For</t> <t>a</t> <t>comparison</t> <t>to</t> <t>Java</t> <t>in</t> <t>a</t> <t>String</t> <t>you</t> <t>would</t> <t>do</t> <t>something</t> <t>like</t> ""<t>First Line\r\nSecond</t> <t>Line</t>""

<t>So How</t> <t>would</t> <t>you</t> <t>do</t> <t>that</t> <t>in</t> <t>Python</t>? <t>For</t> <t>purposes</t> <t>of</t> <t>saving</t> <t>files</t> <t>with</t> <t>more</t> <t>then</t> <t>one</t> <t>line</t>.
"
11520492|"<t>Difference</t> <t>between</t> <t>del</t>, <t>remove</t> <t>and</t> <t>pop</t> <t>on</t> <t>lists</t>"|"<code><c>&gt;&gt;&gt;</c> <c>a</c><c>=</c>[<c>1</c>,<c>2</c>,<c>3</c>]
<c>&gt;&gt;&gt;</c> <c>a</c><c>.</c><c>remove(</c><c>2</c>)
<c>&gt;&gt;&gt;</c> <c>a</c>
[<c>1</c>, <c>3</c>]
<c>&gt;&gt;&gt;</c> <c>a</c><c>=</c>[<c>1</c>,<c>2</c>,<c>3</c>]
<c>&gt;&gt;&gt;</c> <c>del</c> <c>a</c>[<c>1</c>]
<c>&gt;&gt;&gt;</c> <c>a</c>
[<c>1</c>, <c>3</c>]
<c>&gt;&gt;&gt;</c> <c>a</c><c>=</c> [<c>1</c>,<c>2</c>,<c>3</c>]
<c>&gt;&gt;&gt;</c> <c>a</c><c>.</c><c>pop(</c><c>1</c>)
<c>2</c>
<c>&gt;&gt;&gt;</c> <c>a</c>
[<c>1</c>, <c>3</c>]
<c>&gt;&gt;&gt;</c> 
</code>

<t>Is</t> <t>there</t> <t>any</t> <t>difference</t> <t>between</t> <t>the</t> <t>above</t> <t>three</t> <t>methods</t> <t>to</t> <t>remove</t> <t>an</t> <t>element</t> <t>from</t> <t>a</t> <t>list</t>?
"
11536764|"<t>How</t> <t>to</t> <t>fix</t> ""<t>Attempted</t> <t>relative</t> <t>import</t> <t>in</t> <t>non-package</t>"" <t>even</t> <t>with</t> <t>__init__</t>.<t>py</t>"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>follow</t> <t>PEP</t> <t>328</t>, <t>with</t> <t>the</t> <t>following</t> <t>directory</t> <t>structure</t>:

<code><c>pkg</c><c>/
</c>  <c>__init__</c><c>.</c><c>py</c>
  <c>components</c><c>/
</c>    <c>core</c><c>.</c><c>py</c>
    <c>__init__</c><c>.</c><c>py</c>
  <c>tests</c><c>/
</c>    <c>core_test</c><c>.</c><c>py</c>
    <c>__init__</c><c>.</c><c>py</c>
</code>

<t>In</t> <code><c>core_test</c><c>.</c><c>py</c></code> <t>I</t> <t>have</t> <t>the</t> <t>following</t> <t>import</t> <t>statement</t>

<code><c>from</c> <c>.</c><c>.</c><c>components</c><c>.</c><c>core</c> <c>import</c> <c>GameLoopEvents</c>
</code>

<t>However</t>, <t>when</t> <t>I</t> <t>run</t>, <t>I</t> <t>get</t> <t>the</t> <t>following</t> <t>error</t>:

<code><c>tests</c><c>$</c> <c>python</c> <c>core_test</c><c>.</c><c>py</c> 
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>core_test</c><c>.</c><c>py</c>"", <c>line</c> <c>3</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>from</c> <c>.</c><c>.</c><c>components</c><c>.</c><c>core</c> <c>import</c> <c>GameLoopEvents</c>
<c>ValueError</c>: <c>Attempted</c> <c>relative</c> <c>import</c> <c>in</c> <c>non-package</c>
</code>

<t>Searching</t> <t>around</t> <t>I</t> <t>found</t> ""<t>relative</t> <t>path</t> <t>not</t> <t>working</t> <t>even</t> <t>with</t> <t>__init__</t>.<t>py</t>"" <t>and</t> ""<t>Import</t> <t>a</t> <t>module</t> <t>from</t> <t>a</t> <t>relative</t> <t>path</t>"" <t>but</t> <t>they</t> <t>didn't</t> <t>help</t>.

<t>Is</t> <t>there</t> <t>anything</t> <t>I'm</t> <t>missing</t> <t>here</t>?
"
11552320|"<t>Correct</t> <t>way</t> <t>to</t> <t>pause</t> <t>Python</t> <t>program</t>"|"<t>I've</t> <t>been</t> <t>using</t> <t>the</t> <t>input</t> <t>function</t> <t>as</t> <t>a</t> <t>way</t> <t>to</t> <t>pause</t> <t>my</t> <t>scripts</t>

<code><c>print(</c>""<c>something</c>"")
<c>wait</c> <c>=</c> <c>input(</c>""<c>PRESS</c> <c>ENTER</c> <c>TO</c> <c>CONTINUE</c><c>.</c>"")
<c>print(</c>""<c>something</c>"")
</code>

<t>is</t> <t>there</t> <t>a</t> <t>formal</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>?
"
11555468|"<t>How</t> <t>should</t> <t>I</t> <t>read</t> <t>a</t> <t>file</t> <t>line-by-line</t> <t>in</t> <t>Python</t>?"|"<t>In</t> <t>pre-historic</t> <t>times</t> (<t>Python</t> <t>1.4</t>) <t>we</t> <t>did</t>:

<code><c>fp</c> <c>=</c> <c>open(</c>'<c>filename</c><c>.</c><c>txt</c>')
<c>while</c> <c>1</c>:
    <c>line</c> <c>=</c> <c>fp</c><c>.</c><c>readline(</c>)
    <c>if</c> <c>not</c> <c>line</c>:
        <c>break</c>
    <c>print</c> <c>line</c>
</code>

<t>after</t> <t>Python</t> <t>2.1,</t> <t>we</t> <t>did</t>:

<code><c>for</c> <c>line</c> <c>in</c> <c>open(</c>'<c>filename</c><c>.</c><c>txt</c>')<c>.</c><c>xreadlines(</c>):
    <c>print</c> <c>line</c>
</code>

<t>before</t> <t>we</t> <t>got</t> <t>the</t> <t>convenient</t> <t>iterator</t> <t>protocol</t> <t>in</t> <t>Python</t> <t>2.3,</t> <t>and</t> <t>could</t> <t>do</t>:

<code><c>for</c> <c>line</c> <c>in</c> <c>open(</c>'<c>filename</c><c>.</c><c>txt</c>'):
    <c>print</c> <c>line</c>
</code>

<t>I've</t> <t>seen</t> <t>some</t> <t>examples</t> <t>using</t> <t>the</t> <t>more</t> <t>verbose</t>:

<code><c>with</c> <c>open(</c>'<c>filename</c><c>.</c><c>txt</c>') <c>as</c> <c>fp</c>:
    <c>for</c> <c>line</c> <c>in</c> <c>fp</c>:
        <c>print</c> <c>line</c>
</code>

<t>is</t> <t>this</t> <t>the</t> <t>preferred</t> <t>method</t> <t>going</t> <t>forwards</t>?

<t>[edit]</t> <t>I</t> <t>get</t> <t>that</t> <t>the</t> <t>with</t> <t>statement</t> <t>ensures</t> <t>closing</t> <t>of</t> <t>the</t> <t>file...</t> <t>but</t> <t>why</t> <t>isn't</t> <t>that</t> <t>included</t> <t>in</t> <t>the</t> <t>iterator</t> <t>protocol</t> <t>for</t> <t>file</t> <t>objects</t>?
"
11618898|"<t>pg_config</t> <t>executable</t> <t>not</t> <t>found</t>"|"<t>I</t> <t>am</t> <t>having</t> <t>trouble</t> <t>installing</t> <t>psycopg2</t>. <t>I</t> <t>get</t> <t>the</t> <t>following</t> <t>error</t> <t>when</t> <t>I</t> <t>try</t> <t>to</t> <code><c>pip</c> <c>install</c> <c>psycopg2</c></code>:

<code><c>Error</c>: <c>pg_config</c> <c>executable</c> <c>not</c> <c>found</c><c>.</c>

<c>Please</c> <c>add</c> <c>the</c> <c>directory</c> <c>containing</c> <c>pg_config</c> <c>to</c> <c>the</c> <c>PATH</c>

<c>or</c> <c>specify</c> <c>the</c> <c>full</c> <c>executable</c> <c>path</c> <c>with</c> <c>the</c> <c>option</c>:



    <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>build_ext</c> <c>-</c><c>-</c><c>pg-config</c> <c>/path/to/pg_config</c> <c>build</c> ...



<c>or</c> <c>with</c> <c>the</c> <c>pg_config</c> <c>option</c> <c>in</c> '<c>setup</c><c>.</c><c>cfg</c>'<c>.</c>

<c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c>
<c>Command</c> <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>failed</c> <c>with</c> <c>error</c> <c>code</c> <c>1</c> <c>in</c> <c>/tmp/pip-build/psycopg2
</c></code>

<t>But</t> <t>the</t> <t>problem</t> <t>is</t> <code><c>pg_config</c></code> <t>is</t> <t>actually</t> <t>in</t> <t>my</t> <code><c>PATH</c></code><t>;</t> <t>it</t> <t>runs</t> <t>without</t> <t>any</t> <t>problem</t>:

<code><c>$</c> <c>which</c> <c>pg_config</c>
<c>/usr/pgsql-9.1/bin/pg_config
</c></code>

<t>I</t> <t>tried</t> <t>adding</t> <t>the</t> <t>pg_config</t> <t>path</t> <t>to</t> <t>the</t> <code><c>setup</c><c>.</c><c>cfg</c></code> <t>file</t> <t>and</t> <t>building</t> <t>it</t> <t>using</t> <t>the</t> <t>source</t> <t>files</t> <t>I</t> <t>downloaded</t> <t>from</t> <t>their</t> <t>website</t> (<t>http</t>:<t>//initd</t>.<t>org/psycopg/</t>) <t>and</t> <t>I</t> <t>get</t> <t>the</t> <t>following</t> <t>error</t> <t>message</t>!

<code><c>Error</c>: <c>Unable</c> <c>to</c> <c>find</c> '<c>pg_config</c>' <c>file</c> <c>in</c> '<c>/usr/pgsql-9.1/bin/</c>'
</code>

<t>But</t> <t>it</t> <t>is</t> <t>actually</t> <t>THERE</t>!!!

<t>I</t> <t>am</t> <t>baffled</t> <t>by</t> <t>these</t> <t>errors</t>. <t>Can</t> <t>anyone</t> <t>help</t> <t>please</t>?

<t>By</t> <t>the</t> <t>way</t>, <t>I</t> <code><c>sudo</c></code> <t>all</t> <t>the</t> <t>commands</t>. <t>Also</t> <t>I</t> <t>am</t> <t>on</t> <t>RHEL</t> <t>5.5.</t>
"
11880430|"<t>How</t> <t>to</t> <t>write</t> <t>inline</t> <t>if</t> <t>statement</t> <t>for</t> <t>print</t>?"|"<t>I</t> <t>need</t> <t>to</t> <t>print</t> <t>some</t> <t>stuff</t> <t>only</t> <t>when</t> <t>a</t> <t>boolean</t> <t>variable</t> <t>is</t> <t>set</t> <t>to</t> <code><c>True</c></code>. <t>So</t>, <t>after</t> <t>looking</t> <t>at</t> <t>this</t>, <t>I</t> <t>tried</t> <t>with</t> <t>a</t> <t>simple</t> <t>example</t>:

<code><c>&gt;&gt;&gt;</c> <c>a</c> <c>=</c> <c>100</c>
<c>&gt;&gt;&gt;</c> <c>b</c> <c>=</c> <c>True</c>
<c>&gt;&gt;&gt;</c> <c>print</c> <c>a</c> <c>if</c> <c>b</c>
  <c>File</c> ""<c>&lt;</c><c>stdin</c><c>&gt;</c>"", <c>line</c> <c>1</c>
    <c>print</c> <c>a</c> <c>if</c> <c>b</c>
             <c>^</c>
<c>SyntaxError</c>: <c>invalid</c> <c>syntax</c>  
</code>

<t>Same</t> <t>thing</t> <t>if</t> <t>I</t> <t>write</t> <code><c>print</c> <c>a</c> <c>if</c> <c>b</c><c>==</c><c>True</c></code>.

<t>What</t> <t>am</t> <t>I</t> <t>missing</t> <t>here</t>?
"
12169839|"<t>Which</t> <t>is</t> <t>the</t> <t>preferred</t> <t>way</t> <t>to</t> <t>concatenate</t> <t>a</t> <t>string</t> <t>in</t> <t>Python</t>?"|"<t>Since Python's</t> <code><c>string</c></code> <t>can't</t> <t>be</t> <t>changed</t>, <t>I</t> <t>was</t> <t>wondering</t> <t>how</t> <t>to</t> <t>concatenate</t> <t>a</t> <t>string</t> <t>more</t> <t>efficiently</t>?

<t>I</t> <t>can</t> <t>write</t> <t>like</t> <t>it</t>:

<code><c>s</c> <c>+=</c> <c>stringfromelsewhere</c>
</code>

<t>or</t> <t>like</t> <t>this</t>:

<code><c>s</c> <c>=</c> []
<c>s</c><c>.</c><c>append(</c><c>somestring</c>)

<c>later</c>

<c>s</c> <c>=</c> ''<c>.</c><c>join(</c><c>s</c>)
</code>

<t>While</t> <t>writing</t> <t>this</t> <t>question</t>, <t>I</t> <t>found</t> <t>a</t> <t>good</t> <t>article</t> <t>talking</t> <t>about</t> <t>the</t> <t>topic</t>.

<t>http://www.skymind.com/~ocrow/python_string/</t>

<t>But</t> <t>it's</t> <t>in</t> <t>Python</t> <t>2.x.,</t> <t>so</t> <t>the</t> <t>question</t> <t>would</t> <t>be</t> <t>did</t> <t>something</t> <t>change</t> <t>in</t> <t>Python</t> <t>3</t>?
"
12179271|"<t>Meaning</t> <t>of</t> <t>@classmethod</t> <t>and</t> <t>@staticmethod</t> <t>for</t> <t>beginner</t>?"|"<t>Could</t> <t>someone</t> <t>explain</t> <t>to</t> <t>me</t> <t>the</t> <t>meaning</t> <t>of</t> <code><c>@</c><c>classmethod</c></code> <t>and</t> <code><c>@</c><c>staticmethod</c></code> <t>in</t> <t>python</t>? <t>I</t> <t>need</t> <t>to</t> <t>know</t> <t>the</t> <t>difference</t> <t>and</t> <t>the</t> <t>meaning</t>. 

<t>As</t> <t>far</t> <t>as</t> <t>I</t> <t>understand</t>, <code><c>@</c><c>classmethod</c></code> <t>tells</t> <t>a</t> <t>class</t> <t>that</t> <t>it's</t> <t>a</t> <t>method</t> <t>which</t> <t>should</t> <t>be</t> <t>inherited</t> <t>into</t> <t>subclasses</t>, <t>or...</t> <t>something</t>. <t>However</t>, <t>what's</t> <t>the</t> <t>point</t> <t>of</t> <t>that</t>? <t>Why</t> <t>not</t> <t>just</t> <t>define</t> <t>the</t> <t>class</t> <t>method</t> <t>without</t> <t>adding</t> <code><c>@</c><c>classmethod</c></code> <t>or</t> <code><c>@</c><c>staticmethod</c></code> <t>or</t> <t>any</t> <code><c>@</c></code> <t>definitions</t>?

<t>tl;dr</t>: <t>when</t> <t>should</t> <t>I</t> <t>use</t> <t>them</t>, <t>why</t> <t>should</t> <t>I</t> <t>use</t> <t>them</t>, <t>and</t> <t>how</t> <t>should</t> <t>I</t> <t>use</t> <t>them</t>?

<t>I'm</t> <t>pretty</t> <t>advanced</t> <t>with</t> <t>C++</t>, <t>so</t> <t>using</t> <t>more</t> <t>advanced</t> <t>programming</t> <t>concepts</t> <t>shouldn't</t> <t>be</t> <t>a</t> <t>problem</t>. <t>Feel</t> <t>free</t> <t>giving</t> <t>me</t> <t>a</t> <t>corresponding</t> <t>C++</t> <t>example</t> <t>if</t> <t>possible</t>.
"
12214801|"<t>Print</t> <t>a</t> <t>string</t> <t>as</t> <t>hex</t> <t>bytes</t>?"|"<t>I</t> <t>have</t> <t>this</t> <t>string</t>: <code><c>Hello</c> <c>world</c> <c>!</c><c>!</c></code> <t>and</t> <t>I</t> <t>want</t> <t>to</t> <t>print</t> <t>it</t> <t>using</t> <t>Python</t> <t>as</t> <code><c>48</c>:<c>65</c>:<c>6</c><c>c</c>:<c>6</c><c>c</c>:<c>6</c><c>f</c>:<c>20</c>:<c>77</c>:<c>6</c><c>f</c>:<c>72</c>:<c>6</c><c>c</c>:<c>64</c>:<c>20</c>:<c>21</c>:<c>21</c></code>.

<code><c>hex(</c>)</code> <t>works</t> <t>only</t> <t>for</t> <t>integers</t>. 

<t>How</t> <t>can</t> <t>it</t> <t>be</t> <t>done</t>?
"
12309269|"<t>How</t> <t>do</t> <t>I</t> <t>write</t> <t>JSON</t> <t>data</t> <t>to</t> <t>a</t> <t>file</t>?"|"<t>I</t> <t>have</t> <t>JSON</t> <t>data</t> <t>stored</t> <t>in</t> <t>the</t> <t>variable</t> <code><c>data</c></code>.

<t>I</t> <t>want</t> <t>to</t> <t>write</t> <t>this</t> <t>to</t> <t>a</t> <t>text</t> <t>file</t> <t>for</t> <t>testing</t> <t>so</t> <t>I</t> <t>don't</t> <t>have</t> <t>to</t> <t>grab</t> <t>the</t> <t>data</t> <t>from</t> <t>the</t> <t>server</t> <t>each</t> <t>time</t>.

<t>Currently</t>, <t>I</t> <t>am</t> <t>trying</t> <t>this</t>:

<code><c>obj</c> <c>=</c> <c>open(</c>'<c>data</c><c>.</c><c>txt</c>', '<c>wb</c>')
<c>obj</c><c>.</c><c>write(</c><c>data</c>)
<c>obj</c><c>.</c><c>close</c>
</code>

<t>And</t> <t>am</t> <t>receiving</t> <t>the</t> <t>error</t>: 

<code><c>TypeError</c>: <c>must</c> <c>be</c> <c>string</c> <c>or</c> <c>buffer</c>, <c>not</c> <c>dict</c></code>

<t>How</t> <t>to</t> <t>fix</t> <t>this</t>?
"
12323403|"<t>How</t> <t>do</t> <t>I</t> <t>find</t> <t>an</t> <t>element</t> <t>that</t> <t>contains</t> <t>specific</t> <t>text</t> <t>in</t> <t>Selenium Webdriver</t> (<t>Python</t>)?"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>test</t> <t>a</t> <t>complicated</t> <t>javascript</t> <t>interface</t> <t>with</t> <t>Selenium</t> (<t>using</t> <t>the</t> <t>Python</t> <t>interface</t>, <t>and</t> <t>across</t> <t>multiple</t> <t>browsers</t>).  <t>I</t> <t>have</t> <t>a</t> <t>number</t> <t>of</t> <t>buttons</t> <t>of</t> <t>the</t> <t>form</t>:

<code><c>&lt;</c><c>div</c><c>&gt;</c><c>My</c> <c>Button</c><c>&lt;/div&gt;</c>
</code>

<t>I'd</t> <t>like</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>search</t> <t>for</t> <t>buttons</t> <t>based</t> <t>on</t> ""<t>My</t> <t>Button</t>"" (<t>or</t> <t>non-case-sensitive</t>, <t>partial</t> <t>matches</t> <t>such</t> <t>as</t> ""<t>my</t> <t>button</t>"" <t>or</t> ""<t>button</t>"")

<t>I'm</t> <t>finding</t> <t>this</t> <t>amazingly</t> <t>difficult</t>, <t>to</t> <t>the</t> <t>extent</t> <t>to</t> <t>which</t> <t>I</t> <t>feel</t> <t>like</t> <t>I'm</t> <t>missing</t> <t>something</t> <t>obvious</t>.  <t>The</t> <t>best</t> <t>thing</t> <t>I</t> <t>have</t> <t>so</t> <t>far</t> <t>is</t>:

<code><c>driver</c><c>.</c><c>find_elements_by_xpath(</c>'<c>//div[contains(text()</c>, ""' <c>+</c> <c>text</c> <c>+</c> '"")]')
</code>

<t>This</t> <t>is</t> <t>case-sensitive</t>, <t>however</t>.  <t>The</t> <t>other</t> <t>thing</t> <t>I've</t> <t>tried</t> <t>is</t> <t>iterating</t> <t>through</t> <t>all</t> <t>the</t> <t>divs</t> <t>on</t> <t>the</t> <t>page</t>, <t>and</t> <t>checking</t> <t>the</t> <t>element</t>.<t>text</t> <t>property</t>.  <t>However</t>, <t>every</t> <t>time</t> <t>you</t> <t>get</t> <t>a</t> <t>situation</t> <t>of</t> <t>the</t> <t>form</t>:

<code><c>&lt;</c><c>div</c> <c>class</c><c>=</c>""<c>outer</c>""<c>&gt;&lt;</c><c>div</c> <c>class</c><c>=</c>""<c>inner</c>""<c>&gt;</c><c>My</c> <c>Button</c><c>&lt;/div&gt;&lt;/div&gt;</c>
</code>

<t>div</t>.<t>outer</t> <t>also</t> <t>has</t> ""<t>My</t> <t>Button</t>"" <t>as</t> <t>the</t> <t>text</t>.  <t>To</t> <t>fix</t> <t>THAT</t>, <t>I've</t> <t>tried</t> <t>looking</t> <t>to</t> <t>see</t> <t>if</t> <t>div</t>.<t>outer</t> <t>is</t> <t>the</t> <t>parent</t> <t>of</t> <t>div</t>.<t>inner</t>, <t>but</t> <t>couldn't</t> <t>figure</t> <t>out</t> <t>how</t> <t>to</t> <t>do</t> <t>that</t> (<t>element.get_element_by_xpath('..</t>') <t>returns</t> <t>an</t> <t>element's</t> <t>parent</t>, <t>but</t> <t>it</t> <t>tests</t> <t>not</t> <t>equal</t> <t>to</t> <t>div.outer).</t>  <t>Also</t>, <t>iterating</t> <t>through</t> <t>all</t> <t>the</t> <t>elements</t> <t>on</t> <t>the</t> <t>page</t> <t>seems</t> <t>to</t> <t>be</t> <t>really</t> <t>slow</t>, <t>at</t> <t>least</t> <t>using</t> <t>the</t> <t>Chrome</t> <t>webdriver</t>.

<t>Ideas</t>?

<t>Edit</t>: <t>This</t> <t>question</t> <t>came</t> <t>out</t> <t>a</t> <t>little</t> <t>vague</t>.  <t>Asked</t> (<t>and</t> <t>answered</t>) <t>a</t> <t>more</t> <t>specific</t> <t>version</t> <t>here</t>: <t>How</t> <t>to</t> <t>get</t> <t>text</t> <t>of</t> <t>an</t> <t>element</t> <t>in</t> <t>Selenium WebDriver</t> (<t>via</t> <t>the</t> <t>Python</t> <t>api</t>) <t>without</t> <t>including</t> <t>child</t> <t>element</t> <t>text</t>?
"
12453580|"<t>Concatenate</t> <t>item</t> <t>in</t> <t>list</t> <t>to</t> <t>strings</t>"|"<t>Is</t> <t>there</t> <t>a</t> <t>simpler</t> <t>way</t> <t>to</t> <t>concatenate</t> <t>string</t> <t>items</t> <t>in</t> <t>list</t> <t>into</t> <t>a</t> <t>single</t> <t>string</t>?

<t>Can</t> <t>I</t> <t>use</t> <t>the</t> <code><c>str</c><c>.</c><c>join(</c>)</code> <t>function</t> <t>to</t> <t>join</t> <t>items</t> <t>in</t> <t>list</t>?

<t>E.g.</t> <t>this</t> <t>is</t> <t>the</t> <t>input</t> <code>['<c>this</c>','<c>is</c>','<c>a</c>','<c>sentence</c>']</code> <t>and</t> <t>this</t> <t>is</t> <t>the</t> <t>desired</t> <t>output</t> <code><c>this-is-a-sentence</c></code>

<code><c>sentence</c> <c>=</c> ['<c>this</c>','<c>is</c>','<c>a</c>','<c>sentence</c>']
<c>sent_str</c> <c>=</c> """"
<c>for</c> <c>i</c> <c>in</c> <c>sentence</c>:
    <c>sent_str</c> <c>+=</c> <c>str(</c><c>i</c>) <c>+</c> ""<c>-</c>""
<c>sent_str</c> <c>=</c> <c>sent_str</c>[:<c>-</c><c>1</c>]
<c>print</c> <c>sent_str</c>
</code>
"
12468179|"<t>UnicodeDecodeError</t>: '<t>utf8</t>' <t>codec</t> <t>can't</t> <t>decode</t> <t>byte</t> <t>0x9c</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>socket</t> <t>server</t> <t>that</t> <t>is</t> <t>supposed</t> <t>to</t> <t>receive</t> <t>UTF-8</t> <t>valid</t> <t>characters</t> <t>from</t> <t>clients</t>.

<t>The</t> <t>problem</t> <t>is</t> <t>some</t> <t>clients</t> (<t>mainly</t> <t>hackers</t>) <t>are</t> <t>sending</t> <t>all</t> <t>the</t> <t>wrong</t> <t>kind</t> <t>of</t> <t>data</t> <t>over</t> <t>it</t>.

<t>I</t> <t>can</t> <t>easily</t> <t>distinguish</t> <t>the</t> <t>genuine</t> <t>client</t>, <t>but</t> <t>I</t> <t>am</t> <t>logging</t> <t>to</t> <t>files</t> <t>all</t> <t>the</t> <t>data</t> <t>sent</t> <t>so</t> <t>I</t> <t>can</t> <t>analyze</t> <t>it</t> <t>later</t>.

<t>Sometimes</t> <t>I</t> <t>get</t> <t>characters</t> <t>like</t> <t>this</t> <code><c>œ</c></code> <t>that</t> <t>cause</t> <t>the</t> <code><c>UnicodeDecodeError</c></code> <t>error</t>.

<t>I</t> <t>need</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>make</t> <t>the</t> <t>string</t> <t>UTF-8</t> <t>with</t> <t>or</t> <t>without</t> <t>those</t> <t>characters</t>.
"
12555323|"<t>Adding</t> <t>new</t> <t>column</t> <t>to</t> <t>existing</t> <t>DataFrame</t> <t>in</t> <t>Python</t> <t>pandas</t>"|"<t>I</t> <t>have</t> <t>the</t> <t>following</t> <t>indexed</t> <t>DataFrame</t> <t>with</t> <t>named</t> <t>columns</t> <t>and</t> <t>rows</t> <t>not-</t> <t>continuous</t> <t>numbers</t>:

<code>          <c>a</c>         <c>b</c>         <c>c</c>         <c>d</c>
<c>2</c>  <c>0.671399</c>  <c>0.101208</c> <c>-</c><c>0.181532</c>  <c>0.241273</c>
<c>3</c>  <c>0.446172</c> <c>-</c><c>0.243316</c>  <c>0.051767</c>  <c>1.577318</c>
<c>5</c>  <c>0.614758</c>  <c>0.075793</c> <c>-</c><c>0.451460</c> <c>-</c><c>0.012493</c>
</code>

<t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>add</t> <t>a</t> <t>new</t> <t>column</t>, <code>'<c>e</c>'</code>, <t>to</t> <t>the</t> <t>existing</t> <t>data</t> <t>frame</t> <t>and</t> <t>do</t> <t>not</t> <t>want</t> <t>to</t> <t>change</t> <t>anything</t> <t>in</t> <t>the</t> <t>data</t> <t>frame</t> (<t>i.e.,</t> <t>the</t> <t>new</t> <t>column</t> <t>always</t> <t>has</t> <t>the</t> <t>same</t> <t>length</t> <t>as</t> <t>the</t> <t>DataFrame</t>). 

<code><c>0</c>   <c>-</c><c>0.335485</c>
<c>1</c>   <c>-</c><c>1.166658</c>
<c>2</c>   <c>-</c><c>0.385571</c>
<c>dtype</c>: <c>float64</c>
</code>

<t>I</t> <t>tried</t> <t>different</t> <t>versions</t> <t>of</t> <code><c>join</c></code>, <code><c>append</c></code>, <code><c>merge</c></code>, <t>but</t> <t>I</t> <t>did</t> <t>not</t> <t>get</t> <t>the</t> <t>result</t> <t>I</t> <t>wanted</t>, <t>only</t> <t>errors</t> <t>at</t> <t>most</t>. <t>How</t> <t>can</t> <t>I</t> <t>add</t> <t>column</t> <code><c>e</c></code> <t>to</t> <t>the</t> <t>above</t> <t>example</t>? 
"
12608788|"<t>Changing</t> <t>the</t> ""<t>tick</t> <t>frequency</t>"" <t>on</t> <t>x</t> <t>or</t> <t>y</t> <t>axis</t> <t>in</t> <t>matplotlib</t>?"|"<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>fix</t> <t>how</t> <t>python</t> <t>plots</t> <t>my</t> <t>data</t>.

<t>Say</t> 

<code><c>x</c> <c>=</c> [<c>0</c>,<c>5</c>,<c>9</c>,<c>10</c>,<c>15</c>]
</code>

<t>and</t> 

<code><c>y</c> <c>=</c> [<c>0</c>,<c>1</c>,<c>2</c>,<c>3</c>,<c>4</c>]
</code>

<t>Then</t> <t>I</t> <t>would</t> <t>do</t>:

<code><c>matplotlib</c><c>.</c><c>pyplot</c><c>.</c><c>plot(</c><c>x</c>,<c>y</c>)
<c>matplotlib</c><c>.</c><c>pyplot</c><c>.</c><c>show(</c>)
</code>

<t>and</t> <t>the</t> <t>x</t> <t>axis</t>' <t>ticks</t> <t>are</t> <t>plotted</t> <t>in</t> <t>intervals</t> <t>of</t> <t>5</t>. <t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>make</t> <t>it</t> <t>show</t> <t>intervals</t> <t>of</t> <t>1</t>?
"
12754680|"<t>Modulo</t> <t>operator</t> <t>in</t> <t>Python</t>"|"<t>What</t> <t>does</t> <t>modulo</t> <t>in</t> <t>the</t> <t>following</t> <t>piece</t> <t>of</t> <t>code</t> <t>do</t>?

<code><c>from</c> <c>math</c> <c>import</c> <c>*</c>
<c>3.14</c> <c>%</c> <c>2</c> <c>*</c> <c>pi</c>
</code>

<t>How</t> <t>do</t> <t>we</t> <t>calculate</t> <t>modulo</t> <t>on</t> <t>a</t> <t>floating</t> <t>point</t> <t>number</t>?
"
12836128|"<t>Convert</t> <t>list</t> <t>to</t> <t>tuple</t> <t>in</t> <t>Python</t>"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>convert</t> <t>a</t> <t>list</t> <t>to</t> <t>a</t> <t>tuple</t>. 

<t>When</t> <t>I</t> <t>google</t> <t>it</t>, <t>I</t> <t>find</t> <t>a</t> <t>lot</t> <t>of</t> <t>answers</t> <t>similar</t> <t>to</t>:

<code><c>l</c> <c>=</c> [<c>4</c>,<c>5</c>,<c>6</c>]
<c>tuple(</c><c>l</c>)
</code>

<t>But</t> <t>if</t> <t>I</t> <t>do</t> <t>that</t> <t>I</t> <t>get</t> <t>this</t> <t>error</t> <t>message</t>:


  <t>TypeError</t>: '<t>tuple</t>' <t>object</t> <t>is</t> <t>not</t> <t>callable</t>


<t>How</t> <t>can</t> <t>I</t> <t>fix</t> <t>this</t> <t>problem</t>?
"
12897374|"<t>Get</t> <t>unique</t> <t>values</t> <t>from</t> <t>a</t> <t>list</t> <t>in</t> <t>python</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>get</t> <t>the</t> <t>unique</t> <t>values</t> <t>from</t> <t>the</t> <t>following</t> <t>list</t>:

<code>[<c>u</c>'<c>nowplaying</c>', <c>u</c>'<c>PBS</c>', <c>u</c>'<c>PBS</c>', <c>u</c>'<c>nowplaying</c>', <c>u</c>'<c>job</c>', <c>u</c>'<c>debate</c>', <c>u</c>'<c>thenandnow</c>']
</code>

<t>The</t> <t>output</t> <t>which</t> <t>I</t> <t>require</t> <t>is</t>:

<code>[<c>u</c>'<c>nowplaying</c>', <c>u</c>'<c>PBS</c>', <c>u</c>'<c>job</c>', <c>u</c>'<c>debate</c>', <c>u</c>'<c>thenandnow</c>']
</code>

<t>I</t> <t>tried</t> <t>the</t> <t>following</t> <t>code</t>:

<code><c>output</c> <c>=</c> []
<c>for</c> <c>x</c> <c>in</c> <c>trends</c>:
    <c>if</c> <c>x</c> <c>not</c> <c>in</c> <c>output</c>:
        <c>output</c><c>.</c><c>append(</c><c>x</c>)
<c>print</c> <c>output</c>
</code>

<t>but</t> <t>it</t> <t>didn't</t> <t>work</t>. <t>Any</t> <t>help</t> <t>would</t> <t>be</t> <t>appreciated</t>.
"
12934190|"<t>Is</t> <t>there</t> <t>a</t> <t>short</t> <t>contains</t> <t>function</t> <t>for</t> <t>lists</t>?"|"<t>I</t> <t>see</t> <t>people</t> <t>are</t> <t>using</t> <code><c>any</c></code> <t>to</t> <t>gather</t> <t>another</t> <t>list</t> <t>to</t> <t>see</t> <t>if</t> <t>an</t> <t>item</t> <t>exists</t> <t>in</t> <t>a</t> <t>list</t>, <t>but</t> <t>is</t> <t>there</t> <t>a</t> <t>quick</t> <t>way</t> <t>to</t> <t>just</t> <t>do</t>?:

<code><c>if</c> <c>list</c><c>.</c><c>contains(</c><c>myItem</c>):
    # <c>do</c> <c>something</c>
</code>
"
12943819|"<t>How</t> <t>to</t> <t>prettyprint</t> <t>a</t> <t>JSON</t> <t>file</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>JSON</t> <t>file</t> <t>that</t> <t>is</t> <t>a</t> <t>mess</t> <t>that</t> <t>I</t> <t>want</t> <t>to</t> <t>prettyprint--</t> <t>what's</t> <t>the</t> <t>easiest</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t> <t>in</t> <t>python</t>? <t>I</t> <t>know</t> <t>PrettyPrint</t> <t>takes</t> <t>an</t> ""<t>object</t>"", <t>which</t> <t>I</t> <t>think</t> <t>can</t> <t>be</t> <t>a</t> <t>file</t>, <t>but</t> <t>I</t> <t>don't</t> <t>know</t> <t>how</t> <t>to</t> <t>pass</t> <t>a</t> <t>file</t> <t>in--</t> <t>just</t> <t>using</t> <t>the</t> <t>filename</t> <t>doesn't</t> <t>work</t>.
"
13411544|"<t>Delete</t> <t>column</t> <t>from</t> <t>pandas</t> <t>DataFrame</t>"|"<t>When</t> <t>deleting</t> <t>a</t> <t>column</t> <t>in</t> <t>a</t> <t>DataFrame</t> <t>I</t> <t>use</t>:

<code><c>del</c> <c>df</c>['<c>column_name</c>']
</code>

<t>and</t> <t>this</t> <t>works</t> <t>great</t>. <t>Why</t> <t>can't</t> <t>I</t> <t>use</t>:

<code><c>del</c> <c>df</c><c>.</c><c>column_name</c>
</code>

<t>As</t> <t>you</t> <t>can</t> <t>access</t> <t>the</t> <t>column/Series</t> <t>as</t> <code><c>df</c><c>.</c><c>column_name</c></code>, <t>I</t> <t>expect</t> <t>this</t> <t>to</t> <t>work</t>.
"
13413590|"<t>How</t> <t>to</t> <t>drop</t> <t>rows</t> <t>of</t> <t>Pandas DataFrame</t> <t>whose</t> <t>value</t> <t>in</t> <t>certain</t> <t>columns</t> <t>is</t> <t>NaN</t>"|"<t>I</t> <t>have</t> <t>a</t> <code><c>DataFrame</c></code>:

<code><c>&gt;&gt;&gt;</c> <c>df</c>
                 <c>STK_ID</c>  <c>EPS</c>  <c>cash</c>
<c>STK_ID</c> <c>RPT_Date</c>                   
<c>601166</c> <c>20111231</c>  <c>601166</c>  <c>NaN</c>   <c>NaN</c>
<c>600036</c> <c>20111231</c>  <c>600036</c>  <c>NaN</c>    <c>12</c>
<c>600016</c> <c>20111231</c>  <c>600016</c>  <c>4.3</c>   <c>NaN</c>
<c>601009</c> <c>20111231</c>  <c>601009</c>  <c>NaN</c>   <c>NaN</c>
<c>601939</c> <c>20111231</c>  <c>601939</c>  <c>2.5</c>   <c>NaN</c>
<c>00000</c><c>1</c> <c>20111231</c>  <c>00000</c><c>1</c>  <c>NaN</c>   <c>NaN</c>
</code>

<t>Then</t> <t>I</t> <t>just</t> <t>want</t> <t>the</t> <t>records</t> <t>whose</t> <code><c>EPS</c></code> <t>is</t> <t>not</t> <code><c>NaN</c></code>, <t>that</t> <t>is</t>, <code><c>df</c><c>.</c><c>drop(</c><c>.</c>...)</code> <t>will</t> <t>return</t> <t>the</t> <t>dataframe</t> <t>as</t> <t>below</t>:

<code>                  <c>STK_ID</c>  <c>EPS</c>  <c>cash</c>
<c>STK_ID</c> <c>RPT_Date</c>                   
<c>600016</c> <c>20111231</c>  <c>600016</c>  <c>4.3</c>   <c>NaN</c>
<c>601939</c> <c>20111231</c>  <c>601939</c>  <c>2.5</c>   <c>NaN</c>
</code>

<t>How</t> <t>do</t> <t>I</t> <t>do</t> <t>that</t>?
"
13437727|"<t>Python</t> <t>-</t> <t>Write</t> <t>to</t> <t>Excel</t> <t>Spreadsheet</t>"|"<t>I</t> <t>am</t> <t>new</t> <t>to</t> <t>Python</t>. <t>I</t> <t>need</t> <t>to</t> <t>write</t> <t>some</t> <t>data</t> <t>from</t> <t>my</t> <t>program</t> <t>to</t> <t>a</t> <t>spreadsheet</t>. <t>I've</t> <t>searched</t> <t>online</t> <t>and</t> <t>there</t> <t>seems</t> <t>to</t> <t>be</t> <t>many</t> <t>packages</t> <t>available</t> (<t>xlwt</t>, <t>XlsXcessive</t>, <t>openpyxl</t>). <t>Others</t> <t>suggest</t> <t>to</t> <t>write</t> <t>to</t> <t>a</t> <t>csv</t> <t>file</t> (<t>never</t> <t>used</t> <t>csv</t> <t>&amp;</t> <t>don't</t> <t>really</t> <t>understand</t> <t>what</t> <t>it</t> <t>is</t>).

<t>The</t> <t>program</t> <t>is</t> <t>very</t> <t>simple</t>. <t>I</t> <t>have</t> <t>two</t> <t>lists</t> (<t>float</t>) <t>and</t> <t>three</t> <t>variables</t> (<t>strings</t>). <t>I</t> <t>don't</t> <t>know</t> <t>the</t> <t>lengths</t> <t>of</t> <t>the</t> <t>two</t> <t>lists</t> <t>and</t> <t>they</t> <t>probably</t> <t>won't</t> <t>be</t> <t>the</t> <t>same</t> <t>length</t>.

<t>I</t> <t>want</t> <t>the</t> <t>layout</t> <t>to</t> <t>be</t> <t>as</t> <t>in</t> <t>the</t> <t>picture</t> <t>below</t>:



<t>The</t> <t>pink</t> <t>column</t> <t>will</t> <t>have</t> <t>the</t> <t>values</t> <t>of</t> <t>the</t> <t>first</t> <t>list</t> <t>and</t> <t>the</t> <t>green</t> <t>column</t> <t>will</t> <t>have</t> <t>the</t> <t>values</t> <t>of</t> <t>the</t> <t>second</t> <t>list</t>.

<t>So</t> <t>what's</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>? <t>Thanks</t>.

<t>P.S.</t> <t>I</t> <t>am</t> <t>running</t> <t>Windows</t> <t>7</t> <t>but</t> <t>I</t> <t>won't</t> <t>necessarily</t> <t>have</t> <t>Office</t> <t>installed</t> <t>on</t> <t>the</t> <t>computers</t> <t>running</t> <t>this</t> <t>program</t>.

<t>EDIT</t>

<code><c>import</c> <c>xlwt</c>

<c>x</c><c>=</c><c>1</c>
<c>y</c><c>=</c><c>2</c>
<c>z</c><c>=</c><c>3</c>

<c>list1</c><c>=</c>[<c>2.34</c>,<c>4.346</c>,<c>4.234</c>]

<c>book</c> <c>=</c> <c>xlwt</c><c>.</c><c>Workbook(</c><c>encoding</c><c>=</c>""<c>utf-8</c>"")

<c>sheet1</c> <c>=</c> <c>book</c><c>.</c><c>add_sheet(</c>""<c>Sheet</c> <c>1</c>"")

<c>sheet1</c><c>.</c><c>write(</c><c>0</c>, <c>0</c>, ""<c>Display</c>"")
<c>sheet1</c><c>.</c><c>write(</c><c>1</c>, <c>0</c>, ""<c>Dominance</c>"")
<c>sheet1</c><c>.</c><c>write(</c><c>2</c>, <c>0</c>, ""<c>Test</c>"")

<c>sheet1</c><c>.</c><c>write(</c><c>0</c>, <c>1</c>, <c>x</c>)
<c>sheet1</c><c>.</c><c>write(</c><c>1</c>, <c>1</c>, <c>y</c>)
<c>sheet1</c><c>.</c><c>write(</c><c>2</c>, <c>1</c>, <c>z</c>)

<c>sheet1</c><c>.</c><c>write(</c><c>4</c>, <c>0</c>, ""<c>Stimulus</c> <c>Time</c>"")
<c>sheet1</c><c>.</c><c>write(</c><c>4</c>, <c>1</c>, ""<c>Reaction</c> <c>Time</c>"")

<c>i</c><c>=</c><c>4</c>

<c>for</c> <c>n</c> <c>in</c> <c>list1</c>:
    <c>i</c> <c>=</c> <c>i</c><c>+</c><c>1</c>
    <c>sheet1</c><c>.</c><c>write(</c><c>i</c>, <c>0</c>, <c>n</c>)



<c>book</c><c>.</c><c>save(</c>""<c>trial</c><c>.</c><c>xls</c>"")
</code>

<t>I</t> <t>wrote</t> <t>this</t> <t>using</t> <t>all</t> <t>your</t> <t>suggestions</t>. <t>It</t> <t>gets</t> <t>the</t> <t>job</t> <t>done</t> <t>but</t> <t>it</t> <t>can</t> <t>be</t> <t>slightly</t> <t>improved</t>. <t>How</t> <t>do</t> <t>I</t> <t>format</t> <t>the</t> <t>cells</t> <t>created</t> <t>in</t> <t>the</t> <t>for</t> <t>loop</t> (<t>list1</t> <t>values</t>) <t>as</t> <t>scientific</t> <t>or</t> <t>number</t>? <t>I</t> <t>do</t> <t>not</t> <t>want</t> <t>to</t> <t>truncate</t> <t>the</t> <t>values</t>. <t>The</t> <t>actual</t> <t>values</t> <t>used</t> <t>in</t> <t>the</t> <t>program</t> <t>would</t> <t>have</t> <t>around</t> <t>10</t> <t>digits</t> <t>after</t> <t>the</t> <t>decimal</t>.
"
13628791|"<t>How</t> <t>do</t> <t>I</t> <t>check</t> <t>whether</t> <t>an</t> <t>int</t> <t>is</t> <t>between</t> <t>the</t> <t>two</t> <t>numbers</t>?"|"<t>I'm</t> <t>using</t> <t>2.3</t> <t>IDLE</t> <t>and</t> <t>I'm</t> <t>having</t> <t>problems</t>.

<t>I</t> <t>need</t> <t>to</t> <t>check</t> <t>whether</t> <t>a</t> <t>number</t> <t>is</t> <t>between</t> <t>two</t> <t>other</t> <t>numbers</t>, <t>10000</t> <t>and</t> <t>30000</t>:

<code><c>if</c> <c>number</c> <c>&gt;</c><c>=</c> <c>10000</c> <c>and</c> <c>number</c> <c>&gt;</c><c>=</c> <c>30000</c>:
    <c>print</c> (""<c>you</c> <c>have</c> <c>to</c> <c>pay</c> <c>5</c><c>%</c> <c>taxes</c>"")
</code>

<t>It's</t> <t>not</t> <t>working</t> <t>too</t> <t>well</t>.
"
13636640|"<t>python</t> <t>-</t> <t>checking</t> <t>odd/even</t> <t>numbers</t> <t>and</t> <t>changing</t> <t>outputs</t> <t>on</t> <t>number</t> <t>size</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>couple</t> <t>of</t> <t>problems</t> <t>to</t> <t>solve</t> <t>for</t> <t>an</t> <t>assignment</t>, <t>and</t> <t>am</t> <t>a</t> <t>bit</t> <t>stuck</t>.
<t>The</t> <t>question</t> <t>is</t> <t>to</t> <t>write</t> <t>a</t> <t>program</t> <t>that</t> <t>gets</t> <t>the</t> <t>user</t> <t>to</t> <t>input</t> <t>an</t> <t>odd</t> <t>number</t> (<t>check</t> <t>it's</t> <t>odd</t>), <t>then</t> <t>print</t> <t>an</t> <t>upside</t> <t>down</t> <t>pyramid</t> <t>of</t> <t>stars</t> <t>based</t> <t>on</t> <t>the</t> <t>size</t> <t>of</t> <t>the</t> <t>input</t>.

<t>For</t> <t>example</t>, <t>if</t> <t>you</t> <t>enter</t> <t>5</t>, <t>it</t> <t>comes</t> <t>up</t> <t>with</t>

<code><c>**</c><c>**</c><c>*</c>
 <c>**</c><c>*</c>
  <c>*</c>
</code>

<t>My</t> <t>problem</t> <t>is</t> <t>therefore</t> <t>two-fold</t>.

<t>1</t>) <t>How</t> <t>do</t> <t>I</t> <t>check</t> <t>if</t> <t>it's</t> <t>even</t> <t>or</t> <t>odd</t>? <t>I</t> <t>tried</t> <code><c>if</c> <c>number</c><c>/2</c> <c>==</c> <c>int</c></code> <t>in</t> <t>the</t> <t>hope</t> <t>that</t> <t>it</t> <t>might</t> <t>do</t> <t>something</t>, <t>and</t> <t>the</t> <t>internet</t> <t>tells</t> <t>me</t> <t>to</t> <t>do</t> <code><c>if</c> <c>number</c><c>%</c><c>2</c><c>==</c><c>0</c></code>, <t>but</t> <t>that</t> <t>doesn't</t> <t>work</t>.

<t>2</t>) <t>How</t> <t>do</t> <t>I</t> <t>change</t> <t>the</t> <t>asterisks</t> <t>in</t> <t>the</t> <t>middle</t> <t>of</t> <t>each</t> <t>line</t>?

<t>Any</t> <t>help</t> <t>with</t> <t>either</t> <t>problem</t> <t>is</t> <t>greatly</t> <t>appreciated</t>.
"
13704860|"<t>zip</t> <t>lists</t> <t>in</t> <t>python</t>"|"<t>I</t> <t>am</t> <t>a</t> <t>python</t> <t>newbie</t> <t>and</t> <t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>learn</t> <t>how</t> <t>to</t> ""<t>zip</t>"" <t>lists</t>. <t>To</t> <t>this</t> <t>end</t>, <t>I</t> <t>have</t> <t>a</t> <t>program</t>, <t>where</t> <t>at</t> <t>a</t> <t>particular</t> <t>point</t>, <t>I</t> <t>do</t> <t>the</t> <t>following</t>:

<code><c>x1</c>, <c>x2</c>, <c>x3</c> <c>=</c> <c>stuff</c><c>.</c><c>calculations(</c><c>withdataa</c>)
</code>

<t>This</t> <t>gives</t> <t>me</t> <t>three</t> <t>lists</t>, <code><c>x1</c></code>, <code><c>x2</c></code>, <t>and</t> <code><c>x3</c></code>, <t>each</t> <t>of</t>, <t>say</t>, <t>size</t> <t>20</t>.

<t>Now</t>, <t>I</t> <t>do</t>:

<code><c>zipall</c> <c>=</c> <c>zip(</c><c>x1</c>, <c>x2</c>, <c>x3</c>)
</code>

<t>However</t>, <t>when</t> <t>I</t> <t>do</t>:

<code><c>print</c> ""<c>len</c> <c>of</c> <c>zipall</c> <c>%</c><c>s</c>"" <c>%</c> <c>len(</c><c>zipall</c>)
</code>

<t>I</t> <t>get</t> <t>20</t>, <t>which</t> <t>is</t> <t>not</t> <t>what</t> <t>I</t> <t>expected</t>. <t>I</t> <t>expected</t> <t>three</t>. <t>I</t> <t>think</t> <t>I</t> <t>am</t> <t>doing</t> <t>something</t> <t>fundamentally</t> <t>wrong</t>.
"
13890935|"<t>Does Python's</t> <t>time</t>.<t>time</t>() <t>return</t> <t>the</t> <t>local</t> <t>or</t> <t>UTC</t> <t>timestamp</t>?"|"<t>Does</t> <code><c>time</c><c>.</c><c>time(</c>)</code> <t>in</t> <t>the</t> <t>Python</t> <t>time</t> <t>module</t> <t>return</t> <t>the</t> <t>system's</t> <t>time</t> <t>or</t> <t>the</t> <t>time</t> <t>in</t> <t>UTC</t>?
"
14149422|"<t>Using</t> <t>pip</t> <t>behind</t> <t>a</t> <t>proxy</t>"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>use</t> <t>pip</t> <t>behind</t> <t>a</t> <t>proxy</t> <t>at</t> <t>work</t>. <t>I'm</t> <t>not</t> <t>a</t> <t>networking</t> <t>expert</t> <t>so</t> <t>bear</t> <t>with</t> <t>me</t> <t>if</t> <t>this</t> <t>super</t> <t>obvious</t>.

<t>One</t> <t>of</t> <t>the</t> <t>answers</t> <t>from</t> <t>this</t> <t>post</t> <t>suggested</t> <t>using</t> <t>CNTLM</t>. <t>I</t> <t>installed</t> <t>and</t> <t>configured</t> <t>it</t> <t>per</t> <t>this</t> <t>other</t> <t>post</t>, <t>but</t> <t>running</t> <code><c>cntlm</c><c>.</c><c>exe</c> <c>-</c><c>c</c> <c>cntlm</c><c>.</c><c>ini</c> <c>-</c><c>I</c> <c>-</c><c>M</c> <c>htt</c><c>p://google.com</c></code> <t>gave</t> <t>the</t> <t>error</t> <code><c>Connection</c> <c>to</c> <c>proxy</c> <c>failed</c>, <c>bailing</c> <c>out</c></code>.

<t>I</t> <t>also</t> <t>tried</t> <code><c>pip</c> <c>install</c> <c>-</c><c>–</c><c>proxy</c><c>=</c><c>user</c>:<c>pass</c><c>@</c><c>localhost</c>:<c>3128</c></code> (<t>the</t> <t>default</t> <t>CNTLM</t> <t>port</t>) <t>but</t> <t>that</t> <t>raised</t> <code><c>Cannot</c> <c>fetch</c> <c>index</c> <c>base</c> <c>URL</c> <c>htt</c><c>p://pypi.python.org/simple/</c></code>. <t>Clearly</t> <t>something's</t> <t>up</t> <t>with</t> <t>the</t> <t>proxy</t>.

<t>Does</t> <t>anyone</t> <t>know</t> <t>how</t> <t>to</t> <t>check</t> <t>more</t> <t>definitively</t> <t>whether</t> <t>CNTLM</t> <t>is</t> <t>set</t> <t>up</t> <t>right</t>, <t>or</t> <t>if</t> <t>there's</t> <t>another</t> <t>way</t> <t>around</t> <t>this</t> <t>altogether</t>? <t>I</t> <t>know</t> <t>you</t> <t>can</t> <t>also</t> <t>set</t> <t>the</t> <code><c>http_proxy</c></code> <t>environment</t> <t>variable</t> <t>as</t> <t>described</t> <t>here</t> <t>but</t> <t>I'm</t> <t>not</t> <t>sure</t> <t>what</t> <t>credentials</t> <t>to</t> <t>put</t> <t>in</t>. <t>The</t> <t>ones</t> <t>from</t> <code><c>cntlm</c><c>.</c><c>ini</c></code>?

<t>Thanks</t>!
"
14261614|"<t>How</t> <t>do</t> <t>I</t> <t>install</t> <t>the</t> <t>yaml</t> <t>package</t> <t>for</t> <t>Python</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>Python</t> <t>program</t> <t>that</t> <t>uses</t> <t>YAML</t>.  <t>I</t> <t>attempted</t> <t>to</t> <t>install</t> <t>it</t> <t>on</t> <t>a</t> <t>new</t> <t>server</t> <t>using</t> <code><c>pip</c> <c>install</c> <c>yaml</c></code> <t>and</t> <t>it</t> <t>returns</t> <t>the</t> <t>following</t>:

<code><c>$</c> <c>sudo</c> <c>pip</c> <c>install</c> <c>yaml</c>
<c>Downloading</c><c>/unpacking</c> <c>yaml</c>
  <c>Could</c> <c>not</c> <c>find</c> <c>any</c> <c>downloads</c> <c>that</c> <c>satisfy</c> <c>the</c> <c>requirement</c> <c>yaml</c>
<c>No</c> <c>distributions</c> <c>at</c> <c>all</c> <c>found</c> <c>for</c> <c>yaml</c>
<c>Storing</c> <c>complete</c> <c>log</c> <c>in</c> <c>/home/pa/.pip/pip.log
</c></code>

<t>How</t> <t>do</t> <t>I</t> <t>install</t> <t>the</t> <t>yaml</t> <t>package</t> <t>for</t> <t>Python</t>?  <t>I'm</t> <t>running</t> <t>Python</t> <t>2.7.</t>
"
14507591|"<t>Python Dictionary</t> <t>Comprehension</t>"|"<t>Is</t> <t>it</t> <t>possible</t> <t>to</t> <t>create</t> <t>a</t> <t>dictionary</t> <t>comprehension</t> <t>in</t> <t>Python</t> (<t>for</t> <t>the</t> <t>keys</t>)?

<t>Without</t> <t>list</t> <t>comprehensions</t>, <t>you</t> <t>can</t> <t>use</t> <t>something</t> <t>like</t> <t>this</t>:

<code><c>l</c> <c>=</c> []
<c>for</c> <c>n</c> <c>in</c> <c>range(</c><c>1</c>, <c>11</c>):
    <c>l</c><c>.</c><c>append(</c><c>n</c>)
</code>

<t>We</t> <t>can</t> <t>shorten</t> <t>this</t> <t>to</t> <t>a</t> <t>list</t> <t>comprehension</t>: <code><c>l</c> <c>=</c> [<c>n</c> <c>for</c> <c>n</c> <c>in</c> <c>range(</c><c>1</c>, <c>11</c>)]</code>.

<t>However</t>, <t>say</t> <t>I</t> <t>want</t> <t>to</t> <t>set</t> <t>a</t> <t>dictionary's</t> <t>keys</t> <t>to</t> <t>the</t> <t>same</t> <t>value</t>.
<t>I</t> <t>can</t> <t>do</t>:

<code><c>d</c> <c>=</c> {}
<c>for</c> <c>n</c> <c>in</c> <c>range(</c><c>1</c>, <c>11</c>):
     <c>d</c>[<c>n</c>] <c>=</c> <c>True</c> # <c>same</c> <c>value</c> <c>for</c> <c>each</c>
</code>

<t>I've</t> <t>tried</t> <t>this</t>:

<code><c>d</c> <c>=</c> {}
<c>d</c>[<c>i</c> <c>for</c> <c>i</c> <c>in</c> <c>range(</c><c>1</c>, <c>11</c>)] <c>=</c> <c>True</c>
</code>

<t>However</t>, <t>I</t> <t>get</t> <t>a</t> <code><c>SyntaxError</c></code> <t>on</t> <t>the</t> <code><c>for</c></code>.

<t>In</t> <t>addition</t> (<t>I</t> <t>don't</t> <t>need</t> <t>this</t> <t>part</t>, <t>but</t> <t>just</t> <t>wondering</t>), <t>can</t> <t>you</t> <t>set</t> <t>a</t> <t>dictionary's</t> <t>keys</t> <t>to</t> <t>a</t> <t>bunch</t> <t>of</t> <t>different</t> <t>values</t>, <t>like</t> <t>this</t>:

<code><c>d</c> <c>=</c> {}
<c>for</c> <c>n</c> <c>in</c> <c>range(</c><c>1</c>, <c>11</c>):
    <c>d</c>[<c>n</c>] <c>=</c> <c>n</c>
</code>

<t>Is</t> <t>this</t> <t>possible</t> <t>with</t> <t>a</t> <t>dictionary</t> <t>comprehension</t>?

<code><c>d</c> <c>=</c> {}
<c>d</c>[<c>i</c> <c>for</c> <c>i</c> <c>in</c> <c>range(</c><c>1</c>, <c>11</c>)] <c>=</c> [<c>x</c> <c>for</c> <c>x</c> <c>in</c> <c>range(</c><c>1</c>, <c>11</c>)]
</code>

<t>This</t> <t>also</t> <t>raises</t> <t>a</t> <code><c>SyntaxError</c></code> <t>on</t> <t>the</t> <code><c>for</c></code>.
"
14661701|"<t>How</t> <t>to</t> <t>drop</t> <t>a</t> <t>list</t> <t>of</t> <t>rows</t> <t>from</t> <t>Pandas</t> <t>dataframe</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>dataframe</t> <t>df</t> :

<code><c>&gt;&gt;&gt;</c> <c>df</c>
                  <c>sales</c>  <c>discount</c>  <c>net_sales</c>    <c>cogs</c>
<c>STK_ID</c> <c>RPT_Date</c>                                     
<c>600141</c> <c>20060331</c>   <c>2.709</c>       <c>NaN</c>      <c>2.709</c>   <c>2.245</c>
       <c>20060630</c>   <c>6.590</c>       <c>NaN</c>      <c>6.590</c>   <c>5.291</c>
       <c>20060930</c>  <c>10.103</c>       <c>NaN</c>     <c>10.103</c>   <c>7.981</c>
       <c>20061231</c>  <c>15.915</c>       <c>NaN</c>     <c>15.915</c>  <c>12.686</c>
       <c>20070331</c>   <c>3.196</c>       <c>NaN</c>      <c>3.196</c>   <c>2.710</c>
       <c>20070630</c>   <c>7.907</c>       <c>NaN</c>      <c>7.907</c>   <c>6.459</c>
</code>

<t>Then</t> <t>I</t> <t>want</t> <t>to</t> <t>drop</t> <t>rows</t> <t>with</t> <t>certain</t> <t>sequence</t> <t>numbers</t> <t>which</t> <t>indicated</t> <t>in</t> <t>a</t> <t>list</t>, <t>suppose</t> <t>here</t> <t>is</t> <code>[<c>1</c>,<c>2</c>,<c>4</c>],</code> <t>then</t> <t>left</t>:

<code>                  <c>sales</c>  <c>discount</c>  <c>net_sales</c>    <c>cogs</c>
<c>STK_ID</c> <c>RPT_Date</c>                                     
<c>600141</c> <c>20060331</c>   <c>2.709</c>       <c>NaN</c>      <c>2.709</c>   <c>2.245</c>
       <c>20061231</c>  <c>15.915</c>       <c>NaN</c>     <c>15.915</c>  <c>12.686</c>
       <c>20070630</c>   <c>7.907</c>       <c>NaN</c>      <c>7.907</c>   <c>6.459</c>
</code>

<t>How</t> <t>or</t> <t>what</t> <t>function</t> <t>can</t> <t>do</t> <t>that</t> ?
"
14676265|"<t>How</t> <t>to</t> <t>read</t> <t>text</t> <t>file</t> <t>into</t> <t>a</t> <t>list</t> <t>or</t> <t>array</t> <t>with</t> <t>Python</t>"|"<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>read</t> <t>the</t> <t>lines</t> <t>of</t> <t>a</t> <t>text</t> <t>file</t> <t>into</t> <t>a</t> <t>list</t> <t>or</t> <t>array</t> <t>in</t> <t>python</t>.  <t>I</t> <t>just</t> <t>need</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>individually</t> <t>access</t> <t>any</t> <t>item</t> <t>in</t> <t>the</t> <t>list</t> <t>or</t> <t>array</t> <t>after</t> <t>it</t> <t>is</t> <t>created</t>.

<t>The</t> <t>text</t> <t>file</t> <t>is</t> <t>formatted</t> <t>as</t> <t>follows</t>:

<code><c>0</c>,<c>0</c>,<c>200</c>,<c>0</c>,<c>53</c>,<c>1</c>,<c>0</c>,<c>255</c>,...,0.
</code>

<t>Where</t> <t>the</t> <code>...</code> <t>is</t> <t>above</t>, <t>there</t> <t>actual</t> <t>text</t> <t>file</t> <t>has</t> <t>hundreds</t> <t>or</t> <t>thousands</t> <t>more</t> <t>items</t>.

<t>I'm</t> <t>using</t> <t>the</t> <t>following</t> <t>code</t> <t>to</t> <t>try</t> <t>to</t> <t>read</t> <t>the</t> <t>file</t> <t>into</t> <t>a</t> <t>list</t>:

<code><c>text_file</c> <c>=</c> <c>open(</c>""<c>filename</c><c>.</c><c>dat</c>"", ""<c>r</c>"")
<c>lines</c> <c>=</c> <c>text_file</c><c>.</c><c>readlines(</c>)
<c>print</c> <c>lines</c>
<c>print</c> <c>len(</c><c>lines</c>)
<c>text_file</c><c>.</c><c>close(</c>)
</code>

<t>The</t> <t>output</t> <t>I</t> <t>get</t> <t>is</t>:

<code>['<c>0</c>,<c>0</c>,<c>200</c>,<c>0</c>,<c>53</c>,<c>1</c>,<c>0</c>,<c>255</c>,...,0.']
<c>1</c>
</code>

<t>Apparently</t> <t>it</t> <t>is</t> <t>reading</t> <t>the</t> <t>entire</t> <t>file</t> <t>into</t> <t>a</t> <t>list</t> <t>of</t> <t>just</t> <t>one</t> <t>item</t>, <t>rather</t> <t>than</t> <t>a</t> <t>list</t> <t>of</t> <t>individual</t> <t>items</t>.  <t>What</t> <t>am</t> <t>I</t> <t>doing</t> <t>wrong</t>?
"
14693646|"<t>Writing</t> <t>to</t> <t>CSV</t> <t>with</t> <t>Python</t> <t>adds</t> <t>blank</t> <t>lines</t>"|"<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>write</t> <t>to</t> <t>CSV</t> <t>file</t> <t>but</t> <t>there</t> <t>are</t> <t>blank</t> <t>rows</t> <t>in</t> <t>between</t>. <t>How</t> <t>can</t> <t>I</t> <t>remove</t> <t>the</t> <t>blank</t> <t>rows</t>?

<code><c>import</c> <c>csv</c>
<c>b</c> <c>=</c> <c>open(</c>'<c>test</c><c>.</c><c>csv</c>', '<c>w</c>')
<c>a</c> <c>=</c> <c>csv</c><c>.</c><c>writer(</c><c>b</c>)
<c>data</c> <c>=</c> [['<c>Me</c>', '<c>You</c>'],<c>\
</c>        ['<c>293</c>', '<c>219</c>'],<c>\
</c>        ['<c>54</c>', '<c>13</c>']]
<c>a</c><c>.</c><c>writerows(</c><c>data</c>)
<c>b</c><c>.</c><c>close(</c>)
</code>
"
15221473|"<t>How</t> <t>do</t> <t>I</t> <t>update</t> <t>pip</t> <t>itself</t> <t>from</t> <t>inside</t> <t>my</t> <t>virtual</t> <t>environment</t>?"|"<t>I'm</t> <t>able</t> <t>to</t> <t>update</t> <t>pip-managed</t> <t>packages</t>, <t>but</t> <t>how</t> <t>do</t> <t>I</t> <t>update</t> <t>pip</t> <t>itself</t>? <t>According</t> <t>to</t> <code><c>pip</c> <c>-</c><c>-</c><c>version</c></code>, <t>I</t> <t>currently</t> <t>have</t> <t>pip</t> <t>1.1</t> <t>installed</t> <t>in</t> <t>my</t> <t>virtualenv</t> <t>and</t> <t>I</t> <t>want</t> <t>to</t> <t>update</t> <t>to</t> <t>the</t> <t>latest</t> <t>version</t>. 

<t>What's</t> <t>the</t> <t>command</t> <t>for</t> <t>that</t>? <t>Do</t> <t>I</t> <t>need</t> <t>to</t> <t>use</t> <t>distribute</t> <t>or</t> <t>is</t> <t>there</t> <t>a</t> <t>native</t> <t>pip</t> <t>or</t> <t>virtualenv</t> <t>command</t>? <t>I've</t> <t>already</t> <t>tried</t> <code><c>pip</c> <c>update</c></code> <t>and</t> <code><c>pip</c> <c>update</c> <c>pip</c></code> <t>with</t> <t>no</t> <t>success</t>.
"
15286401|"<t>Print</t> <t>multiple</t> <t>arguments</t> <t>in</t> <t>python</t>"|"<t>This</t> <t>is</t> <t>just</t> <t>a</t> <t>snippet</t> <t>of</t> <t>my</t> <t>code</t>:

<code><c>print(</c>""<c>Total</c> <c>score</c> <c>for</c> <c>%</c><c>s</c> <c>is</c> <c>%</c><c>s</c>  "", <c>name</c>, <c>score</c>)
</code>

<t>but</t> <t>I</t> <t>want</t> <t>it</t> <t>to</t> <t>print</t> <t>out</t>:
""<t>Total</t> <t>score</t> <t>for</t> (<t>name</t>) <t>is</t> (<t>score</t>)"" <t>where</t> <t>name</t> <t>is</t> <t>a</t> <t>variable</t> <t>in</t> <t>a</t> <t>list</t> <t>and</t> <t>score</t> <t>is</t> <t>an</t> <t>integer</t>. <t>This</t> <t>is</t> <t>python</t> <t>3.3</t> <t>if</t> <t>that</t> <t>helps</t> <t>at</t> <t>all</t>. 
"
15769246|"<t>Pythonic</t> <t>way</t> <t>to</t> <t>print</t> <t>list</t> <t>items</t>"|"<t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>know</t> <t>if</t> <t>there</t> <t>is</t> <t>a</t> <t>better</t> <t>way</t> <t>to</t> <t>print</t> <t>all</t> <t>objects</t> <t>in</t> <t>a</t> <t>Python</t> <t>list</t> <t>than</t> <t>this</t> :

<code><c>myList</c> <c>=</c> [<c>Person(</c>""<c>Foo</c>""), <c>Person(</c>""<c>Bar</c>"")]
<c>print(</c>""<c>\n</c>""<c>.</c><c>join(</c><c>map(</c><c>str</c>, <c>myList</c>)))
<c>Foo</c>
<c>Bar</c>
</code>

<t>I</t> <t>read</t> <t>this</t> <t>way</t> <t>is</t> <t>not</t> <t>really</t> <t>good</t> :

<code><c>myList</c> <c>=</c> [<c>Person(</c>""<c>Foo</c>""), <c>Person(</c>""<c>Bar</c>"")]
<c>for</c> <c>p</c> <c>in</c> <c>myList</c>:
    <c>print(</c><c>p</c>)
</code>

<t>Isn't</t> <t>there</t> <t>something</t> <t>like</t> :

<code><c>print(</c><c>p</c>) <c>for</c> <c>p</c> <c>in</c> <c>myList</c>
</code>

<t>If</t> <t>not</t>, <t>my</t> <t>question</t> <t>is...</t> <t>why</t> ? <t>If</t> <t>we</t> <t>can</t> <t>do</t> <t>this</t> <t>kind</t> <t>of</t> <t>stuff</t> <t>with</t> <t>comprehensive</t> <t>lists</t>, <t>why</t> <t>not</t> <t>as</t> <t>a</t> <t>simple</t> <t>statement</t> <t>outside</t> <t>a</t> <t>list</t> ?
"
15785719|"<t>How</t> <t>to</t> <t>print</t> <t>a</t> <t>dictionary</t> <t>line</t> <t>by</t> <t>line</t> <t>in</t> <t>Python</t>?"|"<t>This</t> <t>is</t> <t>the</t> <t>dictionary</t>

<code><c>cars</c> <c>=</c> {'<c>A</c>':{'<c>speed</c>':<c>70</c>,
        '<c>color</c>':<c>2</c>},
        '<c>B</c>':{'<c>speed</c>':<c>60</c>,
        '<c>color</c>':<c>3</c>}}
</code>

<t>Using</t> <t>this</t> <code><c>for</c> <c>loop</c></code>

<code><c>for</c> <c>keys</c>,<c>values</c> <c>in</c> <c>cars</c><c>.</c><c>items(</c>):
    <c>print(</c><c>keys</c>)
    <c>print(</c><c>values</c>)
</code>

<t>It</t> <t>prints</t> <t>the</t> <t>following</t>:

<code><c>B</c>
{'<c>color</c>': <c>3</c>, '<c>speed</c>': <c>60</c>}
<c>A</c>
{'<c>color</c>': <c>2</c>, '<c>speed</c>': <c>70</c>}
</code>

<t>But</t> <t>I</t> <t>want</t> <t>the</t> <t>program</t> <t>to</t> <t>print</t> <t>it</t> <t>like</t> <t>this</t>:

<code><c>B</c>
<c>color</c> : <c>3</c>
<c>speed</c> : <c>60</c>
<c>A</c>
<c>color</c> : <c>2</c>
<c>speed</c> : <c>70</c>
</code>

<t>I</t> <t>just</t> <t>started</t> <t>learning</t> <t>dictionaries</t> <t>so</t> <t>I'm</t> <t>not</t> <t>sure</t> <t>how</t> <t>to</t> <t>do</t> <t>this</t>.
"
15891038|"<t>Pandas</t>: <t>change</t> <t>data</t> <t>type</t> <t>of</t> <t>columns</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>convert</t> <t>a</t> <t>table</t>, <t>represented</t> <t>as</t> <t>a</t> <t>list</t> <t>of</t> <t>lists</t>, <t>into</t> <t>a</t> <t>Pandas</t> <t>DataFrame</t>. <t>As</t> <t>an</t> <t>extremely</t> <t>simplified</t> <t>example</t>:

<code><c>a</c> <c>=</c> [['<c>a</c>', '<c>1.2</c>', '<c>4.2</c>'], ['<c>b</c>', '<c>70</c>', '<c>0.03</c>'], ['<c>x</c>', '<c>5</c>', '<c>0</c>']]
<c>df</c> <c>=</c> <c>pd</c><c>.</c><c>DataFrame(</c><c>a</c>)
</code>

<t>What</t> <t>is</t> <t>the</t> <t>best</t> <t>way</t> <t>to</t> <t>convert</t> <t>the</t> <t>columns</t> <t>to</t> <t>the</t> <t>appropriate</t> <t>types</t>, <t>in</t> <t>this</t> <t>case</t> <t>columns</t> <t>2</t> <t>and</t> <t>3</t> <t>into</t> <t>floats</t>? <t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>specify</t> <t>the</t> <t>types</t> <t>while</t> <t>converting</t> <t>to</t> <t>DataFrame</t>? <t>Or</t> <t>is</t> <t>it</t> <t>better</t> <t>to</t> <t>create</t> <t>the</t> <t>DataFrame</t> <t>first</t> <t>and</t> <t>then</t> <t>loop</t> <t>through</t> <t>the</t> <t>columns</t> <t>to</t> <t>change</t> <t>the</t> <t>type</t> <t>for</t> <t>each</t> <t>column</t>? <t>Ideally</t> <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>do</t> <t>this</t> <t>in</t> <t>a</t> <t>dynamic</t> <t>way</t> <t>because</t> <t>there</t> <t>can</t> <t>be</t> <t>hundreds</t> <t>of</t> <t>columns</t> <t>and</t> <t>I</t> <t>don't</t> <t>want</t> <t>to</t> <t>specify</t> <t>exactly</t> <t>which</t> <t>columns</t> <t>are</t> <t>of</t> <t>which</t> <t>type</t>. <t>All</t> <t>I</t> <t>can</t> <t>guarantee</t> <t>is</t> <t>that</t> <t>each</t> <t>columns</t> <t>contains</t> <t>values</t> <t>of</t> <t>the</t> <t>same</t> <t>type</t>.
"
15943769|"<t>How</t> <t>do</t> <t>I</t> <t>get</t> <t>the</t> <t>row</t> <t>count</t> <t>of</t> <t>a</t> <t>Pandas</t> <t>dataframe</t>?"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>get</t> <t>the</t> <t>number</t> <t>of</t> <t>rows</t> <t>of</t> <t>dataframe</t> <t>df</t> <t>with</t> <t>Pandas</t>, <t>and</t> <t>here</t> <t>is</t> <t>my</t> <t>code</t>.

<t>Method</t> <t>1</t>:

<code><c>total_rows</c> <c>=</c> <c>df</c><c>.</c><c>count</c>
<c>print</c> <c>total_rows</c> <c>+</c><c>1</c>
</code>

<t>Method</t> <t>2</t>:

<code><c>total_rows</c> <c>=</c> <c>df</c>['<c>First_columnn_label</c>']<c>.</c><c>count</c>
<c>print</c> <c>total_rows</c> <c>+</c><c>1</c>
</code>

<t>Both</t> <t>the</t> <t>code</t> <t>snippets</t> <t>give</t> <t>me</t> <t>this</t> <t>error</t>:


  <t>TypeError</t>: <t>unsupported</t> <t>operand</t> <t>type(s</t>) <t>for</t> <t>+</t>: '<t>instancemethod</t>' <t>and</t> '<t>int</t>'


<t>What</t> <t>am</t> <t>I</t> <t>doing</t> <t>wrong</t>?

<t>According</t> <t>to</t> <t>the</t> <t>answer</t> <t>given</t> <t>by</t> <t>@root</t> <t>the</t> <t>best</t> (<t>the</t> <t>fastest</t>) <t>way</t> <t>to</t> <t>check</t> <t>df</t> <t>length</t> <t>is</t> <t>to</t> <t>call</t>:

<code><c>len(</c><c>df</c><c>.</c><c>index</c>)
</code>
"
16296643|"<t>Convert</t> <t>tuple</t> <t>to</t> <t>list</t> <t>and</t> <t>back</t>"|"<t>I'm</t> <t>currently</t> <t>working</t> <t>on</t> <t>a</t> <t>map</t> <t>editor</t> <t>for</t> <t>a</t> <t>game</t> <t>in</t> <t>pygame</t>, <t>using</t> <t>tile</t> <t>maps</t>.
<t>The</t> <t>level</t> <t>is</t> <t>built</t> <t>up</t> <t>out</t> <t>of</t> <t>blocks</t> <t>in</t> <t>the</t> <t>following</t> <t>structure(though</t> <t>much</t> <t>larger</t>):

<code><c>level1</c> <c>=</c> (
         (<c>1</c>,<c>1</c>,<c>1</c>,<c>1</c>,<c>1</c>,<c>1</c>)
         (<c>1</c>,<c>0</c>,<c>0</c>,<c>0</c>,<c>0</c>,<c>1</c>)
         (<c>1</c>,<c>0</c>,<c>0</c>,<c>0</c>,<c>0</c>,<c>1</c>)
         (<c>1</c>,<c>0</c>,<c>0</c>,<c>0</c>,<c>0</c>,<c>1</c>)
         (<c>1</c>,<c>0</c>,<c>0</c>,<c>0</c>,<c>0</c>,<c>1</c>)
         (<c>1</c>,<c>1</c>,<c>1</c>,<c>1</c>,<c>1</c>,<c>1</c>))
</code>

<t>where</t> ""<t>1</t>"" <t>is</t> <t>a</t> <t>block</t> <t>that's</t> <t>a</t> <t>wall</t> <t>and</t> ""<t>0</t>"" <t>is</t> <t>a</t> <t>block</t> <t>that's</t> <t>empty</t> <t>air</t>.

<t>The</t> <t>following</t> <t>code</t> <t>is</t> <t>basically</t> <t>the</t> <t>one</t> <t>handling</t> <t>the</t> <t>change</t> <t>of</t> <t>block</t> <t>type</t>:

<code><c>clicked</c> <c>=</c> <c>pygame</c><c>.</c><c>mouse</c><c>.</c><c>get_pressed(</c>)
<c>if</c> <c>clicked</c>[<c>0</c>] <c>==</c> <c>1</c>:
    <c>currLevel</c>[((<c>mousey</c><c>+</c><c>cameraY</c>)<c>/60)][((mousex+cameraX)/60)]</c> <c>=</c> <c>1</c>
</code>

<t>But</t> <t>since</t> <t>the</t> <t>level</t> <t>is</t> <t>stored</t> <t>in</t> <t>a</t> <t>tuple</t>, <t>I'm</t> <t>unable</t> <t>to</t> <t>change</t> <t>the</t> <t>values</t> <t>of</t> <t>the</t> <t>different</t> <t>blocks</t>. <t>How</t> <t>do</t> <t>I</t> <t>go</t> <t>about</t> <t>changing</t> <t>the</t> <t>different</t> <t>values</t> <t>in</t> <t>the</t> <t>level</t> <t>in</t> <t>an</t> <t>easy</t> <t>manner</t>?

<t>Edit</t>: <t>Solved</t>! <t>Thank</t> <t>you</t> <t>guys</t>
"
16476924|"<t>How</t> <t>to</t> <t>iterate</t> <t>over</t> <t>rows</t> <t>in</t> <t>a</t> <t>DataFrame</t> <t>in</t> <t>Pandas</t>?"|"<t>I</t> <t>have</t> <t>a</t> <t>DataFrames</t> <t>from</t> <t>pandas</t>:

<code><c>import</c> <c>pandas</c> <c>as</c> <c>pd</c>
<c>inp</c> <c>=</c> [{'<c>c1</c>':<c>10</c>, '<c>c2</c>':<c>100</c>}, {'<c>c1</c>':<c>11</c>,'<c>c2</c>':<c>110</c>}, {'<c>c1</c>':<c>12</c>,'<c>c2</c>':<c>120</c>}]
<c>df</c> <c>=</c> <c>pd</c><c>.</c><c>DataFrame(</c><c>inp</c>)
<c>print</c> <c>df</c>
</code>

<t>Output</t>:

<code>   <c>c1</c>   <c>c2</c>
<c>0</c>  <c>10</c>  <c>100</c>
<c>1</c>  <c>11</c>  <c>110</c>
<c>2</c>  <c>12</c>  <c>120</c>
</code>

<t>Now</t> <t>I</t> <t>want</t> <t>to</t> <t>iterate</t> <t>over</t> <t>the</t> <t>rows</t> <t>of</t> <t>the</t> <t>above</t> <t>frame</t>. <t>For</t> <t>every</t> <t>row</t> <t>I</t> <t>want</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> <t>access</t> <t>its</t> <t>elements</t> (<t>values</t> <t>in</t> <t>cells</t>) <t>by</t> <t>the</t> <t>name</t> <t>of</t> <t>the</t> <t>columns</t>. <t>So</t>, <t>for</t> <t>example</t>, <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>have</t> <t>something</t> <t>like</t> <t>that</t>:

<code><c>for</c> <c>row</c> <c>in</c> <c>df</c><c>.</c><c>rows</c>:
   <c>print</c> <c>row</c>['<c>c1</c>'], <c>row</c>['<c>c2</c>']
</code>

<t>Is</t> <t>it</t> <t>possible</t> <t>to</t> <t>do</t> <t>that</t> <t>in</t> <t>pandas</t>?

<t>I</t> <t>found</t> <t>similar</t> <t>question</t>. <t>But</t> <t>it</t> <t>does</t> <t>not</t> <t>give</t> <t>me</t> <t>the</t> <t>answer</t> <t>I</t> <t>need</t>. <t>For</t> <t>example</t>, <t>it</t> <t>is</t> <t>suggested</t> <t>there</t> <t>to</t> <t>use</t>:

<code><c>for</c> <c>date</c>, <c>row</c> <c>in</c> <c>df</c><c>.</c><c>T</c><c>.</c><c>iteritems(</c>):
</code>

<t>or</t>

<code><c>for</c> <c>row</c> <c>in</c> <c>df</c><c>.</c><c>iterrows(</c>):
</code>

<t>But</t> <t>I</t> <t>do</t> <t>not</t> <t>understand</t> <t>what</t> <t>the</t> <code><c>row</c></code> <t>object</t> <t>is</t> <t>and</t> <t>how</t> <t>I</t> <t>can</t> <t>work</t> <t>with</t> <t>it</t>.
"
16503560|"<t>Read</t> <t>specific</t> <t>columns</t> <t>from</t> <t>a</t> <t>csv</t> <t>file</t> <t>with</t> <t>csv</t> <t>module</t>?"|"<t>I'm</t> <t>trying</t> <t>to</t> <t>parse</t> <t>through</t> <t>a</t> <t>csv</t> <t>file</t> <t>and</t> <t>extract</t> <t>the</t> <t>data</t> <t>from</t> <t>only</t> <t>specific</t> <t>columns</t>.

<t>Example</t> <t>csv</t>:

<code><c>ID</c> <c>|</c> <c>Name</c> <c>|</c> <c>Address</c> <c>|</c> <c>City</c> <c>|</c> <c>State</c> <c>|</c> <c>Zip</c> <c>|</c> <c>Phone</c> <c>|</c> <c>OPEID</c> <c>|</c> <c>IPEDS</c> <c>|</c>
<c>10</c> <c>|</c> <c>C</c>... <c>|</c> <c>130</c> <c>W</c><c>.</c><c>.</c> <c>|</c> <c>Mo</c><c>.</c><c>.</c> <c>|</c> <c>AL</c>... <c>|</c> 3.. | 334.. | 01023 | 10063 |
</code>

<t>I'm</t> <t>trying</t> <t>to</t> <t>capture</t> <t>only</t> <t>specific</t> <t>columns</t>, <t>say</t> <code><c>ID</c></code>, <code><c>Name</c></code>, <code><c>Zip</c></code> <t>and</t> <code><c>Phone</c></code>.

<t>Code I've</t> <t>looked</t> <t>at</t> <t>has</t> <t>led</t> <t>me</t> <t>to</t> <t>believe</t> <t>I</t> <t>can</t> <t>call</t> <t>the</t> <t>specific</t> <t>column</t> <t>by</t> <t>its</t> <t>corresponding</t> <t>number</t>, <t>so</t> <t>ie</t>: <code><c>Name</c></code> <t>would</t> <t>correspond</t> <t>to</t> <code><c>2</c></code> <t>and</t> <t>iterating</t> <t>through</t> <t>each</t> <t>row</t> <t>using</t> <code><c>row</c>[<c>2</c>]</code> <t>would</t> <t>produce</t> <t>all</t> <t>the</t> <t>items</t> <t>in</t> <t>column</t> <t>2</t>. <t>Only</t> <t>it</t> <t>doesn't</t>.

<t>Here's</t> <t>what</t> <t>I've</t> <t>done</t> <t>so</t> <t>far</t>:

<code><c>import</c> <c>sys</c>, <c>argparse</c>, <c>csv</c>
<c>from</c> <c>settings</c> <c>import</c> <c>*</c>

# <c>command</c> <c>arguments</c>
<c>parser</c> <c>=</c> <c>argparse</c><c>.</c><c>ArgumentParser(</c><c>description</c><c>=</c>'<c>csv</c> <c>to</c> <c>postgres</c>',<c>\
</c> <c>fromfile_prefix_chars</c><c>=</c>""<c>@</c>"" )
<c>parser</c><c>.</c><c>add_argument(</c>'<c>file</c>', <c>help</c><c>=</c>'<c>csv</c> <c>file</c> <c>to</c> <c>import</c>', <c>action</c><c>=</c>'<c>store</c>')
<c>args</c> <c>=</c> <c>parser</c><c>.</c><c>parse_args(</c>)
<c>csv_file</c> <c>=</c> <c>args</c><c>.</c><c>file</c>

# <c>open</c> <c>csv</c> <c>file</c>
<c>with</c> <c>open(</c><c>csv_file</c>, '<c>rb</c>') <c>as</c> <c>csvfile</c>:

    # <c>get</c> <c>number</c> <c>of</c> <c>columns</c>
    <c>for</c> <c>line</c> <c>in</c> <c>csvfile</c><c>.</c><c>readlines(</c>):
        <c>array</c> <c>=</c> <c>line</c><c>.</c><c>split(</c>',')
        <c>first_item</c> <c>=</c> <c>array</c>[<c>0</c>]

    <c>num_columns</c> <c>=</c> <c>len(</c><c>array</c>)
    <c>csvfile</c><c>.</c><c>seek(</c><c>0</c>)

    <c>reader</c> <c>=</c> <c>csv</c><c>.</c><c>reader(</c><c>csvfile</c>, <c>delimiter</c><c>=</c>' ')
        <c>included_cols</c> <c>=</c> [<c>1</c>, <c>2</c>, <c>6</c>, <c>7</c>]

    <c>for</c> <c>row</c> <c>in</c> <c>reader</c>:
            <c>content</c> <c>=</c> <c>list(</c><c>row</c>[<c>i</c>] <c>for</c> <c>i</c> <c>in</c> <c>included_cols</c>)
            <c>print</c> <c>content</c>
</code>

<t>and</t> <t>I'm</t> <t>expecting</t> <t>that</t> <t>this</t> <t>will</t> <t>print</t> <t>out</t> <t>only</t> <t>the</t> <t>specific</t> <t>columns</t> <t>I</t> <t>want</t> <t>for</t> <t>each</t> <t>row</t> <t>except</t> <t>it</t> <t>doesn't</t>, <t>I</t> <t>get</t> <t>the</t> <t>last</t> <t>column</t> <t>only</t>.
"
16720541|"<t>Python</t> <t>string</t>.<t>replace</t> <t>regular</t> <t>expression</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>parameter</t> <t>file</t> <t>of</t> <t>the</t> <t>form</t>

<code><c>parameter-name</c> <c>parameter-value</c>
</code>

<t>where</t> <t>the</t> <t>parameters</t> <t>may</t> <t>be</t> <t>in</t> <t>any</t> <t>order</t> <t>but</t> <t>there</t> <t>is</t> <t>only</t> <t>one</t> <t>parameter</t> <t>per</t> <t>line</t>.  <t>I</t> <t>want</t> <t>to</t> <t>replace</t> <t>one</t> <t>parameter's</t> <t>parameter-value</t> <t>with</t> <t>a</t> <t>new</t> <t>value</t>.

<t>I</t> <t>am</t> <t>using</t> <t>a</t> <t>line</t> <t>replace</t> <t>function</t> <t>posted</t> <t>previously</t> (<t>Search</t> <t>and</t> <t>replace</t> <t>a</t> <t>line</t> <t>in</t> <t>a</t> <t>file</t> <t>in</t> <t>Python</t>) <t>to</t> <t>replace</t> <t>the</t> <t>line</t> <t>which</t> <t>uses</t> <t>python's</t> <t>string</t>.<t>replace(pattern</t>, <t>subst</t>).  <t>The</t> <t>regular</t> <t>expression</t> <t>that</t> <t>I'm</t> <t>using</t> <t>works</t> <t>for</t> <t>instance</t> <t>in</t> <t>vim</t> <t>but</t> <t>doesn't</t> <t>appear</t> <t>to</t> <t>work</t> <t>in</t> <t>string.replace.</t>  <t>Here</t> <t>is</t> <t>the</t> <t>regular</t> <t>expression</t> <t>that</t> <t>I'm</t> <t>using</t>:

<code><c>line</c><c>.</c><c>replace(</c>""<c>^</c><c>.</c><c>*</c><c>interfaceOpDataFile</c><c>.</c><c>*</c><c>$</c><c>/i</c>"", ""<c>interfaceOpDataFile</c> <c>%</c><c>s</c>"" <c>%</c> (<c>fileIn</c>))
</code>

<t>where</t> <t>interfaceOpDataFile</t> <t>is</t> <t>the</t> <t>parameter</t> <t>name</t> <t>that</t> <t>I'm</t> <t>replacing</t> (<t>/i</t> <t>for</t> <t>case</t> <t>insensitive</t>) <t>and</t> <t>the</t> <t>new</t> <t>parameter</t> <t>value</t> <t>is</t> <t>the</t> <t>contents</t> <t>of</t> <t>the</t> <t>fileIn</t> <t>variable</t>.  <t>Is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>get</t> <t>python</t> <t>to</t> <t>recognize</t> <t>this</t> <t>regular</t> <t>expression</t> <t>or</t> <t>else</t> <t>is</t> <t>there</t> <t>another</t> <t>way</t> <t>to</t> <t>accomplish</t> <t>this</t> <t>task</t>?  <t>Thanks</t> <t>in</t> <t>advance</t>.
"
16819222|"<t>How</t> <t>to</t> <t>return</t> <t>dictionary</t> <t>keys</t> <t>as</t> <t>a</t> <t>list</t> <t>in</t> <t>Python</t>"|"<t>I</t> <t>have</t> <t>noticed</t> <t>a</t> <t>difference</t> <t>in</t> <t>Python</t> <t>2.7</t> <t>and</t> <t>old</t> <t>versions</t> <t>of</t> <t>Python</t> <t>3</t> <t>compared</t> <t>to</t> <t>Python</t> <t>>=</t> <t>3.3.</t>



<t>Previously</t> <t>in</t> <t>Python</t> <t>2.7,</t> <t>I</t> <t>could</t> <t>get</t> <t>dictionary</t> <t>keys</t>, <t>values</t>, <t>or</t> <t>items</t> <t>as</t> <t>a</t> <t>list</t>:

<code><c>&gt;&gt;&gt;</c> <c>newdict</c> <c>=</c> {<c>1</c>:<c>0</c>, <c>2</c>:<c>0</c>, <c>3</c>:<c>0</c>}
<c>&gt;&gt;&gt;</c> <c>newdict</c><c>.</c><c>keys(</c>)
[<c>1</c>, <c>2</c>, <c>3</c>]
</code>

<t>Now</t> <t>in</t> <t>Python</t> <t>>=</t> <t>3.3</t> <t>I</t> <t>get</t> <t>something</t> <t>this</t>:

<code><c>&gt;&gt;&gt;</c> <c>newdict</c><c>.</c><c>keys(</c>)
<c>dict_keys(</c>[<c>1</c>, <c>2</c>, <c>3</c>])
</code>

<t>So</t> <t>I</t> <t>have</t> <t>to</t> <t>do</t> <t>this</t> <t>to</t> <t>get</t> <t>a</t> <t>list</t>:

<code><c>newlist</c> <c>=</c> <c>list(</c>)
<c>for</c> <c>i</c> <c>in</c> <c>newdict</c><c>.</c><c>keys(</c>):
    <c>newlist</c><c>.</c><c>append(</c><c>i</c>)
</code>



<t>I</t> <t>am</t> <t>wondering</t> <t>if</t> <t>there</t> <t>is</t> <t>a</t> <t>better</t> <t>way</t> <t>to</t> <t>return</t> <t>a</t> <t>list</t> <t>in</t> <t>Python</t> <t>3</t>? 
"
16923281|"<t>Pandas</t> <t>writing</t> <t>dataframe</t> <t>to</t> <t>CSV</t> <t>file</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>dataframe</t> <t>in</t> <t>pandas</t> <t>which</t> <t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>write</t> <t>to</t> <t>a</t> <t>CSV</t> <t>file</t>. <t>I</t> <t>am</t> <t>doing</t> <t>this</t> <t>using</t>:

<code><c>df</c><c>.</c><c>to_csv(</c>'<c>out</c><c>.</c><c>csv</c>')
</code>

<t>And</t> <t>getting</t> <t>the</t> <t>error</t>:

<code><c>UnicodeEncodeError</c>: '<c>ascii</c>' <c>codec</c> <c>can</c>'<c>t</c> <c>encode</c> <c>character</c> <c>u</c>'<c>\u03b1</c>' <c>in</c> <c>position</c> <c>20</c>: <c>ordinal</c> <c>not</c> <c>in</c> <c>range(</c><c>128</c>)
</code>

<t>Is</t> <t>there</t> <t>any</t> <t>way</t> <t>to</t> <t>get</t> <t>around</t> <t>this</t> <t>easily</t> (<t>i.e.</t> <t>I</t> <t>have</t> <t>unicode</t> <t>characters</t> <t>in</t> <t>my</t> <t>data</t> <t>frame</t>)? <t>And</t> <t>is</t> <t>there</t> <t>a</t> <t>way</t> <t>to</t> <t>write</t> <t>to</t> <t>a</t> <t>tab</t> <t>delimited</t> <t>file</t> <t>instead</t> <t>of</t> <t>a</t> <t>CSV</t> <t>using</t> <t>e.g.</t> <t>a</t> '<t>to-tab</t>' <t>method</t> (<t>that</t> <t>I</t> <t>dont</t> <t>think</t> <t>exists</t>)?
"
17071871|"<t>Select</t> <t>rows</t> <t>from</t> <t>a</t> <t>DataFrame</t> <t>based</t> <t>on</t> <t>values</t> <t>in</t> <t>a</t> <t>column</t> <t>in</t> <t>pandas</t>"|"<t>How</t> <t>to</t> <t>select</t> <t>rows</t> <t>from</t> <t>a</t> <t>DataFrame</t> <t>based</t> <t>on</t> <t>values</t> <t>in</t> <t>some</t> <t>column</t> <t>in</t> <t>pandas</t>?
<t>In SQL</t> <t>I</t> <t>would</t> <t>use</t>: 

<code><c>select</c> <c>*</c> <c>from</c> <c>table</c> <c>where</c> <c>colume_name</c> <c>=</c> <c>some_value</c><c>.</c> 
</code>

<t>I</t> <t>tried</t> <t>to</t> <t>look</t> <t>at</t> <t>pandas</t> <t>documentation</t> <t>but</t> <t>did</t> <t>not</t> <t>immediately</t> <t>find</t> <t>the</t> <t>answer</t>.
"
17140886|"<t>How</t> <t>to</t> <t>search</t> <t>and</t> <t>replace</t> <t>text</t> <t>in</t> <t>a</t> <t>file</t> <t>using</t> <t>Python</t>?"|"<t>How</t> <t>do</t> <t>I</t> <t>search</t> <t>and</t> <t>replace</t> <t>text</t> <t>in</t> <t>a</t> <t>file</t> <t>using</t> <t>Python</t> <t>3</t>?

<t>Here</t> <t>is</t> <t>my</t> <t>code</t>:

<code><c>import</c> <c>os</c>
<c>import</c> <c>sys</c>
<c>import</c> <c>fileinput</c>

<c>print</c> (""<c>Text</c> <c>to</c> <c>search</c> <c>for</c>:"")
<c>textToSearch</c> <c>=</c> <c>input(</c> ""<c>&gt;</c> "" ) 

<c>print</c> (""<c>Text</c> <c>to</c> <c>replace</c> <c>it</c> <c>with</c>:"")
<c>textToReplace</c> <c>=</c> <c>input(</c> ""<c>&gt;</c> "" )

<c>print</c> (""<c>File</c> <c>to</c> <c>perform</c> <c>Search-Replace</c> <c>on</c>:"")
<c>fileToSearch</c>  <c>=</c> <c>input(</c> ""<c>&gt;</c> "" )
#<c>fileToSearch</c> <c>=</c> '<c>D:\dummy1.txt</c>'

<c>tempFile</c> <c>=</c> <c>open(</c> <c>fileToSearch</c>, '<c>r</c><c>+</c>' )

<c>for</c> <c>line</c> <c>in</c> <c>fileinput</c><c>.</c><c>input(</c> <c>fileToSearch</c> ):
    <c>if</c> <c>textToSearch</c> <c>in</c> <c>line</c> :
        <c>print(</c>'<c>Match</c> <c>Found</c>')
    <c>else</c>:
        <c>print(</c>'<c>Match</c> <c>Not</c> <c>Found</c><c>!</c><c>!</c>')
    <c>tempFile</c><c>.</c><c>write(</c> <c>line</c><c>.</c><c>replace(</c> <c>textToSearch</c>, <c>textToReplace</c> ) )
<c>tempFile</c><c>.</c><c>close(</c>)


<c>input(</c> '<c>\n\n</c> <c>Press</c> <c>Enter</c> <c>to</c> <c>exit</c>...' )
</code>

<t>Input</t> <t>file</t>:


  <t>hi</t> <t>this</t> <t>is</t> <t>abcd</t> <t>hi</t> <t>this</t> <t>is</t> <t>abcd</t>
  
  <t>This</t> <t>is</t> <t>dummy</t> <t>text</t> <t>file</t>.
  
  <t>This</t> <t>is</t> <t>how</t> <t>search</t> <t>and</t> <t>replace</t> <t>works</t> <t>abcd</t>


<t>When</t> <t>I</t> <t>search</t> <t>and</t> <t>replace</t> '<t>ram</t>' <t>by</t> '<t>abcd</t>' <t>in</t> <t>above</t> <t>input</t> <t>file</t>, <t>it</t> <t>works</t> <t>as</t> <t>a</t> <t>charm</t>. <t>But</t> <t>when</t> <t>I</t> <t>do</t> <t>vice-verse</t> <t>i.e.</t> '<t>abcd</t>' <t>by</t> '<t>ram</t>', <t>some</t> <t>junk</t> <t>characters</t> <t>are</t> <t>left</t> <t>at</t> <t>the</t> <t>end</t>.

<t>Replacing</t> '<t>abcd</t>' <t>by</t> '<t>ram</t>'


  <t>hi</t> <t>this</t> <t>is</t> <t>ram</t> <t>hi</t> <t>this</t> <t>is</t> <t>ram</t>
  
  <t>This</t> <t>is</t> <t>dummy</t> <t>text</t> <t>file</t>.
  
  <t>This</t> <t>is</t> <t>how</t> <t>search</t> <t>and</t> <t>replace</t> <t>works</t> <t>ram</t>

"
17153779|"<t>How</t> <t>can</t> <t>I</t> <t>print</t> <t>variable</t> <t>and</t> <t>string</t> <t>on</t> <t>same</t> <t>line</t> <t>in</t> <t>Python</t>?"|"<t>I</t> <t>am</t> <t>using</t> <t>python</t> <t>to</t> <t>work</t> <t>out</t> <t>how</t> <t>many</t> <t>children</t> <t>would</t> <t>be</t> <t>born</t> <t>in</t> <t>5</t> <t>years</t> <t>if</t> <t>a</t> <t>child</t> <t>was</t> <t>born</t> <t>every</t> <t>7</t> <t>seconds</t>. <t>The</t> <t>problem</t> <t>is</t> <t>on</t> <t>my</t> <t>last</t> <t>line</t>. <t>How</t> <t>do</t> <t>I</t> <t>get</t> <t>a</t> <t>variable</t> <t>to</t> <t>work</t> <t>when</t> <t>I'm</t> <t>printing</t> <t>text</t> <t>either</t> <t>side</t> <t>of</t> <t>it</t>? 

<t>Here</t> <t>is</t> <t>my</t> <t>code</t>:

<code><c>currentPop</c> <c>=</c> <c>312032486</c>
<c>oneYear</c> <c>=</c> <c>365</c>
<c>hours</c> <c>=</c> <c>24</c>
<c>minutes</c> <c>=</c> <c>60</c>
<c>seconds</c> <c>=</c> <c>60</c>

# <c>seconds</c> <c>in</c> <c>a</c> <c>single</c> <c>day</c>
<c>secondsInDay</c> <c>=</c> <c>hours</c> <c>*</c> <c>minutes</c> <c>*</c> <c>seconds</c>

# <c>seconds</c> <c>in</c> <c>a</c> <c>year</c>
<c>secondsInYear</c> <c>=</c> <c>secondsInDay</c> <c>*</c> <c>oneYear</c>

<c>fiveYears</c> <c>=</c> <c>secondsInYear</c> <c>*</c> <c>5</c>

#<c>Seconds</c> <c>in</c> <c>5</c> <c>years</c>
<c>print</c> <c>fiveYears</c>

# <c>fiveYears</c> <c>in</c> <c>seconds</c>, <c>divided</c> <c>by</c> <c>7</c> <c>seconds</c>
<c>births</c> <c>=</c> <c>fiveYears</c> <c>//</c> <c>7</c>

<c>print</c> ""<c>If</c> <c>there</c> <c>was</c> <c>a</c> <c>birth</c> <c>every</c> <c>7</c> <c>seconds</c>, <c>there</c> <c>would</c> <c>be</c>: "" <c>births</c> ""<c>births</c>""
</code>
"
17271319|"<t>How</t> <t>do</t> <t>I</t> <t>install</t> <t>pip</t> <t>on</t> <t>macOS</t> <t>or</t> <t>OS</t> <t>X</t>?"|"<t>I</t> <t>spent</t> <t>most</t> <t>of</t> <t>the</t> <t>day</t> <t>yesterday</t> <t>searching</t> <t>for</t> <t>a</t> <t>clear</t> <t>answer</t> <t>for</t> <t>installing</t> <code><c>pip</c></code> (<t>package</t> <t>manager</t> <t>for</t> <t>Python</t>). <t>I</t> <t>can't</t> <t>find</t> <t>a</t> <t>good</t> <t>solution</t>.

<t>How</t> <t>do</t> <t>I</t> <t>install</t> <t>it</t>?
"
17309288|"<t>ImportError</t>: <t>No</t> <t>module</t> <t>named</t> <t>requests</t>"|"<t>Whenever</t> <t>I</t> <t>run</t> <t>this</t> <t>code</t>, <t>I</t> <t>consistently</t> <t>get</t> <t>an</t> <t>error</t> <t>saying</t> <code><c>No</c> <c>module</c> <c>Named</c> <c>requests</c></code>:

<code><c>import</c> <c>requests</c>
</code>

<t>The</t> <t>error</t> <t>I</t> <t>get</t>:

<code> <c>File</c> ""<c>ex2</c><c>.</c><c>py</c>"", <c>line</c> <c>1</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>import</c> <c>requests</c>
<c>ImportError</c>: <c>No</c> <c>module</c> <c>named</c> <c>requests</c>
</code>
"
17330160|"<t>How</t> <t>does</t> <t>the</t> <t>@property</t> <t>decorator</t> <t>work</t>?"|"<t>I</t> <t>would</t> <t>like</t> <t>to</t> <t>understand</t> <t>how</t> <t>the</t> <t>built-in</t> <t>function</t> <code><c>property</c></code> <t>works</t>. <t>What</t> <t>confuses</t> <t>me</t> <t>is</t> <t>that</t> <code><c>property</c></code> <t>can</t> <t>also</t> <t>be</t> <t>used</t> <t>as</t> <t>a</t> <t>decorator</t>, <t>but</t> <t>it</t> <t>only</t> <t>takes</t> <t>arguments</t> <t>when</t> <t>used</t> <t>as</t> <t>a</t> <t>built-in</t> <t>function</t> <t>and</t> <t>not</t> <t>when</t> <t>used</t> <t>as</t> <t>a</t> <t>decorator</t>.

<t>This</t> <t>example</t> <t>is</t> <t>from</t> <t>the</t> <t>documentation</t>:

<code><c>class</c> <c>C(</c><c>object</c>):
    <c>def</c> <c>__init__(</c><c>self</c>):
        <c>self</c><c>.</c><c>_x</c> <c>=</c> <c>None</c>

    <c>def</c> <c>getx(</c><c>self</c>):
        <c>return</c> <c>self</c><c>.</c><c>_x</c>
    <c>def</c> <c>setx(</c><c>self</c>, <c>value</c>):
        <c>self</c><c>.</c><c>_x</c> <c>=</c> <c>value</c>
    <c>def</c> <c>delx(</c><c>self</c>):
        <c>del</c> <c>self</c><c>.</c><c>_x</c>
    <c>x</c> <c>=</c> <c>property(</c><c>getx</c>, <c>setx</c>, <c>delx</c>, ""<c>I</c>'<c>m</c> <c>the</c> '<c>x</c>' <c>property</c><c>.</c>"")
</code>

<code><c>property</c></code>'<t>s</t> <t>arguments</t> <t>are</t> <code><c>getx</c></code>, <code><c>setx</c></code>, <code><c>delx</c></code> <t>and</t> <t>a</t> <t>doc</t> <t>string</t>.

<t>In</t> <t>the</t> <t>code</t> <t>below</t> <code><c>property</c></code> <t>is</t> <t>used</t> <t>as</t> <t>decorator</t>. <t>The</t> <t>object</t> <t>of</t> <t>it</t> <t>is</t> <t>the</t> <code><c>x</c></code> <t>function</t>, <t>but</t> <t>in</t> <t>the</t> <t>code</t> <t>above</t> <t>there</t> <t>is</t> <t>no</t> <t>place</t> <t>for</t> <t>an</t> <t>object</t> <t>function</t> <t>in</t> <t>the</t> <t>arguments</t>.

<code><c>class</c> <c>C(</c><c>object</c>):
    <c>def</c> <c>__init__(</c><c>self</c>):
        <c>self</c><c>.</c><c>_x</c> <c>=</c> <c>None</c>

    <c>@</c><c>property</c>
    <c>def</c> <c>x(</c><c>self</c>):
        """"""<c>I</c>'<c>m</c> <c>the</c> '<c>x</c>' <c>property</c><c>.</c>""""""
        <c>return</c> <c>self</c><c>.</c><c>_x</c>

    <c>@</c><c>x</c><c>.</c><c>setter</c>
    <c>def</c> <c>x(</c><c>self</c>, <c>value</c>):
        <c>self</c><c>.</c><c>_x</c> <c>=</c> <c>value</c>

    <c>@</c><c>x</c><c>.</c><c>deleter</c>
    <c>def</c> <c>x(</c><c>self</c>):
        <c>del</c> <c>self</c><c>.</c><c>_x</c>
</code>

<t>And</t>, <t>how</t> <t>are</t> <t>the</t> <code><c>x</c><c>.</c><c>setter</c></code> <t>and</t> <code><c>x</c><c>.</c><c>deleter</c></code> <t>decorators</t> <t>created</t>?
<t>I</t> <t>am</t> <t>confused</t>.
"
17886647|"<t>Can't</t> <t>install</t> <t>via</t> <t>pip</t> <t>because</t> <t>of</t> <t>egg_info</t> <t>error</t>"|"<t>No</t> <t>matter</t> <t>which</t> <t>package</t> <t>I'm</t> <t>trying</t> <t>to</t> <t>install</t>, <t>I</t> <t>get</t> <t>this</t> <t>error</t>: 

<code><c>error</c>: <c>invalid</c> <c>command</c> '<c>egg_info</c>'

<c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c>
<c>Cleaning</c> <c>up</c>...
<c>Command</c> <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>failed</c> <c>with</c> <c>error</c> <c>code</c> <c>1</c> <c>in</c> <c>c:\users\zorpix\appdata\local\temp\pip-build-Zorpix\virtualenv
Storing</c> <c>complete</c> <c>log</c> <c>in</c> <c>C:\Users\Zorpix\pip\pip.log
</c></code>

<t>I</t> <t>saw</t> <t>this</t> <t>question</t>, <t>but</t> <t>the</t> <t>answer</t> <t>doesn't</t> <t>work</t> <t>for</t> <t>me</t>. <t>I</t> <t>can</t> <t>install</t> <t>the</t> <t>distribute</t> <t>package</t>, <t>which</t> <t>so</t> <t>far</t> <t>is</t> <t>the</t> <t>only</t> <t>package</t> <t>I</t> <t>can</t> <t>install</t>, <t>but</t> <t>it</t> <t>doesn't</t> <t>fix</t> <t>the</t> <t>problem</t>, <t>as</t> <t>the</t> <t>egg_info</t> <t>error</t> <t>returns</t> <t>as</t> <t>soon</t> <t>as</t> <t>I</t> <t>try</t> <t>to</t> <t>install</t> <t>another</t> <t>package</t>. <t>I'm</t> <t>getting</t> <t>pretty</t> <t>frustrated</t> <t>with</t> <t>this</t>, <t>as</t> <t>I</t> <t>can't</t> <t>find</t> <t>anything</t> <t>helpful</t> <t>anywhere</t>. <t>I've</t> <t>also</t> <t>had</t> <t>django</t> <t>and</t> <t>pip</t> <t>and</t> <t>everything</t> <t>installed</t> <t>before</t>, <t>but</t> <t>I</t> <t>had</t> <t>to</t> <t>reinstall</t> <t>it</t> <t>all</t>, <t>and</t> <t>now</t> <t>it's</t> <t>not</t> <t>working...</t> <t>Any</t> <t>help</t> <t>would</t> <t>be</t> <t>appreciated</t>.

<t>Here</t> <t>is</t> <t>the</t> <t>log</t> <t>it</t> <t>says</t> <t>it</t> <t>stored</t>:

<code><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c>
<c>C:\Python27\Scripts\pip-script.py</c> <c>run</c> <c>on</c> <c>0</c><c>7</c><c>/26/13</c> <c>11</c>:<c>30</c>:<c>42</c>
<c>Downloading</c><c>/unpacking</c> <c>virtualenv</c>

  <c>Getting</c> <c>page</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/
</c>  <c>URLs</c> <c>to</c> <c>search</c> <c>for</c> <c>versions</c> <c>for</c> <c>virtualenv</c>:
  <c>*</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/
</c>  <c>Analyzing</c> <c>links</c> <c>from</c> <c>page</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/
</c>    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.3.tar.gz#md5=36b766604542f2c34d8dffdb21ba14a9</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.3</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.6.2.tar.gz#md5=e948af53ad41ca2718c4034484fcd694</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.6.2</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.7.tar.gz#md5=dcc105e5a3907a9dcaa978f813a4f526</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.7</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-1.3.2-py2.4.egg#md5=6913c03f02167fe4ac32add76c3edeb7</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.4.9.tar.gz#md5=c49067cab242b5ff8c7b681a5a99533a</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.4.9</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-0.8.tar.gz#md5=88c187a93a78c4c9bd54eef9ef0e0f03</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>0.8</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-0.9.1-py2.4.egg#md5=f595300f14597da25feabaececcf62a2</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.6.3.tar.gz#md5=73a69184e35f1e2c2f9016c889c4d26a</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.6.3</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-0.8.3.tar.gz#md5=d635fb7de359ff603a1fc395933724d1</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>0.8.3</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.8.3.tar.gz#md5=d42ab84b1b38258f2a57365841186f71</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.8.3</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.3.1.tar.gz#md5=e70ed86cc3823f0b622e80e035b59297</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.3.1</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.5.tar.gz#md5=a8c756de9661323b1f95311e79f8a5f3</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.5</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.6/v/virtualenv/virtualenv-1.3.4-py2.6.egg#md5=f5cf3d4dba3a224351fb5f90f59dae1a</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-1.3-py2.4.egg#md5=ff872f8b8dcb3dc76d9c2793afc9b1a5</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-0.8.3-py2.4.egg#md5=fbcb29d72e35ee93d80738d46e69d350</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-1.3.4-py2.5.egg#md5=2fd8f371cc83c2a49009e5fe51fcd9c9</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.0.tar.gz#md5=fb86aabdfc2033612b936cf08ad811ec</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.0</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-0.8.3-py2.5.egg#md5=7592e9dd19388a037768840caac00255</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-1.3.1-py2.5.egg#md5=f042320f7301a77311b876ed55d2a635</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.7.1.tar.gz#md5=1a07359ff6e5dbfaefa6381516293b47</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.7.1</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-1.3.3-py2.4.egg#md5=9cd8f513ba25e09be54ead5b1325ad3e</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-1.2-py2.5.egg#md5=0043570e1c16af8d3c9fa1e99bce012b</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.3.3.tar.gz#md5=28e2955aed4ffc4dc3df02dc632b5c42</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.3.3</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-0.8.1-py2.4.egg#md5=fa8831295f1073151876375c4567f5cd</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.7.1.1.tar.gz#md5=e06efff3c3dd5f88758dde29e108bfdd</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.7.1.1</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.4.tar.gz#md5=ef70dc53c648f4253335351c65b5740f</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.4</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.4rc1.tar.gz#md5=fb62a93b054e877e6a6c92f7dcd0b6ae</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.4</c><c>rc1</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-0.8.4.tar.gz#md5=30f053782cc29363927b848263ae9158</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>0.8.4</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-0.9.2-py2.4.egg#md5=319b534ed28e2d31b124b1a76f42fbc7</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-0.9.2-py2.5.egg#md5=7a4d37d0c3f83f917d7a6556f31bb31d</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-0.8.2-py2.5.egg#md5=eedbc037902cd2010b055451641addcf</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.3.2.tar.gz#md5=a013d5a7d9aeddc16bee88604d6de636</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.3.2</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-0.9.tar.gz#md5=17a52f8801cbeb6805f4a4650dc89468</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>0.9</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-1.0-py2.5.egg#md5=e6881a6353543b0af8b116ed8ed2f6f6</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-0.9.2.tar.gz#md5=78b6e73600db0d5ed8c0e507f0f7d705</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>0.9.2</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-0.8.1-py2.5.egg#md5=ad5869374196f7d533a9b649adfe9014</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.4.8.tar.gz#md5=74ded4025a56e538c1c8df6b9825a8b8</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.4.8</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-0.9.1.tar.gz#md5=d9abf1dc9dcaf603c60840c582414f66</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>0.9.1</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-1.3.4-py2.4.egg#md5=bd62418a72b7e09a637ef368b7b0101b</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.4.5.tar.gz#md5=d3c621dd9797789fef78442e336df63e</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.4.5</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.6.tar.gz#md5=b1c585e0bbe4fca56bfa0b34aff87bd9</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.6</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-0.8.2.tar.gz#md5=241f157e92dd9052b5a4b43efcef8035</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>0.8.2</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-1.3.1-py2.4.egg#md5=708cc5281dae7fdd8d996cdb55bef52d</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-0.8.2-py2.4.egg#md5=4a92b99c93026031b7298906bf126ccd</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.4.1.tar.gz#md5=6ab218532376c2a389ef4ea030ff96f2</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.4.1</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-1.3.3-py2.5.egg#md5=fae350c941cd9eadf5e9a407c37a2e03</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.8.tar.gz#md5=fdab30066a1d731ca6fe22a4c23b9e80</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.8</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.3.4.tar.gz#md5=77d675df104b90fceec749150bd5014f</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.3.4</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.4.2.tar.gz#md5=7b1a10f0e84dd945c9b006ace1e1bb16</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.4.2</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-0.8.4-py2.4.egg#md5=6d2db4c08a9b8a7b59e1ab7731791381</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-0.9-py2.4.egg#md5=12b34ae909f578910c293ecfe7c793e3</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.4.6.tar.gz#md5=f576969d591a054132fe8c9165c2b3c3</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.4.6</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-0.8.1.tar.gz#md5=5d7b4784f530bd8acf44b568776dbd3c</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>0.8.1</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.4.3.tar.gz#md5=2b639cee32d15fd049a49561957afe4b</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.4.3</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-0.8.4-py2.5.egg#md5=40300b786dad2e8380ef785c4998f421</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-1.0-py2.4.egg#md5=6199b281bf6e7370d896520eb3a968f8</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.2.tar.gz#md5=7ad454e52f025cad631d03331ade4aaf</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.2</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-1.2-py2.4.egg#md5=53ab95a286cc0382e503306bb0df9d49</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.5.2.tar.gz#md5=fbcefbd8520bb64bc24a560c6019a73c</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.5.2</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.4/v/virtualenv/virtualenv-1.1-py2.4.egg#md5=d9b0de14426957e30b2aa7015451aa43</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-1.4.7-py2.5.egg#md5=e1bb0e1cbc4e2df64dfdde6b0867ef29</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.8.2.tar.gz#md5=174ca075c6b1a42c685415692ec4ce2e</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.8.2</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.6.1.tar.gz#md5=1a475df2219457b6b4febb9fe595d915</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.6.1</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.5.1.tar.gz#md5=3daa1f449d5d2ee03099484cecb1c2b7</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.5.1</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.4.4.tar.gz#md5=94161ae1500cb3a8b003c0c394c9dbbd</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.4.4</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.4.7.tar.gz#md5=979a7adf8467df7df800a45debd2074f</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.4.7</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.7.2.tar.gz#md5=b5d63b05373a4344ae099a68875aae78</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.7.2</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.8.4.tar.gz#md5=1c7e56a7f895b2e71558f96e365ee7a7</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.8.4</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.7.1.2.tar.gz#md5=3be8a014c27340f48b56465f9109d9fa</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.7.1.2</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.9.tar.gz#md5=e03b76752b8ce7eee67c6298414cac79</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.9</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.8.1.tar.gz#md5=3aebe32859aa4512e1e679834c10f7bf</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.8.1</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-0.9.1-py2.5.egg#md5=573b8bd74a7b9b207b5eede8db386953</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.1.tar.gz#md5=8931b66dbb799120583dd107aab2fa89</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.1</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-1.3-py2.5.egg#md5=8102d251e3f1caf709722679a737f454</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-1.1-py2.5.egg#md5=1db8cdd823739c79330a138327239551</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.6.4.tar.gz#md5=1072b66d53c24e019a8f1304ac9d9fc5</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.6.4</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-1.3.2-py2.5.egg#md5=f2cd2b10b8be8b57e74cb1830fc0b504</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Skipping</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/2.5/v/virtualenv/virtualenv-0.9-py2.5.egg#md5=7c8e85680f1ede0844a496513366d7a5</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>; <c>unknown</c> <c>archive</c> <c>format</c>: <c>.</c><c>egg</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.10.tar.gz#md5=9745c28256c70c76d36adb3767a00212</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.10</c>
    <c>Found</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.9.1.tar.gz#md5=07e09df0adfca0b2d487e39a4bf2270a</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c>: <c>1.9.1</c>
  <c>Ignoring</c> <c>link</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.4rc1.tar.gz#md5=fb62a93b054e877e6a6c92f7dcd0b6ae</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)</c>, <c>version</c> <c>1.4</c><c>rc1</c> <c>is</c> <c>a</c> <c>pre-release</c> (<c>use</c> <c>-</c><c>-</c><c>pre</c> <c>to</c> <c>allow</c>)<c>.</c>
  <c>Using</c> <c>version</c> <c>1.10</c> (<c>newest</c> <c>of</c> <c>versions</c>: <c>1.10</c>, <c>1.9.1</c>, <c>1.9</c>, <c>1.8.4</c>, <c>1.8.3</c>, <c>1.8.2</c>, <c>1.8.1</c>, <c>1.8</c>, <c>1.7.2</c>, <c>1.7.1.2</c>, <c>1.7.1.1</c>, <c>1.7.1</c>, <c>1.7</c>, <c>1.6.4</c>, <c>1.6.3</c>, <c>1.6.2</c>, <c>1.6.1</c>, <c>1.6</c>, <c>1.5.2</c>, <c>1.5.1</c>, <c>1.5</c>, <c>1.4.9</c>, <c>1.4.8</c>, <c>1.4.7</c>, <c>1.4.6</c>, <c>1.4.5</c>, <c>1.4.4</c>, <c>1.4.3</c>, <c>1.4.2</c>, <c>1.4.1</c>, <c>1.4</c>, <c>1.3.4</c>, <c>1.3.3</c>, <c>1.3.2</c>, <c>1.3.1</c>, <c>1.3</c>, <c>1.2</c>, <c>1.1</c>, <c>1.0</c>, <c>0.9.2</c>, <c>0.9.1</c>, <c>0.9</c>, <c>0.8.4</c>, <c>0.8.3</c>, <c>0.8.2</c>, <c>0.8.1</c>, <c>0.8</c>)
  <c>Downloading</c> <c>from</c> <c>URL</c> <c>http</c><c>s://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.10.tar.gz#md5=9745c28256c70c76d36adb3767a00212</c> (<c>from</c> <c>http</c><c>s://pypi.python.org/simple/virtualenv/)
</c>  <c>Running</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>for</c> <c>package</c> <c>virtualenv</c>

    <c>C:\Python27\lib\distutils\dist.py:267:</c> <c>UserWarning</c>: <c>Unknown</c> <c>distribution</c> <c>option</c>: '<c>entry_points</c>'

      <c>warnings</c><c>.</c><c>warn(</c><c>msg</c>)

    <c>C:\Python27\lib\distutils\dist.py:267:</c> <c>UserWarning</c>: <c>Unknown</c> <c>distribution</c> <c>option</c>: '<c>zip_safe</c>'

      <c>warnings</c><c>.</c><c>warn(</c><c>msg</c>)

    <c>C:\Python27\lib\distutils\dist.py:267:</c> <c>UserWarning</c>: <c>Unknown</c> <c>distribution</c> <c>option</c>: '<c>test_suite</c>'

      <c>warnings</c><c>.</c><c>warn(</c><c>msg</c>)

    <c>C:\Python27\lib\distutils\dist.py:267:</c> <c>UserWarning</c>: <c>Unknown</c> <c>distribution</c> <c>option</c>: '<c>tests_require</c>'

      <c>warnings</c><c>.</c><c>warn(</c><c>msg</c>)

    <c>usage</c>: <c>-</c><c>c</c> [<c>global_opts</c>] <c>cmd1</c> [<c>cmd1_opts</c>] [<c>cmd2</c> [<c>cmd2_opts</c>] ...]

       <c>or</c>: <c>-</c><c>c</c> <c>-</c><c>-</c><c>help</c> [<c>cmd1</c> <c>cmd2</c> ...]

       <c>or</c>: <c>-</c><c>c</c> <c>-</c><c>-</c><c>help-commands</c>

       <c>or</c>: <c>-</c><c>c</c> <c>cmd</c> <c>-</c><c>-</c><c>help</c>



    <c>error</c>: <c>invalid</c> <c>command</c> '<c>egg_info</c>'

    <c>Complete</c> <c>output</c> <c>from</c> <c>command</c> <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c>:

    <c>C:\Python27\lib\distutils\dist.py:267:</c> <c>UserWarning</c>: <c>Unknown</c> <c>distribution</c> <c>option</c>: '<c>entry_points</c>'

  <c>warnings</c><c>.</c><c>warn(</c><c>msg</c>)

<c>C:\Python27\lib\distutils\dist.py:267:</c> <c>UserWarning</c>: <c>Unknown</c> <c>distribution</c> <c>option</c>: '<c>zip_safe</c>'

  <c>warnings</c><c>.</c><c>warn(</c><c>msg</c>)

<c>C:\Python27\lib\distutils\dist.py:267:</c> <c>UserWarning</c>: <c>Unknown</c> <c>distribution</c> <c>option</c>: '<c>test_suite</c>'

  <c>warnings</c><c>.</c><c>warn(</c><c>msg</c>)

<c>C:\Python27\lib\distutils\dist.py:267:</c> <c>UserWarning</c>: <c>Unknown</c> <c>distribution</c> <c>option</c>: '<c>tests_require</c>'

  <c>warnings</c><c>.</c><c>warn(</c><c>msg</c>)

<c>usage</c>: <c>-</c><c>c</c> [<c>global_opts</c>] <c>cmd1</c> [<c>cmd1_opts</c>] [<c>cmd2</c> [<c>cmd2_opts</c>] ...]

   <c>or</c>: <c>-</c><c>c</c> <c>-</c><c>-</c><c>help</c> [<c>cmd1</c> <c>cmd2</c> ...]

   <c>or</c>: <c>-</c><c>c</c> <c>-</c><c>-</c><c>help-commands</c>

   <c>or</c>: <c>-</c><c>c</c> <c>cmd</c> <c>-</c><c>-</c><c>help</c>



<c>error</c>: <c>invalid</c> <c>command</c> '<c>egg_info</c>'

<c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c>

<c>Cleaning</c> <c>up</c>...

  <c>Removing</c> <c>temporary</c> <c>dir</c> <c>c:\users\joey\appdata\local\temp\pip-build-Joey...
Command</c> <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>failed</c> <c>with</c> <c>error</c> <c>code</c> <c>1</c> <c>in</c> <c>c:\users\joey\appdata\local\temp\pip-build-Joey\virtualenv

Exception</c> <c>information</c>:
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>C:\Python27\lib\site-packages\pip\basecommand.py</c>"", <c>line</c> <c>134</c>, <c>in</c> <c>main</c>
    <c>status</c> <c>=</c> <c>self</c><c>.</c><c>run(</c><c>options</c>, <c>args</c>)
  <c>File</c> ""<c>C:\Python27\lib\site-packages\pip\commands\install.py</c>"", <c>line</c> <c>236</c>, <c>in</c> <c>run</c>
    <c>requirement_set</c><c>.</c><c>prepare_files(</c><c>finder</c>, <c>force_root_egg_info</c><c>=</c><c>self</c><c>.</c><c>bundle</c>, <c>bundle</c><c>=</c><c>self</c><c>.</c><c>bundle</c>)
  <c>File</c> ""<c>C:\Python27\lib\site-packages\pip\req.py</c>"", <c>line</c> <c>1124</c>, <c>in</c> <c>prepare_files</c>
    <c>req_to_install</c><c>.</c><c>run_egg_info(</c>)
  <c>File</c> ""<c>C:\Python27\lib\site-packages\pip\req.py</c>"", <c>line</c> <c>257</c>, <c>in</c> <c>run_egg_info</c>
    <c>command_desc</c><c>=</c>'<c>python</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c>')
  <c>File</c> ""<c>C:\Python27\lib\site-packages\pip\util.py</c>"", <c>line</c> <c>670</c>, <c>in</c> <c>call_subprocess</c>
    <c>%</c> (<c>command_desc</c>, <c>proc</c><c>.</c><c>returncode</c>, <c>cwd</c>))
<c>InstallationError</c>: <c>Command</c> <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>failed</c> <c>with</c> <c>error</c> <c>code</c> <c>1</c> <c>in</c> <c>c:\users\joey\appdata\local\temp\pip-build-Joey\virtualenv
</c></code>

<t>EDIT</t>:
<t>Not</t> <t>sure</t> <t>what</t> <t>I</t> <t>did</t>, <t>but</t> <t>now</t> <t>I'm</t> <t>getting</t> <t>this</t> <t>error</t>:

<code><c>ImportError</c>: <c>No</c> <c>module</c> <c>named</c> <c>setuptools</c><c>.</c><c>command</c>

<c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c>
<c>Cleaning</c> <c>up</c>...
<c>Command</c> <c>python</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>failed</c> <c>with</c> <c>error</c> <c>code</c> <c>1</c> <c>in</c> <c>c:\users\joey\appdata\local\temp\pip-build-Joey\Django
Storing</c> <c>complete</c> <c>log</c> <c>in</c> <c>C:\Users\Joey\pip\pip.log
</c></code>

<t>What</t> <t>is</t> <t>this</t> <t>setuptools</t> <t>that</t> <t>I'm</t> <t>missing</t>?
"
18053500|"<t>TypeError</t>: <t>not</t> <t>all</t> <t>arguments</t> <t>converted</t> <t>during</t> <t>string</t> <t>formatting</t> <t>python</t>"|"<t>The</t> <t>program</t> <t>is</t> <t>supposed</t> <t>to</t> <t>take</t> <t>in</t> <t>two</t> <t>names</t>, <t>and</t> <t>if</t> <t>they</t> <t>are</t> <t>the</t> <t>same</t> <t>length</t> <t>it</t> <t>should</t> <t>check</t> <t>if</t> <t>they</t> <t>are</t> <t>the</t> <t>same</t> <t>word</t>.  <t>If</t> <t>it's</t> <t>the</t> <t>same</t> <t>word</t> <t>it</t> <t>will</t> <t>print</t> ""<t>The</t> <t>names</t> <t>are</t> <t>the</t> <t>same</t>"". <t>If</t> <t>they</t> <t>are</t> <t>the</t> <t>same</t> <t>length</t> <t>but</t> <t>with</t> <t>different</t> <t>letters</t> <t>it</t> <t>will</t> <t>print</t> ""<t>The</t> <t>names</t> <t>are</t> <t>different</t> <t>but</t> <t>the</t> <t>same</t> <t>length</t>"". <t>The</t> <t>part</t> <t>I'm</t> <t>having</t> <t>a</t> <t>problem</t> <t>with</t> <t>is</t> <t>in</t> <t>the</t> <t>bottom</t> <t>4</t> <t>lines</t>.

<code>#<c>!</c><c>/usr/bin/env</c> <c>python</c>
# <c>Enter</c> <c>your</c> <c>code</c> <c>for</c> ""<c>What</c>'<c>s</c> <c>In</c> (<c>The</c> <c>Length</c> <c>Of</c>) <c>A</c> <c>Name</c><c>?</c>"" <c>here</c><c>.</c>
<c>name1</c> <c>=</c> <c>input(</c>""<c>Enter</c> <c>name</c> <c>1</c>: "")
<c>name2</c> <c>=</c> <c>input(</c>""<c>Enter</c> <c>name</c> <c>2</c>: "")
<c>len(</c><c>name1</c>)
<c>len(</c><c>name2</c>)
<c>if</c> <c>len(</c><c>name1</c>) <c>==</c> <c>len(</c><c>name2</c>):
    <c>if</c> <c>name1</c> <c>==</c> <c>name2</c>:
        <c>print</c> (""<c>The</c> <c>names</c> <c>are</c> <c>the</c> <c>same</c>"")
    <c>else</c>:
        <c>print</c> (""<c>The</c> <c>names</c> <c>are</c> <c>different</c>, <c>but</c> <c>are</c> <c>the</c> <c>same</c> <c>length</c>"")
    <c>if</c> <c>len(</c><c>name1</c>) <c>&gt;</c> <c>len(</c><c>name2</c>):
        <c>print</c> (""'{<c>0</c>}' <c>is</c> <c>longer</c> <c>than</c> '{<c>1</c>}'""<c>%</c> <c>name1</c>, <c>name2</c>)
    <c>elif</c> <c>len(</c><c>name1</c>) <c>&lt;</c> <c>len(</c><c>name2</c>):
        <c>print</c> (""'{<c>0</c>}'<c>is</c> <c>longer</c> <c>than</c> '{<c>1</c>}'""<c>%</c> <c>name2</c>, <c>name1</c>)
</code>

<t>When</t> <t>I</t> <t>run</t> <t>this</t> <t>code</t> <t>it</t> <t>displays</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>program</c><c>.</c><c>py</c>"", <c>line</c> <c>13</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>print</c> (""'{<c>0</c>}' <c>is</c> <c>longer</c> <c>than</c> '{<c>1</c>}'""<c>%</c> <c>name1</c>, <c>name2</c>)
<c>TypeError</c>: <c>not</c> <c>all</c> <c>arguments</c> <c>converted</c> <c>during</c> <c>string</c> <c>formatting</c>
</code>

<t>Any</t> <t>suggestions</t> <t>are</t> <t>highly</t> <t>appreciated</t>.
"
18172851|"<t>Deleting DataFrame</t> <t>row</t> <t>in</t> <t>Pandas</t> <t>based</t> <t>on</t> <t>column</t> <t>value</t>"|"<t>I</t> <t>have</t> <t>the</t> <t>following</t> <t>DataFrame</t>:

<code>             <c>daysago</c>  <c>line_race</c> <c>rating</c>        <c>rw</c>    <c>wrating</c>
 <c>line_date</c>                                                 
 <c>2007-03-31</c>       <c>62</c>         <c>11</c>     <c>56</c>  <c>1.000000</c>  <c>56.000000</c>
 <c>2007-03-10</c>       <c>83</c>         <c>11</c>     <c>67</c>  <c>1.000000</c>  <c>67.000000</c>
 <c>2007-02-10</c>      <c>111</c>          <c>9</c>     <c>66</c>  <c>1.000000</c>  <c>66.000000</c>
 <c>2007-01-13</c>      <c>139</c>         <c>10</c>     <c>83</c>  <c>0.880678</c>  <c>73.096278</c>
 <c>2006-12-23</c>      <c>160</c>         <c>10</c>     <c>88</c>  <c>0.793033</c>  <c>69.786942</c>
 <c>2006-11-09</c>      <c>204</c>          <c>9</c>     <c>52</c>  <c>0.636655</c>  <c>33.106077</c>
 <c>2006-10-22</c>      <c>222</c>          <c>8</c>     <c>66</c>  <c>0.581946</c>  <c>38.408408</c>
 <c>2006-09-29</c>      <c>245</c>          <c>9</c>     <c>70</c>  <c>0.518825</c>  <c>36.317752</c>
 <c>2006-09-16</c>      <c>258</c>         <c>11</c>     <c>68</c>  <c>0.486226</c>  <c>33.063381</c>
 <c>2006-08-30</c>      <c>275</c>          <c>8</c>     <c>72</c>  <c>0.446667</c>  <c>32.160051</c>
 <c>2006-02-11</c>      <c>475</c>          <c>5</c>     <c>65</c>  <c>0.164591</c>  <c>10.698423</c>
 <c>2006-01-13</c>      <c>504</c>          <c>0</c>     <c>70</c>  <c>0.142409</c>   <c>9.968634</c>
 <c>2006-01-02</c>      <c>515</c>          <c>0</c>     <c>64</c>  <c>0.134800</c>   <c>8.627219</c>
 <c>2005-12-06</c>      <c>542</c>          <c>0</c>     <c>70</c>  <c>0.117803</c>   <c>8.246238</c>
 <c>2005-11-29</c>      <c>549</c>          <c>0</c>     <c>70</c>  <c>0.113758</c>   <c>7.963072</c>
 <c>2005-11-22</c>      <c>556</c>          <c>0</c>     <c>-</c><c>1</c>  <c>0.109852</c>  <c>-</c><c>0.109852</c>
 <c>2005-11-01</c>      <c>577</c>          <c>0</c>     <c>-</c><c>1</c>  <c>0.098919</c>  <c>-</c><c>0.098919</c>
 <c>2005-10-20</c>      <c>589</c>          <c>0</c>     <c>-</c><c>1</c>  <c>0.093168</c>  <c>-</c><c>0.093168</c>
 <c>2005-09-27</c>      <c>612</c>          <c>0</c>     <c>-</c><c>1</c>  <c>0.083063</c>  <c>-</c><c>0.083063</c>
 <c>2005-09-07</c>      <c>632</c>          <c>0</c>     <c>-</c><c>1</c>  <c>0.075171</c>  <c>-</c><c>0.075171</c>
 <c>2005-06-12</c>      <c>719</c>          <c>0</c>     <c>69</c>  <c>0.048690</c>   <c>3.359623</c>
 <c>2005-05-29</c>      <c>733</c>          <c>0</c>     <c>-</c><c>1</c>  <c>0.045404</c>  <c>-</c><c>0.045404</c>
 <c>2005-05-02</c>      <c>760</c>          <c>0</c>     <c>-</c><c>1</c>  <c>0.039679</c>  <c>-</c><c>0.039679</c>
 <c>2005-04-02</c>      <c>790</c>          <c>0</c>     <c>-</c><c>1</c>  <c>0.034160</c>  <c>-</c><c>0.034160</c>
 <c>2005-03-13</c>      <c>810</c>          <c>0</c>     <c>-</c><c>1</c>  <c>0.030915</c>  <c>-</c><c>0.030915</c>
 <c>2004-11-09</c>      <c>934</c>          <c>0</c>     <c>-</c><c>1</c>  <c>0.016647</c>  <c>-</c><c>0.016647</c>
</code>

<t>I</t> <t>need</t> <t>to</t> <t>remove</t> <t>the</t> <t>rows</t> <t>where</t> <code><c>line_race</c></code> <t>is</t> <t>equal</t> <t>to</t> <code><c>0</c></code>. <t>What's</t> <t>the</t> <t>most</t> <t>efficient</t> <t>way</t> <t>to</t> <t>do</t> <t>this</t>?
"
18265935|"<t>Python</t> <t>-</t> <t>Create</t> <t>list</t> <t>with</t> <t>numbers</t> <t>between</t> <t>2</t> <t>values</t>?"|"<t>How</t> <t>would</t> <t>I</t> <t>create</t> <t>a</t> <t>list</t> <t>with</t> <t>values</t> <t>between</t> <t>2</t> <t>values</t> <t>I</t> <t>put</t> <t>in</t>? 
<t>For</t> <t>example</t>, <t>following</t> <t>list</t> <t>is</t> <t>generated</t> <t>for</t> <t>values</t> <t>between</t> <t>11</t> <t>and</t> <t>16</t>:

<code><c>list</c> <c>=</c> [<c>11</c>, <c>12</c>, <c>13</c>, <c>14</c>, <c>15</c>, <c>16</c>]
</code>
"
18533621|"<t>Error</t> <t>when</t> <t>creating</t> <t>a</t> <t>new</t> <t>text</t> <t>file</t> <t>with</t> <t>python</t>?"|"<t>This</t> <t>function</t> <t>doesn't</t> <t>work</t> <t>and</t> <t>raises</t> <t>an</t> <t>error</t>. <t>Do</t> <t>I</t> <t>need</t> <t>to</t> <t>change</t> <t>any</t> <t>arguments</t> <t>or</t> <t>parameters</t>?  

<code><c>import</c> <c>sys</c>

<c>def</c> <c>write(</c>):
    <c>print(</c>'<c>Creating</c> <c>new</c> <c>text</c> <c>file</c>') 

    <c>name</c> <c>=</c> <c>input(</c>'<c>Enter</c> <c>name</c> <c>of</c> <c>text</c> <c>file</c>: ')<c>+</c>'<c>.</c><c>txt</c>'  # <c>Name</c> <c>of</c> <c>text</c> <c>file</c> <c>coerced</c> <c>with</c> <c>+</c><c>.</c><c>txt</c>

    <c>try</c>:
        <c>file</c> <c>=</c> <c>open(</c><c>name</c>,'<c>r</c><c>+</c>')   # <c>Trying</c> <c>to</c> <c>create</c> <c>a</c> <c>new</c> <c>file</c> <c>or</c> <c>open</c> <c>one</c>
        <c>file</c><c>.</c><c>close(</c>)

    <c>except</c>:
        <c>print(</c>'<c>Something</c> <c>went</c> <c>wrong</c><c>!</c> <c>Can</c><c>\</c>'<c>t</c> <c>tell</c> <c>what</c><c>?</c>')
        <c>sys</c><c>.</c><c>exit(</c><c>0</c>) # <c>quit</c> <c>Python</c>

<c>write(</c>)
</code>
"
19019720|"<t>ImportError</t>: <t>DLL</t> <t>load</t> <t>failed</t>: <t>%1</t> <t>is</t> <t>not</t> <t>a</t> <t>valid</t> <t>Win32</t> <t>application</t>. <t>But</t> <t>the</t> <t>DLL's</t> <t>are</t> <t>there</t>"|"<t>I</t> <t>have</t> <t>a</t> <t>situation</t> <t>very</t> <t>much</t> <t>like</t> <t>the</t> <t>one</t> <t>at</t> <t>ImportError</t>: <t>DLL</t> <t>load</t> <t>failed</t>: <t>%1</t> <t>is</t> <t>not</t> <t>a</t> <t>valid</t> <t>Win32</t> <t>application</t>, <t>but</t> <t>the</t> <t>answer</t> <t>there</t> <t>isn't</t> <t>working</t> <t>for</t> <t>me</t>.

<t>My Python</t> <t>code</t> <t>says</t>:

<code><c>import</c> <c>cv2</c>
</code>

<t>But</t> <t>that</t> <t>line</t> <t>throws</t> <t>the</t> <t>error</t> <t>shown</t> <t>in</t> <t>the</t> <t>title</t> <t>of</t> <t>this</t> <t>question</t>.

<t>I</t> <t>have</t> <t>OpenCV</t> <t>installed</t> <t>in</t> <code><c>C:\lib\opencv</c></code> <t>on</t> <t>this</t> <t>64-bit</t> <t>machine</t>. <t>I'm</t> <t>using</t> <t>64-bit</t> <t>Python</t>.

<t>My PYTHONPATH</t> <t>variable</t>: <code><c>PYTHONPATH</c><c>=</c><c>C:\lib\opencv\build\python\2.7</c></code>. <t>This</t> <t>folder</t> <t>contains</t> <code><c>cv2</c><c>.</c><c>pyd</c></code> <t>and</t> <t>that's</t> <t>all</t>.

<t>My PATH</t> <t>variable</t>: <code><c>Path</c><c>=</c><c>%</c><c>OPENCV_DIR</c><c>%</c><c>\bin</c>;...</code> <t>This</t> <t>folder</t> <t>contains</t> <t>39</t> <t>DLL</t> <t>files</t> <t>such</t> <t>as</t> <code><c>opencv_core246d</c><c>.</c><c>dll</c></code>.

<t>OPENCV_DIR</t> <t>has</t> <t>this</t> <t>value</t>: <code><c>OPENCV_DIR</c><c>=</c><c>C:\lib\opencv\build\x64\vc11</c></code>.

<t>The</t> <t>solution</t> <t>at</t> <t>ImportError</t>: <t>DLL</t> <t>load</t> <t>failed</t>: <t>%1</t> <t>is</t> <t>not</t> <t>a</t> <t>valid</t> <t>Win32</t> <t>application</t> <t>says</t> <t>to</t> <t>add</t> ""<t>the</t> <t>new</t> <t>opencv</t> <t>binaries</t> <t>path</t> (<code><c>C:\opencv\build\bin\Release</c></code>) <t>to</t> <t>the</t> <t>Windows PATH</t> <t>environment</t> <t>variable</t>"". <t>But</t> <t>as</t> <t>shown</t> <t>above</t>, <t>I</t> <t>already</t> <t>have</t> <t>the</t> <t>OpenCV</t> <t>binaries</t> <t>folder</t> (<code><c>C:\lib\opencv\build\x64\vc11\bin</c></code>) <t>in</t> <t>my</t> <t>PATH</t>. <t>And</t> <t>my</t> <t>OpenCV</t> <t>installation</t> <t>doesn't</t> <t>have</t> <t>any</t> <t>Release</t> <t>folders</t> (<t>except</t> <t>for</t> <t>an</t> <t>empty</t> <t>one</t> <t>under</t> <t>build/java</t>).

<t>Any</t> <t>ideas</t> <t>as</t> <t>to</t> <t>what's</t> <t>going</t> <t>wrong</t>? <t>Can</t> <t>I</t> <t>tell</t> <t>Python</t> <t>to</t> <t>verbosely</t> <t>trace</t> <t>the</t> <t>loading</t> <t>process</t>? <t>Exactly</t> <t>what</t> <t>DLL's</t> <t>is</t> <t>it</t> <t>looking</t> <t>for</t>?

<t>Thanks</t>,
<t>Lars</t>

<t>EDIT</t>:

<t>I</t> <t>just</t> <t>noticed</t> <t>that</t>, <t>according</t> <t>to</t> <t>http://www.dependencywalker.com/,</t> <t>the</t> <code><c>cv2</c><c>.</c><c>pyd</c></code> <t>in</t> <code><c>C:\lib\opencv\build\python\2.7</c></code> <t>is</t> <t>32-bit</t>, <t>whereas</t> <t>the</t> <t>machine</t> <t>and</t> <t>the</t> <t>Python I'm</t> <t>running</t> <t>are</t> <t>64-bit</t>. <t>Could</t> <t>that</t> <t>be</t> <t>the</t> <t>problem</t>? <t>And</t> <t>if</t> <t>so</t>, <t>where</t> <t>can</t> <t>I</t> <t>find</t> <t>a</t> <t>64-bit</t> <t>version</t> <t>of</t> <t>cv2</t>.<t>pyd</t>?
"
19410042|"<t>How</t> <t>to</t> <t>make</t> <t>IPython</t> <t>notebook</t> <t>matplotlib</t> <t>plot</t> <t>inline</t>"|"<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>use</t> <t>IPython</t> <t>notebook</t> <t>on</t> <t>MacOS X</t> <t>with</t> <t>Python</t> <t>2.7.2</t> <t>and</t> <t>IPython</t> <t>1.1.0.</t>

<t>I</t> <t>cannot</t> <t>get</t> <t>matplotlib</t> <t>graphics</t> <t>to</t> <t>show</t> <t>up</t> <t>inline</t>.

<code><c>import</c> <c>matplotlib</c>
<c>import</c> <c>numpy</c> <c>as</c> <c>np</c>
<c>import</c> <c>matplotlib</c><c>.</c><c>pyplot</c> <c>as</c> <c>plt</c>
<c>%</c><c>matplotlib</c> <c>inline</c>  
</code>

<t>I</t> <t>have</t> <t>also</t> <t>tried</t> <code><c>%</c><c>pylab</c> <c>inline</c></code> <t>and</t> <t>the</t> <t>ipython</t> <t>command</t> <t>line</t> <t>arguments</t> <code><c>-</c><c>-</c><c>pylab</c><c>=</c><c>inline</c></code> <t>but</t> <t>this</t> <t>makes</t> <t>no</t> <t>difference</t>.

<code><c>x</c> <c>=</c> <c>np</c><c>.</c><c>linspace(</c><c>0</c>, <c>3</c><c>*</c><c>np</c><c>.</c><c>pi</c>, <c>500</c>)
<c>plt</c><c>.</c><c>plot(</c><c>x</c>, <c>np</c><c>.</c><c>sin(</c><c>x</c><c>**</c><c>2</c>))
<c>plt</c><c>.</c><c>title(</c>'<c>A</c> <c>simple</c> <c>chirp</c>')
<c>plt</c><c>.</c><c>show(</c>)
</code>

<t>Instead</t> <t>of</t> <t>inline</t> <t>graphics</t>, <t>I</t> <t>get</t> <t>this</t>:

<code><c>&lt;</c><c>matplotlib</c><c>.</c><c>figure</c><c>.</c><c>Figure</c> <c>at</c> 0x110b9c450&gt;
</code>

<t>And</t> <code><c>matplotlib</c><c>.</c><c>get_backend(</c>)</code> <t>shows</t> <t>that</t> <t>I</t> <t>have</t> <t>the</t> <code>'<c>modul</c><c>e://IPython.kernel.zmq.pylab.backend_inline</c>'</code> <t>backend</t>.
"
19482970|"<t>Get</t> <t>list</t> <t>from</t> <t>pandas</t> <t>DataFrame</t> <t>column</t> <t>headers</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>get</t> <t>a</t> <t>list</t> <t>of</t> <t>the</t> <t>column</t> <t>headers</t> <t>from</t> <t>a</t> <t>pandas</t> <t>DataFrame</t>.  <t>The DataFrame</t> <t>will</t> <t>come</t> <t>from</t> <t>user</t> <t>input</t> <t>so</t> <t>I</t> <t>won't</t> <t>know</t> <t>how</t> <t>many</t> <t>columns</t> <t>there</t> <t>will</t> <t>be</t> <t>or</t> <t>what</t> <t>they</t> <t>will</t> <t>be</t> <t>called</t>.

<t>For</t> <t>example</t>, <t>if</t> <t>I'm</t> <t>given</t> <t>a</t> <t>DataFrame</t> <t>like</t> <t>this</t>:

<code><c>&gt;&gt;&gt;</c> <c>my_dataframe</c>
    <c>y</c>  <c>gdp</c>  <c>cap</c>
<c>0</c>   <c>1</c>    <c>2</c>    <c>5</c>
<c>1</c>   <c>2</c>    <c>3</c>    <c>9</c>
<c>2</c>   <c>8</c>    <c>7</c>    <c>2</c>
<c>3</c>   <c>3</c>    <c>4</c>    <c>7</c>
<c>4</c>   <c>6</c>    <c>7</c>    <c>7</c>
<c>5</c>   <c>4</c>    <c>8</c>    <c>3</c>
<c>6</c>   <c>8</c>    <c>2</c>    <c>8</c>
<c>7</c>   <c>9</c>    <c>9</c>   <c>10</c>
<c>8</c>   <c>6</c>    <c>6</c>    <c>4</c>
<c>9</c>  <c>10</c>   <c>10</c>    <c>7</c>
</code>

<t>I</t> <t>would</t> <t>want</t> <t>to</t> <t>get</t> <t>a</t> <t>list</t> <t>like</t> <t>this</t>:

<code><c>&gt;&gt;&gt;</c> <c>header_list</c>
[<c>y</c>, <c>gdp</c>, <c>cap</c>]
</code>
"
19747371|"<t>Python</t> <t>exit</t> <t>commands</t> <t>-</t> <t>why</t> <t>so</t> <t>many</t> <t>and</t> <t>when</t> <t>should</t> <t>each</t> <t>be</t> <t>used</t>?"|"<t>It</t> <t>seems</t> <t>that</t> <t>python</t> <t>supports</t> <t>many</t> <t>different</t> <t>commands</t> <t>to</t> <t>stop</t> <t>script</t> <t>execution</t>.<t>The</t> <t>choices</t> <t>I've</t> <t>found</t> <t>are</t>:  <code><c>quit(</c>)</code>, <code><c>exit(</c>)</code>, <code><c>sys</c><c>.</c><c>exit(</c>)</code>, <code><c>os</c><c>.</c><c>_exit(</c>)</code> 

<t>Have</t> <t>I</t> <t>missed</t> <t>any</t>?
<t>What's</t> <t>the</t> <t>difference</t> <t>between</t> <t>them</t>? <t>When</t> <t>would</t> <t>you</t> <t>use</t> <t>each</t>?
"
20060096|"<t>Installing PIL</t> <t>with</t> <t>pip</t>"|"<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>install</t> <t>PIL</t> (<t>the</t> <t>Python Imaging</t> <t>Library</t>) <t>using</t> <t>the</t> <t>command</t>:

<code><c>sudo</c> <c>pip</c> <c>install</c> <c>pil</c>
</code>

<t>but</t> <t>I</t> <t>get</t> <t>the</t> <t>following</t> <t>message</t>:

<code><c>Downloading</c><c>/unpacking</c> <c>PIL</c>
  <c>You</c> <c>are</c> <c>installing</c> <c>a</c> <c>potentially</c> <c>insecure</c> <c>and</c> <c>unverifiable</c> <c>file</c><c>.</c> <c>Future</c> <c>versions</c> <c>of</c> <c>pip</c> <c>will</c> <c>default</c> <c>to</c> <c>disallowing</c> <c>insecure</c> <c>files</c><c>.</c>
  <c>Downloading</c> <c>PIL-1.1.7</c><c>.</c><c>tar</c><c>.</c><c>gz</c> (<c>506</c><c>kB</c>): <c>506</c><c>kB</c> <c>downloaded</c>
  <c>Running</c> <c>setup</c><c>.</c><c>py</c> <c>egg_info</c> <c>for</c> <c>package</c> <c>PIL</c>
    <c>WARNING</c>: '' <c>not</c> <c>a</c> <c>valid</c> <c>package</c> <c>name</c>; <c>please</c> <c>use</c> <c>only</c><c>.</c><c>-</c><c>separated</c> <c>package</c> <c>names</c> <c>in</c> <c>setup</c><c>.</c><c>py</c>

<c>Installing</c> <c>collected</c> <c>packages</c>: <c>PIL</c>
  <c>Running</c> <c>setup</c><c>.</c><c>py</c> <c>install</c> <c>for</c> <c>PIL</c>
    <c>WARNING</c>: '' <c>not</c> <c>a</c> <c>valid</c> <c>package</c> <c>name</c>; <c>please</c> <c>use</c> <c>only</c><c>.</c><c>-</c><c>separated</c> <c>package</c> <c>names</c> <c>in</c> <c>setup</c><c>.</c><c>py</c>
    <c>-</c><c>-</c><c>-</c> <c>using</c> <c>frameworks</c> <c>at</c> <c>/System/Library/Frameworks
</c>    <c>building</c> '<c>_imaging</c>' <c>extension</c>
    <c>clang</c> <c>-</c><c>fno-strict-aliasing</c> <c>-</c><c>fno-common</c> <c>-</c><c>dynamic</c> <c>-</c><c>g</c> <c>-</c><c>Os</c> <c>-</c><c>pipe</c> <c>-</c><c>fno-common</c> <c>-</c><c>fno-strict-aliasing</c> <c>-</c><c>fwrapv</c> <c>-</c><c>mno-fused-madd</c> <c>-</c><c>DENABLE_DTRACE</c> <c>-</c><c>DMACOSX</c> <c>-</c><c>DNDEBUG</c> <c>-</c><c>Wall</c> <c>-</c><c>Wstrict-prototypes</c> <c>-</c><c>Wshorten-64-to-32</c> <c>-</c><c>DNDEBUG</c> <c>-</c><c>g</c> <c>-</c><c>Os</c> <c>-</c><c>Wall</c> <c>-</c><c>Wstrict-prototypes</c> <c>-</c><c>DENABLE_DTRACE</c> <c>-</c><c>arch</c> <c>i386</c> <c>-</c><c>arch</c> <c>x86_64</c> <c>-</c><c>pipe</c> <c>-</c><c>IlibImaging</c> <c>-</c><c>I</c><c>/System/Library/Frameworks/Python.framework/Versions/2.7/include</c> <c>-</c><c>I</c><c>/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7</c> <c>-</c><c>c</c> <c>_imaging</c><c>.</c><c>c</c> <c>-</c><c>o</c> <c>build</c><c>/temp.macosx-10.8-intel-2.7/_imaging.o
</c>    <c>unable</c> <c>to</c> <c>execute</c> <c>clang</c>: <c>No</c> <c>such</c> <c>file</c> <c>or</c> <c>directory</c>
    <c>error</c>: <c>command</c> '<c>clang</c>' <c>failed</c> <c>with</c> <c>exit</c> <c>status</c> <c>1</c>
    <c>Complete</c> <c>output</c> <c>from</c> <c>command</c> <c>/usr/bin/python</c> <c>-</c><c>c</c> ""<c>import</c> <c>setuptools</c>;<c>__file__</c><c>=</c>'<c>/private/tmp/pip_build_root/PIL/setup.py</c>';<c>exec(</c><c>compile(</c><c>open(</c><c>__file__</c>)<c>.</c><c>read(</c>)<c>.</c><c>replace(</c>'<c>\r\n</c>', '<c>\n</c>'), <c>__file__</c>, '<c>exec</c>'))"" <c>install</c> <c>-</c><c>-</c><c>record</c> <c>/tmp/pip-AYrxVD-record/install-record.txt</c> <c>-</c><c>-</c><c>single-version-externally-managed</c>:
    <c>WARNING</c>: '' <c>not</c> <c>a</c> <c>valid</c> <c>package</c> <c>name</c>; <c>please</c> <c>use</c> <c>only</c><c>.</c><c>-</c><c>separated</c> <c>package</c> <c>names</c> <c>in</c> <c>setup</c><c>.</c><c>py</c>

<c>running</c> <c>install</c>

<c>running</c> <c>build</c>

<c>.</c>
<c>.</c>
<c>.</c>
<c>.</c>

<c>copying</c> <c>PIL</c><c>/XVThumbImagePlugin.py</c> <c>-</c><c>&gt;</c> <c>build</c><c>/lib.macosx-10.8-intel-2.7

running</c> <c>build_ext</c>

<c>-</c><c>-</c><c>-</c> <c>using</c> <c>frameworks</c> <c>at</c> <c>/System/Library/Frameworks

building</c> '<c>_imaging</c>' <c>extension</c>

<c>creating</c> <c>build</c><c>/temp.macosx-10.8-intel-2.7

creating</c> <c>build</c><c>/temp.macosx-10.8-intel-2.7/libImaging

clang</c> <c>-</c><c>fno-strict-aliasing</c> <c>-</c><c>fno-common</c> <c>-</c><c>dynamic</c> <c>-</c><c>g</c> <c>-</c><c>Os</c> <c>-</c><c>pipe</c> <c>-</c><c>fno-common</c> <c>-</c><c>fno-strict-aliasing</c> <c>-</c><c>fwrapv</c> <c>-</c><c>mno-fused-madd</c> <c>-</c><c>DENABLE_DTRACE</c> <c>-</c><c>DMACOSX</c> <c>-</c><c>DNDEBUG</c> <c>-</c><c>Wall</c> <c>-</c><c>Wstrict-prototypes</c> <c>-</c><c>Wshorten-64-to-32</c> <c>-</c><c>DNDEBUG</c> <c>-</c><c>g</c> <c>-</c><c>Os</c> <c>-</c><c>Wall</c> <c>-</c><c>Wstrict-prototypes</c> <c>-</c><c>DENABLE_DTRACE</c> <c>-</c><c>arch</c> <c>i386</c> <c>-</c><c>arch</c> <c>x86_64</c> <c>-</c><c>pipe</c> <c>-</c><c>IlibImaging</c> <c>-</c><c>I</c><c>/System/Library/Frameworks/Python.framework/Versions/2.7/include</c> <c>-</c><c>I</c><c>/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7</c> <c>-</c><c>c</c> <c>_imaging</c><c>.</c><c>c</c> <c>-</c><c>o</c> <c>build</c><c>/temp.macosx-10.8-intel-2.7/_imaging.o

unable</c> <c>to</c> <c>execute</c> <c>clang</c>: <c>No</c> <c>such</c> <c>file</c> <c>or</c> <c>directory</c>

<c>error</c>: <c>command</c> '<c>clang</c>' <c>failed</c> <c>with</c> <c>exit</c> <c>status</c> <c>1</c>

<c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c><c>-</c>
<c>Cleaning</c> <c>up</c><c>…</c>
</code>

<t>Could</t> <t>you</t> <t>please</t> <t>help</t> <t>me</t> <t>to</t> <t>install</t> <t>PIL</t>??
"
20180543|"<t>How</t> <t>to</t> <t>check</t> <t>version</t> <t>of</t> <t>python</t> <t>modules</t>?"|"<t>I</t> <t>just</t> <t>installed</t> <t>the</t> <t>python</t> <t>modules</t>: <code><c>construct</c></code> <t>and</t> <code><c>statlib</c></code> <t>with</t> <code><c>setuptools</c></code> <t>like</t> <t>this</t>:

<code># <c>Install</c> <c>setuptools</c> <c>to</c> <c>be</c> <c>able</c> <c>to</c> <c>download</c> <c>the</c> <c>following</c>
<c>sudo</c> <c>apt-get</c> <c>install</c> <c>python-setuptools</c>

# <c>Install</c> <c>statlib</c> <c>for</c> <c>lightweight</c> <c>statistical</c> <c>tools</c>
<c>sudo</c> <c>easy_install</c> <c>statlib</c>

# <c>Install</c> <c>construct</c> <c>for</c> <c>packing</c><c>/unpacking</c> <c>binary</c> <c>data</c>
<c>sudo</c> <c>easy_install</c> <c>construct</c>
</code>

<t>I</t> <t>want</t> <t>to</t> <t>be</t> <t>able</t> <t>to</t> (<t>programmatically</t>) <t>check</t> <t>their</t> <t>versions</t>.  <t>Is</t> <t>there</t> <t>an</t> <t>equivalent</t> <t>to</t> <code><c>python</c> <c>-</c><c>-</c><c>version</c></code> <t>I</t> <t>can</t> <t>run</t> <t>from</t> <t>the</t> <t>command</t> <t>line</t>?

<t>My</t> <t>python</t> <t>version</t> <t>is</t> <code><c>2.7.3</c></code>.
"
20199126|"<t>Reading JSON</t> <t>from</t> <t>a</t> <t>file</t>?"|"<t>I</t> <t>am</t> <t>getting</t> <t>a</t> <t>bit</t> <t>of</t> <t>headache</t> <t>just</t> <t>because</t> <t>a</t> <t>simple</t> <t>looking</t>, <t>easy</t> <t>statement</t> <t>is</t> <t>throwing</t> <t>some</t> <t>errors</t> <t>in</t> <t>my</t> <t>face</t>.

<t>I</t> <t>have</t> <t>a</t> <t>json</t> <t>file</t> <t>called</t> <t>strings</t>.<t>json</t> <t>like</t> <t>this</t>:

<code>""<c>strings</c>"": [{""<c>-</c><c>name</c>"": ""<c>city</c>"", ""#<c>text</c>"": ""<c>City</c>""}, {""<c>-</c><c>name</c>"": ""<c>phone</c>"", ""#<c>text</c>"": ""<c>Phone</c>""}, ...,
            {""<c>-</c><c>name</c>"": ""<c>address</c>"", ""#<c>text</c>"": ""<c>Address</c>""}]
</code>

<t>I</t> <t>want</t> <t>to</t> <t>read</t> <t>the</t> <t>json</t> <t>file</t>, <t>just</t> <t>that</t> <t>for</t> <t>now</t>. <t>I</t> <t>have</t> <t>these</t> <t>statements</t> <t>which</t> <t>I</t> <t>found</t> <t>out</t>, <t>but</t> <t>it's</t> <t>not</t> <t>working</t>:

<code><c>import</c> <c>json</c>
<c>from</c> <c>pprint</c> <c>import</c> <c>pprint</c>

<c>with</c> <c>open(</c>'<c>strings</c><c>.</c><c>json</c>') <c>as</c> <c>json_data</c>:
    <c>d</c> <c>=</c> <c>json</c><c>.</c><c>loads(</c><c>json_data</c>)
    <c>json_data</c><c>.</c><c>close(</c>)
    <c>pprint(</c><c>d</c>)
</code>

<t>The</t> <t>error</t> <t>displayed</t> <t>on</t> <t>the</t> <t>console</t> <t>was</t> <t>this</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
<c>File</c> ""<c>/home/.../android/values/manipulate_json.py</c>"", <c>line</c> <c>5</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
<c>d</c> <c>=</c> <c>json</c><c>.</c><c>loads(</c><c>json_data</c>)
<c>File</c> ""<c>/usr/lib/python2.7/json/__init__.py</c>"", <c>line</c> <c>326</c>, <c>in</c> <c>loads</c>
<c>return</c> <c>_default_decoder</c><c>.</c><c>decode(</c><c>s</c>)
<c>File</c> ""<c>/usr/lib/python2.7/json/decoder.py</c>"", <c>line</c> <c>366</c>, <c>in</c> <c>decode</c>
<c>obj</c>, <c>end</c> <c>=</c> <c>self</c><c>.</c><c>raw_decode(</c><c>s</c>, <c>idx</c><c>=</c><c>_w(</c><c>s</c>, <c>0</c>)<c>.</c><c>end(</c>))
<c>TypeError</c>: <c>expected</c> <c>string</c> <c>or</c> <c>buffer</c>
[<c>Finished</c> <c>in</c> <c>0.1</c><c>s</c> <c>with</c> <c>exit</c> <c>code</c> <c>1</c>]
</code>

<t>Edited</t>

<t>Changed</t> <t>from</t> <code><c>json</c><c>.</c><c>loads</c></code> <t>to</t> <code><c>json</c><c>.</c><c>load</c></code>

<t>and</t> <t>got</t> <t>this</t>:

<code><c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
<c>File</c> ""<c>/home/.../android/values/manipulate_json.py</c>"", <c>line</c> <c>5</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
<c>d</c> <c>=</c> <c>json</c><c>.</c><c>load(</c><c>json_data</c>)
<c>File</c> ""<c>/usr/lib/python2.7/json/__init__.py</c>"", <c>line</c> <c>278</c>, <c>in</c> <c>load</c>
<c>**</c><c>kw</c>)
<c>File</c> ""<c>/usr/lib/python2.7/json/__init__.py</c>"", <c>line</c> <c>326</c>, <c>in</c> <c>loads</c>
<c>return</c> <c>_default_decoder</c><c>.</c><c>decode(</c><c>s</c>)
<c>File</c> ""<c>/usr/lib/python2.7/json/decoder.py</c>"", <c>line</c> <c>369</c>, <c>in</c> <c>decode</c>
<c>raise</c> <c>ValueError(</c><c>errmsg(</c>""<c>Extra</c> <c>data</c>"", <c>s</c>, <c>end</c>, <c>len(</c><c>s</c>)))
<c>ValueError</c>: <c>Extra</c> <c>data</c>: <c>line</c> <c>829</c> <c>column</c> <c>1</c> <c>-</c> <c>line</c> <c>829</c> <c>column</c> <c>2</c> (<c>char</c> <c>18476</c> <c>-</c> <c>18477</c>)
[<c>Finished</c> <c>in</c> <c>0.1</c><c>s</c> <c>with</c> <c>exit</c> <c>code</c> <c>1</c>]
</code>
"
20309456|"<t>How</t> <t>to</t> <t>call</t> <t>a</t> <t>function</t> <t>from</t> <t>another</t> <t>file</t> <t>in</t> <t>Python</t>?"|"<t>I've</t> <t>seen</t> <t>this</t> <t>topic</t> <t>here</t> <t>covered</t> <t>numerous</t> <t>times</t>, <t>but</t> <t>none</t> <t>of</t> <t>the</t> <t>answers</t> <t>I've</t> <t>seen</t> <t>seem</t> <t>to</t> <t>work</t> <t>for</t> <t>me</t>, <t>so</t> <t>I'll</t> <t>try</t> <t>to</t> <t>be</t> <t>as</t> <t>specific</t> <t>to</t> <t>my</t> <t>problem</t> <t>as</t> <t>possible</t>.

<t>Set_up</t>: <t>I</t> <t>have</t> <t>a</t> .<t>py</t> <t>file</t> <t>for</t> <t>each</t> <t>function</t> <t>I</t> <t>need</t> <t>to</t> <t>use</t> <t>in</t> <t>a</t> <t>program</t>. 

<t>In</t> <t>this</t> <t>program</t>, <t>I</t> <t>need</t> <t>to</t> <t>call</t> <t>the</t> <t>function</t> <t>from</t> <t>the</t> <t>external</t> <t>files</t>.  

<t>I've</t> <t>tried</t>:

<code><c>from</c> <c>file</c><c>.</c><c>py</c> <c>import</c> <c>function(</c><c>a</c>,<c>b</c>)
</code>

<t>but</t> <t>I</t> <t>get</t> <t>the</t> <t>error</t>: 

<code><c>ImportError</c>: <c>No</c> <c>module</c> <c>named</c> '<c>file</c><c>.</c><c>py</c>'; <c>file</c> <c>is</c> <c>not</c> <c>a</c> <c>package</c>
</code>
"
20449427|"<t>How</t> <t>can</t> <t>I</t> <t>read</t> <t>inputs</t> <t>as</t> <t>integers</t>?"|"<t>Why</t> <t>does</t> <t>this</t> <t>code</t> <t>not</t> <t>input</t> <t>integers</t>?  <t>Everything</t> <t>on</t> <t>the</t> <t>web</t> <t>says</t> <t>to</t> <t>use</t> <code><c>raw_input(</c>)</code>, <t>but</t> <t>I</t> <t>read</t> <t>on</t> <t>Stack Overflow</t> (<t>on</t> <t>a</t> <t>thread</t> <t>that</t> <t>did</t> <t>not</t> <t>deal</t> <t>with</t> <t>integer</t> <t>input</t>) <t>that</t> <code><c>raw_input(</c>)</code> <t>was</t> <t>renamed</t> <t>to</t> <code><c>input(</c>)</code> <t>in</t> <t>Python</t> <t>3.x.</t>

<code><c>play</c> <c>=</c> <c>True</c>

<c>while</c> <c>play</c>:

    <c>x</c> <c>=</c> <c>input(</c>""<c>Enter</c> <c>a</c> <c>number</c>: "")
    <c>y</c> <c>=</c> <c>input(</c>""<c>Enter</c> <c>a</c> <c>number</c>: "")

    <c>print(</c><c>x</c> <c>+</c> <c>y</c>)
    <c>print(</c><c>x</c> <c>-</c> <c>y</c>)
    <c>print(</c><c>x</c> <c>*</c> <c>y</c>)
    <c>print(</c><c>x</c> <c>/</c> <c>y</c>)
    <c>print(</c><c>x</c> <c>%</c> <c>y</c>)

    <c>if</c> <c>input(</c>""<c>Play</c> <c>again</c><c>?</c> "") <c>==</c> ""<c>no</c>"":
        <c>play</c> <c>=</c> <c>False</c>
</code>
"
20646822|"<t>How</t> <t>to</t> <t>serve</t> <t>static</t> <t>files</t> <t>in</t> <t>Flask</t>"|"<t>So</t> <t>this</t> <t>is</t> <t>embarrassing</t>. <t>I've</t> <t>got</t> <t>an</t> <t>application</t> <t>that</t> <t>I</t> <t>threw</t> <t>together</t> <t>in</t> <code><c>Flask</c></code> <t>and</t> <t>for</t> <t>now</t> <t>it</t> <t>is</t> <t>just</t> <t>serving</t> <t>up</t> <t>a</t> <t>single</t> <t>static</t> <t>HTML</t> <t>page</t> <t>with</t> <t>some</t> <t>links</t> <t>to</t> <t>CSS</t> <t>and</t> <t>JS</t>. <t>And</t> <t>I</t> <t>can't</t> <t>find</t> <t>where</t> <t>in</t> <t>the</t> <t>documentation</t> <code><c>Flask</c></code> <t>describes</t> <t>returning</t> <t>static</t> <t>files</t>. <t>Yes</t>, <t>I</t> <t>could</t> <t>use</t> <code><c>render_template</c></code> <t>but</t> <t>I</t> <t>know</t> <t>the</t> <t>data</t> <t>is</t> <t>not</t> <t>templatized</t>. <t>I'd</t> <t>have</t> <t>thought</t> <code><c>send_file</c></code> <t>or</t> <code><c>url_for</c></code> <t>was</t> <t>the</t> <t>right</t> <t>thing</t>, <t>but</t> <t>I</t> <t>could</t> <t>not</t> <t>get</t> <t>those</t> <t>to</t> <t>work</t>. <t>In</t> <t>the</t> <t>meantime</t>, <t>I</t> <t>am</t> <t>opening</t> <t>the</t> <t>files</t>, <t>reading</t> <t>content</t>, <t>and</t> <t>rigging</t> <t>up</t> <t>a</t> <code><c>Response</c></code> <t>with</t> <t>appropriate</t> <t>mimetype</t>:

<code><c>import</c> <c>os</c><c>.</c><c>path</c>

<c>from</c> <c>flask</c> <c>import</c> <c>Flask</c>, <c>Response</c>


<c>app</c> <c>=</c> <c>Flask(</c><c>__name__</c>)
<c>app</c><c>.</c><c>config</c><c>.</c><c>from_object(</c><c>__name__</c>)


<c>def</c> <c>root_dir(</c>):  # <c>pragma</c>: <c>no</c> <c>cover</c>
    <c>return</c> <c>os</c><c>.</c><c>path</c><c>.</c><c>abspath(</c><c>os</c><c>.</c><c>path</c><c>.</c><c>dirname(</c><c>__file__</c>))


<c>def</c> <c>get_file(</c><c>filename</c>):  # <c>pragma</c>: <c>no</c> <c>cover</c>
    <c>try</c>:
        <c>src</c> <c>=</c> <c>os</c><c>.</c><c>path</c><c>.</c><c>join(</c><c>root_dir(</c>), <c>filename</c>)
        # <c>Figure</c> <c>out</c> <c>how</c> <c>flask</c> <c>returns</c> <c>static</c> <c>files</c>
        # <c>Tried</c>:
        # <c>-</c> <c>render_template</c>
        # <c>-</c> <c>send_file</c>
        # <c>This</c> <c>should</c> <c>not</c> <c>be</c> <c>so</c> <c>non-obvious</c>
        <c>return</c> <c>open(</c><c>src</c>)<c>.</c><c>read(</c>)
    <c>except</c> <c>IOError</c> <c>as</c> <c>exc</c>:
        <c>return</c> <c>str(</c><c>exc</c>)


<c>@</c><c>app</c><c>.</c><c>route(</c>'<c>/</c>', <c>methods</c><c>=</c>['<c>GET</c>'])
<c>def</c> <c>metrics(</c>):  # <c>pragma</c>: <c>no</c> <c>cover</c>
    <c>content</c> <c>=</c> <c>get_file(</c>'<c>jenkins_analytics</c><c>.</c><c>html</c>')
    <c>return</c> <c>Response(</c><c>content</c>, <c>mimetype</c><c>=</c>""<c>text</c><c>/html</c>"")


<c>@</c><c>app</c><c>.</c><c>route(</c>'<c>/</c>', <c>defaults</c><c>=</c>{'<c>path</c>': ''})
<c>@</c><c>app</c><c>.</c><c>route(</c>'<c>/&lt;</c><c>path</c>:<c>path</c><c>&gt;</c>')
<c>def</c> <c>get_resource(</c><c>path</c>):  # <c>pragma</c>: <c>no</c> <c>cover</c>
    <c>mimetypes</c> <c>=</c> {
        ""<c>.</c><c>css</c>"": ""<c>text</c><c>/css</c>"",
        ""<c>.</c><c>html</c>"": ""<c>text</c><c>/html</c>"",
        ""<c>.</c><c>js</c>"": ""<c>application</c><c>/javascript</c>"",
    }
    <c>complete_path</c> <c>=</c> <c>os</c><c>.</c><c>path</c><c>.</c><c>join(</c><c>root_dir(</c>), <c>path</c>)
    <c>ext</c> <c>=</c> <c>os</c><c>.</c><c>path</c><c>.</c><c>splitext(</c><c>path</c>)[<c>1</c>]
    <c>mimetype</c> <c>=</c> <c>mimetypes</c><c>.</c><c>get(</c><c>ext</c>, ""<c>text</c><c>/html</c>"")
    <c>content</c> <c>=</c> <c>get_file(</c><c>complete_path</c>)
    <c>return</c> <c>Response(</c><c>content</c>, <c>mimetype</c><c>=</c><c>mimetype</c>)


<c>if</c> <c>__name__</c> <c>==</c> '<c>__main__</c>':  # <c>pragma</c>: <c>no</c> <c>cover</c>
    <c>app</c><c>.</c><c>run(</c><c>port</c><c>=</c><c>80</c>)
</code>

<t>Someone</t> <t>want</t> <t>to</t> <t>give</t> <t>a</t> <t>code</t> <t>sample</t> <t>or</t> <t>url</t> <t>for</t> <t>this</t>? <t>I</t> <t>know</t> <t>this</t> <t>is</t> <t>going</t> <t>to</t> <t>be</t> <t>dead</t> <t>simple</t>.
"
21122540|"<t>input</t>() <t>error</t> <t>-</t> <t>NameError</t>: <t>name</t> '<t>...</t>' <t>is</t> <t>not</t> <t>defined</t>"|"<t>I</t> <t>am</t> <t>getting</t> <t>an</t> <t>error</t> <t>when</t> <t>I</t> <t>try</t> <t>to</t> <t>run</t> <t>this</t> <t>simple</t> <t>python</t> <t>script</t>:

<code><c>input_variable</c> <c>=</c> <c>input</c> (""<c>Enter</c> <c>your</c> <c>name</c>: "")
<c>print</c> (""<c>your</c> <c>name</c> <c>is</c>"" <c>+</c> <c>input_variable</c>)
</code>

<t>Lets</t> <t>say</t> <t>I</t> <t>type</t> <t>in</t> ""<t>dude</t>"", <t>the</t> <t>error</t> <t>I</t> <t>am</t> <t>getting</t> <t>is</t>:

<code><c>line</c> <c>1</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
<c>input_variable</c> <c>=</c> <c>input</c> (""<c>Enter</c> <c>your</c> <c>name</c>: "")
<c>File</c> ""<c>&lt;</c><c>string</c><c>&gt;</c>"", <c>line</c> <c>1</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
<c>NameError</c>: <c>name</c> '<c>dude</c>' <c>is</c> <c>not</c> <c>defined</c>
</code>

<t>I</t> <t>am</t> running <t>Mac OS X</t> <t>10.9.1</t> <t>and</t> <t>I</t> <t>am</t> <t>using</t> <t>the</t> <t>Python Launcher</t> <t>app</t> <t>that</t> <t>came</t> <t>with</t> <t>the</t> <t>install</t> <t>of</t> <t>python</t> <t>3.3</t> <t>to</t> <t>run</t> <t>the</t> <t>script</t>.

<t>Edit</t>: <t>I</t> <t>realized</t> <t>I</t> <t>am</t> <t>somehow</t> <t>running</t> <t>these</t> <t>scripts</t> <t>with</t> <t>2.7.</t> <t>I</t> <t>guess</t> <t>the</t> <t>real</t> <t>question</t> <t>is</t> <t>how</t> <t>do</t> <t>I</t> <t>run</t> <t>my</t> <t>scripts</t> <t>with</t> <t>version</t> <t>3.3</t>? <t>I</t> <t>thought</t> <t>if</t> <t>I</t> <t>dragged</t> <t>and</t> <t>dropped</t> <t>my</t> <t>scripts</t> <t>on</t> <t>top</t> <t>of</t> <t>the</t> <t>Python Launcher</t> <t>app</t> <t>that</t> <t>is</t> <t>inside</t> <t>the</t> <t>Python</t> <t>3.3</t> <t>folder</t> <t>in</t> <t>my</t> <t>applications</t> <t>folder</t> <t>that</t> <t>it</t> <t>would</t> <t>launch</t> <t>my</t> <t>scripts</t> <t>using</t> <t>3.3.</t> <t>I</t> <t>guess</t> <t>this</t> <t>method</t> <t>still</t> <t>launches</t> <t>scripts</t> <t>with</t> <t>2.7.</t> <t>So How</t> <t>do</t> <t>I</t> <t>use</t> <t>3.3</t>?
"
21129020|"<t>How</t> <t>to</t> <t>fix</t>: ""<t>UnicodeDecodeError</t>: '<t>ascii</t>' <t>codec</t> <t>can't</t> <t>decode</t> <t>byte</t>"""|"<code><c>as3</c>:<c>~</c><c>/ngokevin-site#</c> <c>nano</c> <c>content</c><c>/blog/20140114_test-chinese.mkd
as3:~/ngokevin-site#</c> <c>wok</c>
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
<c>File</c> ""<c>/usr/local/bin/wok</c>"", <c>line</c> <c>4</c>, <c>in</c>
<c>Engine(</c>)
<c>File</c> ""<c>/usr/local/lib/python2.7/site-packages/wok/engine.py</c>"", <c>line</c> <c>104</c>, <c>in</c> <c>init</c>
<c>self</c><c>.</c><c>load_pages(</c>)
<c>File</c> ""<c>/usr/local/lib/python2.7/site-packages/wok/engine.py</c>"", <c>line</c> <c>238</c>, <c>in</c> <c>load_pages</c>
<c>p</c> <c>=</c> <c>Page</c><c>.</c><c>from_file(</c><c>os</c><c>.</c><c>path</c><c>.</c><c>join(</c><c>root</c>, <c>f</c>), <c>self</c><c>.</c><c>options</c>, <c>self</c>, <c>renderer</c>)
<c>File</c> ""<c>/usr/local/lib/python2.7/site-packages/wok/page.py</c>"", <c>line</c> <c>111</c>, <c>in</c> <c>from_file</c>
<c>page</c><c>.</c><c>meta</c>['<c>content</c>'] <c>=</c> <c>page</c><c>.</c><c>renderer</c><c>.</c><c>render(</c><c>page</c><c>.</c><c>original</c>)
<c>File</c> ""<c>/usr/local/lib/python2.7/site-packages/wok/renderers.py</c>"", <c>line</c> <c>46</c>, <c>in</c> <c>render</c>
<c>return</c> <c>markdown(</c><c>plain</c>, <c>Markdown</c><c>.</c><c>plugins</c>)
<c>File</c> ""<c>/usr/local/lib/python2.7/site-packages/markdown/init.py</c>"", <c>line</c> <c>419</c>, <c>in</c> <c>markdown</c>
<c>return</c> <c>md</c><c>.</c><c>convert(</c><c>text</c>)
<c>File</c> ""<c>/usr/local/lib/python2.7/site-packages/markdown/init.py</c>"", <c>line</c> <c>281</c>, <c>in</c> <c>convert</c>
<c>source</c> <c>=</c> <c>unicode(</c><c>source</c>)
<c>UnicodeDecodeError</c>: '<c>ascii</c>' <c>codec</c> <c>can</c>'<c>t</c> <c>decode</c> <c>byte</c> 0xe8 in position 1: ordinal not in range(128). -- Note: Markdown only accepts unicode input!
</code>

<t>How</t> <t>to</t> <t>fix</t> <t>it</t>?

<t>In</t> <t>some</t> <t>other</t> <t>python-based</t> <t>static</t> <t>blog</t> <t>apps</t>, <t>Chinese</t> <t>post</t> <t>can</t> <t>be</t> <t>published</t> <t>successfully</t>.
<t>Such</t> <t>as</t> <t>this</t> <t>app</t>: <t>http://github.com/vrypan/bucket3.</t> <t>In</t> <t>my</t> <t>site</t> <t>http://bc3.brite.biz/,</t> <t>Chinese</t> <t>post</t> <t>can</t> <t>be</t> <t>published</t> <t>successfully</t>.
"
21492214|"<t>How</t> <t>to</t> <t>run</t> <t>Python</t> <t>script</t> <t>on</t> <t>terminal</t>"|"<t>I</t> <t>want</t> <t>to</t> <t>run</t> <t>a</t> <t>Python</t> <t>script</t> <t>in</t> <t>terminal</t> <t>but</t> <t>I</t> <t>don't</t> <t>know</t> <t>how</t>? <t>I</t> <t>already</t> <t>have</t> <t>saved</t> <t>a</t> <t>file</t> <t>called</t> <t>gameover</t>.<t>py</t>   <t>in</t> <t>/User/luca/Documents/python</t>.
"
21530577|"<t>fatal</t> <t>error</t>: <t>Python</t>.<t>h</t>: <t>No</t> <t>such</t> <t>file</t> <t>or</t> <t>directory</t>"|"<t>I</t> <t>am</t> <t>trying</t> <t>to</t> <t>build</t> <t>a</t> <t>shared</t> <t>library</t> <t>using</t> <t>a</t> <t>C</t> <t>extension</t> <t>file</t> <t>but</t> <t>first</t> <t>I</t> <t>have</t> <t>to</t> <t>generate</t> <t>the</t> <t>output</t> <t>file</t> <t>using</t> <t>the</t> <t>command</t> <t>below</t>:

<code><c>gcc</c> <c>-</c><c>Wall</c> <c>utilsmodule</c><c>.</c><c>c</c> <c>-</c><c>o</c> <c>Utilc</c>
</code>

<t>After</t> <t>executing</t> <t>the</t> <t>command</t>, <t>I</t> <t>get</t> <t>this</t> <t>error</t> <t>message</t>:


  <t>utilsmodule</t>.<t>c</t>:<t>1</t>:<t>20</t>: <t>fatal</t> <t>error</t>: <t>Python</t>.<t>h</t>: <t>No</t> <t>such</t> <t>file</t> <t>or</t> <t>directory</t>
  <t>compilation</t> <t>terminated</t>.


<t>in</t> <t>fact</t> <t>I</t> <t>have</t> <t>tried</t> <t>all</t> <t>the</t> <t>suggested</t> <t>solutions</t> <t>over</t> <t>the</t> <t>internet</t> <t>but</t> <t>the</t> <t>problem</t> <t>still</t> <t>exists</t> <t>...</t> <t>also</t> <t>I</t> <t>have</t> <t>no</t> <t>problem</t> <t>with</t> <code><c>Python</c><c>.</c><c>h</c></code>. <t>I</t> <t>managed</t> <t>to</t> <t>locate</t> <t>the</t> <t>file</t> <t>on</t> <t>my</t> <t>machine</t> <t>...</t> <t>anybody</t> <t>has</t> <t>faced</t> <t>the</t> <t>same</t> <t>problem</t> <t>before</t>??
"
21903842|"<t>How</t> <t>do</t> <t>I</t> <t>compare</t> <t>two</t> <t>strings</t> <t>in</t> <t>python</t>?"|"<t>I</t> <t>have</t> <t>two</t> <t>strings</t> <t>like</t>

<code><c>string1</c><c>=</c>""<c>abc</c> <c>def</c> <c>ghi</c>""
</code>

<t>and</t>

<code><c>string2</c><c>=</c>""<c>def</c> <c>ghi</c> <c>abc</c>""
</code>

<t>How</t> <t>to</t> <t>get</t> <t>that</t> <t>this</t> <t>two</t> <t>string</t> <t>are</t> <t>same</t> <t>without</t> <t>breaking</t> <t>the</t> <t>words</t>?
"
23708898|"'<t>pip</t>' <t>is</t> <t>not</t> <t>recognized</t> <t>as</t> <t>an</t> <t>internal</t> <t>or</t> <t>external</t> <t>command</t>"|"<t>I'm</t> <t>running</t> <t>into</t> <t>a</t> <t>weird</t> <t>error</t> <t>trying</t> <t>to</t> <t>install</t> <t>Django</t> <t>on</t> <t>my</t> <t>computer</t>.

<t>This</t> <t>is</t> <t>the</t> <t>sequence</t> <t>that</t> <t>I've</t> <t>typed</t> <t>into</t> <t>my</t> <t>command</t> <t>line</t>:

<code><c>C:\Python34&gt;</c><c>python</c> <c>get-pip</c><c>.</c><c>py</c>
<c>Requirement</c> <c>already</c> <c>up-to-date</c>: <c>pip</c> <c>in</c> <c>c:\python34\lib\site-packages
Cleaning</c> <c>up</c>...

<c>C:\Python34&gt;</c><c>pip</c> <c>install</c> <c>Django</c>
'<c>pip</c>' <c>is</c> <c>not</c> <c>recognized</c> <c>as</c> <c>an</c> <c>internal</c> <c>or</c> <c>external</c> <c>command</c>,
<c>operable</c> <c>program</c> <c>or</c> <c>batch</c> <c>file</c><c>.</c>

<c>C:\Python34&gt;</c><c>lib</c><c>\site-packages\pip</c> <c>install</c> <c>Django</c>
'<c>lib</c><c>\site-packages\pip</c>' <c>is</c> <c>not</c> <c>recognized</c> <c>as</c> <c>an</c> <c>internal</c> <c>or</c> <c>external</c> <c>command</c>,
<c>operable</c> <c>program</c> <c>or</c> <c>batch</c> <c>file</c><c>.</c> 
</code>

<t>What</t> <t>could</t> <t>be</t> <t>causing</t> <t>this</t>?

<t>EDIT</t> <t>___________________</t>

<t>As</t> <t>requested</t> <t>this</t> <t>is</t> <t>what</t> <t>I</t> <t>get</t> <t>when</t> <t>I</t> <t>type</t> <t>in</t> <t>echo</t> <t>%PATH%</t>

<code><c>C:\Python34&gt;</c><c>echo</c> <c>%</c><c>PATH</c><c>%</c>
<c>C:\Program</c> <c>Files</c><c>\ImageMagick-6.8.8-Q16</c>;<c>C:\Program</c> <c>Files</c> (<c>x86</c>)<c>\Intel\iCLS</c> <c>Client</c><c>\
</c>;<c>C:\Program</c> <c>Files</c><c>\Intel\iCLS</c> <c>Client</c><c>\</c>;<c>C:\Windows\system32</c>;<c>C:\Windows</c>;<c>C:\Windows\S
ystem32\Wbem</c>;<c>C:\Windows\System32\WindowsPowerShell\v1.0\</c>;<c>C:\Program</c> <c>Files</c> (<c>x86</c>)<c>\
Windows</c> <c>Live</c><c>\Shared</c>;<c>C:\Program</c> <c>Files</c> (<c>x86</c>)<c>\Intel\OpenCL</c> <c>SDK</c><c>\2.0\bin\x86</c>;<c>C:\Progr
am</c> <c>Files</c> (<c>x86</c>)<c>\Intel\OpenCL</c> <c>SDK</c><c>\2.0\bin\x64</c>;<c>C:\Program</c> <c>Files</c><c>\Intel\Intel(R)</c> <c>Mana</c>
<c>gement</c> <c>Engine</c> <c>Components</c><c>\DAL</c>;<c>C:\Program</c> <c>Files</c><c>\Intel\Intel(R)</c> <c>Management</c> <c>Engine</c> <c>C</c>
<c>omponents</c><c>\IPT</c>;<c>C:\Program</c> <c>Files</c> (<c>x86</c>)<c>\Intel\Intel(R)</c> <c>Management</c> <c>Engine</c> <c>Components</c>
<c>\DAL</c>;<c>C:\Program</c> <c>Files</c> (<c>x86</c>)<c>\Intel\Intel(R)</c> <c>Management</c> <c>Engine</c> <c>Components</c><c>\IPT</c>;<c>C:\P
rogram</c> <c>Files</c> (<c>x86</c>)<c>\nodejs\</c>;<c>C:\Program</c> <c>Files</c> (<c>x86</c>)<c>\Heroku\bin</c>;<c>C:\Program</c> <c>Files</c> (<c>x</c>
<c>86</c>)<c>\git\cmd</c>;<c>C:\RailsInstaller\Ruby2.0.0\bin</c>;<c>C:\RailsInstaller\Git\cmd</c>;<c>C:\RailsIn
staller\Ruby1.9.3\bin</c>;<c>C:\Users\Javi\AppData\Roaming\npm
</c></code>
"
23842713|"<t>Using Python</t> <t>3</t> <t>in</t> <t>virtualenv</t>"|"<t>Using</t> <t>virtualenv</t>, <t>I</t> <t>run</t> <t>my</t> <t>projects</t> <t>with</t> <t>the</t> <t>default</t> <t>version</t> <t>of</t> <t>Python</t> (<t>2.7).</t> <t>On</t> <t>one</t> <t>project</t>, <t>I</t> <t>need</t> <t>to</t> <t>use</t> <t>Python</t> <t>3.4.</t> 

<t>I</t> <t>used</t> <code><c>brew</c> <c>install</c> <c>python3</c></code> <t>to</t> <t>install</t> <t>it</t> <t>on</t> <t>my</t> <t>Mac</t>. <t>Now</t>, <t>how</t> <t>do</t> <t>I</t> <t>create</t> <t>a</t> <t>virtualenv</t> <t>that</t> <t>uses</t> <t>the</t> <t>new</t> <t>version</t>?

<t>e.g.</t> <t>sudo</t> <t>virtualenv</t> <t>envPython3</t>

<t>If</t> <t>I</t> <t>try</t>:

<code><c>virtualenv</c> <c>-</c><c>p</c> <c>python3</c> <c>test</c>
</code>

<t>I</t> <t>get</t>:

<code><c>Running</c> <c>virtualenv</c> <c>with</c> <c>interpreter</c> <c>/usr/local/bin/python3
Using</c> <c>base</c> <c>prefix</c> '<c>/usr/local/Cellar/python3/3.4.0_1/Frameworks/Python.framework/Versions/3.4</c>'
<c>New</c> <c>python</c> <c>executable</c> <c>in</c> <c>test</c><c>/bin/python3.4
Also</c> <c>creating</c> <c>executable</c> <c>in</c> <c>test</c><c>/bin/python
Failed</c> <c>to</c> <c>import</c> <c>the</c> <c>site</c> <c>module</c>
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>/Users/user/Documents/workspace/test/test/bin/../lib/python3.4/site.py</c>"", <c>line</c> <c>67</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>import</c> <c>os</c>
  <c>File</c> ""<c>/Users/user/Documents/workspace/test/test/bin/../lib/python3.4/os.py</c>"", <c>line</c> <c>634</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>from</c> <c>_collections_abc</c> <c>import</c> <c>MutableMapping</c>
<c>ImportError</c>: <c>No</c> <c>module</c> <c>named</c> '<c>_collections_abc</c>'
<c>ERROR</c>: <c>The</c> <c>executable</c> <c>test</c><c>/bin/python3.4</c> <c>is</c> <c>not</c> <c>functioning</c>
<c>ERROR</c>: <c>It</c> <c>thinks</c> <c>sys</c><c>.</c><c>prefix</c> <c>is</c> '<c>/Users/user/Documents/workspace/test</c>' (<c>should</c> <c>be</c> '<c>/Users/user/Documents/workspace/test/test</c>')
<c>ERROR</c>: <c>virtualenv</c> <c>is</c> <c>not</c> <c>compatible</c> <c>with</c> <c>this</c> <c>system</c> <c>or</c> <c>executable</c>
</code>
"
25865270|"<t>How</t> <t>to</t> <t>install</t> <t>Python MySQLdb</t> <t>module</t> <t>using</t> <t>pip</t>?"|"<t>How</t> <t>can</t> <t>I</t> <t>install</t> <t>the</t> <t>MySQLdb</t> <t>module</t> <t>for</t> <t>Python</t> <t>using</t> <t>pip</t>?
"
26053982|"<t>error</t>: <t>Setup</t> <t>script</t> <t>exited</t> <t>with</t> <t>error</t>: <t>command</t> '<t>x86_64-linux-gnu-gcc</t>' <t>failed</t> <t>with</t> <t>exit</t> <t>status</t> <t>1</t>"|"<t>When</t> <t>I</t> <t>try</t> <t>to</t> <t>install</t> <t>odoo-server</t> <t>I</t> <t>got</t> <t>the</t> <t>following</t> <t>error</t> <t>could</t> <t>anyone</t> <t>help</t> <t>me</t> <t>to</t> <t>resolve</t> <t>this</t>?

<code><c>error</c>: <c>Setup</c> <c>script</c> <c>exited</c> <c>with</c> <c>error</c>: <c>command</c> '<c>x86_64-linux-gnu-gcc</c>' <c>failed</c> <c>with</c> <c>exit</c> <c>status</c> <c>1</c>
</code>
"
27341064|"<t>How</t> <t>do</t> <t>I</t> <t>fix</t> '<t>ImportError</t>: <t>cannot</t> <t>import</t> <t>name</t> <t>IncompleteRead</t>'?"|"<t>When</t> <t>I</t> <t>try</t> <t>to</t> <t>install</t> <t>anything</t> <t>with</t> <code><c>pip</c></code> <t>or</t> <code><c>pip3</c></code>, <t>I</t> <t>get</t>:

<code><c>$</c> <c>sudo</c> <c>pip3</c> <c>install</c> <c>python3-tk</c>
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
  <c>File</c> ""<c>/usr/bin/pip3</c>"", <c>line</c> <c>9</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>load_entry_point(</c>'<c>pip</c><c>==</c><c>1.5.6</c>', '<c>console_scripts</c>', '<c>pip3</c>')()
  <c>File</c> ""<c>/usr/lib/python3/dist-packages/pkg_resources.py</c>"", <c>line</c> <c>356</c>, <c>in</c> <c>load_entry_point</c>
    <c>return</c> <c>get_distribution(</c><c>dist</c>)<c>.</c><c>load_entry_point(</c><c>group</c>, <c>name</c>)
  <c>File</c> ""<c>/usr/lib/python3/dist-packages/pkg_resources.py</c>"", <c>line</c> <c>2476</c>, <c>in</c> <c>load_entry_point</c>
    <c>return</c> <c>ep</c><c>.</c><c>load(</c>)
  <c>File</c> ""<c>/usr/lib/python3/dist-packages/pkg_resources.py</c>"", <c>line</c> <c>2190</c>, <c>in</c> <c>load</c>
    ['<c>__name__</c>'])
  <c>File</c> ""<c>/usr/lib/python3/dist-packages/pip/__init__.py</c>"", <c>line</c> <c>61</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>from</c> <c>pip</c><c>.</c><c>vcs</c> <c>import</c> <c>git</c>, <c>mercurial</c>, <c>subversion</c>, <c>bazaar</c>  # <c>noqa</c>
  <c>File</c> ""<c>/usr/lib/python3/dist-packages/pip/vcs/mercurial.py</c>"", <c>line</c> <c>9</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>from</c> <c>pip</c><c>.</c><c>download</c> <c>import</c> <c>path_to_url</c>
  <c>File</c> ""<c>/usr/lib/python3/dist-packages/pip/download.py</c>"", <c>line</c> <c>25</c>, <c>in</c> <c>&lt;</c><c>module</c><c>&gt;</c>
    <c>from</c> <c>requests</c><c>.</c><c>compat</c> <c>import</c> <c>IncompleteRead</c>
<c>ImportError</c>: <c>cannot</c> <c>import</c> <c>name</c> '<c>IncompleteRead</c>'
</code>

<t>I</t> <t>have</t> <t>a</t> <t>Ubuntu</t> <t>14.10</t> <t>system</t>.

<t>How</t> <t>can</t> <t>I</t> <t>fix</t> <t>this</t> <t>problem</t>?
"
27835619|"<t>urllib</t> <t>and</t> ""<t>SSL</t>: <t>CERTIFICATE_VERIFY_FAILED</t>"" <t>Error</t>"|"<t>I</t> <t>am</t> <t>getting</t> <t>this</t> <t>error</t>

<code><c>Exception</c> <c>in</c> <c>thread</c> <c>Thread-3</c>:
<c>Traceback</c> (<c>most</c> <c>recent</c> <c>call</c> <c>last</c>):
<c>File</c> ""<c>/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py</c>"", <c>line</c> <c>810</c>, <c>in</c>        <c>__bootstrap_inner</c>
<c>self</c><c>.</c><c>run(</c>)
<c>File</c> ""<c>/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py</c>"", <c>line</c> <c>763</c>, <c>in</c>  <c>run</c>
<c>self</c><c>.</c><c>__target(</c><c>*</c><c>self</c><c>.</c><c>__args</c>, <c>**</c><c>self</c><c>.</c><c>__kwargs</c>)
<c>File</c> ""<c>/Users/Matthew/Desktop/Skypebot</c> <c>2.0/bot.py</c>"", <c>line</c> <c>271</c>, <c>in</c> <c>process</c>
<c>info</c> <c>=</c> <c>urllib2</c><c>.</c><c>urlopen(</c><c>req</c>)<c>.</c><c>read(</c>)
<c>File</c> ""<c>/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py</c>"", <c>line</c> <c>154</c>, <c>in</c> <c>urlopen</c>
<c>return</c> <c>opener</c><c>.</c><c>open(</c><c>url</c>, <c>data</c>, <c>timeout</c>)
<c>File</c> ""<c>/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py</c>"", <c>line</c> <c>431</c>, <c>in</c> <c>open</c>
<c>response</c> <c>=</c> <c>self</c><c>.</c><c>_open(</c><c>req</c>, <c>data</c>)
<c>File</c> ""<c>/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py</c>"", <c>line</c> <c>449</c>, <c>in</c> <c>_open</c>
'<c>_open</c>', <c>req</c>)
<c>File</c> ""<c>/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py</c>"", <c>line</c> <c>409</c>, <c>in</c> <c>_call_chain</c>
<c>result</c> <c>=</c> <c>func(</c><c>*</c><c>args</c>)
<c>File</c> ""<c>/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py</c>"", <c>line</c> <c>1240</c>, <c>in</c> <c>https_open</c>
<c>context</c><c>=</c><c>self</c><c>.</c><c>_context</c>)
<c>File</c> ""<c>/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py</c>"", <c>line</c> <c>1197</c>, <c>in</c> <c>do_open</c>
<c>raise</c> <c>URLError(</c><c>err</c>)
<c>URLError</c>: <c>&lt;</c><c>urlopen</c> <c>error</c> [<c>SSL</c>: <c>CERTIFICATE_VERIFY_FAILED</c>] <c>certificate</c> <c>verify</c> <c>failed</c> (<c>_ssl</c><c>.</c><c>c</c>:<c>581</c>)<c>&gt;</c>
</code>

<t>This</t> <t>is</t> <t>the</t> <t>code</t> <t>that</t> <t>is</t> <t>causing</t> <t>this</t> <t>error</t>:

<code><c>if</c> <c>input</c><c>.</c><c>startswith(</c>""<c>!</c><c>web</c>""):
    <c>input</c> <c>=</c> <c>input</c><c>.</c><c>replace(</c>""<c>!</c><c>web</c> "", """")      
    <c>url</c> <c>=</c> ""<c>http</c><c>s://domainsearch.p.mashape.com/index.php?name=</c>"" <c>+</c> <c>input</c>
    <c>req</c> <c>=</c> <c>urllib2</c><c>.</c><c>Request(</c><c>url</c>, <c>headers</c><c>=</c>{ '<c>X-Mashape-Key</c>': '<c>XXXXXXXXXXXXXXXXXXXX</c>' })
    <c>info</c> <c>=</c> <c>urllib2</c><c>.</c><c>urlopen(</c><c>req</c>)<c>.</c><c>read(</c>)
    <c>Message</c><c>.</c><c>Chat</c><c>.</c><c>SendMessage</c> ("""" + info)
</code>

<t>The API Im</t> <t>using</t> <t>requires</t> <t>me</t> <t>to</t> <t>use</t> <t>the</t> <t>https</t>. <t>How</t> <t>can</t> <t>I</t> <t>make</t> <t>it</t> <t>bypass</t> <t>the</t> <t>verification</t>?
"
27885397|"How do I install a Python package with a .whl file?"|"<t>I'm</t> <t>having</t> <t>trouble</t> <t>installing</t> <t>a</t> <t>Python</t> <t>package</t> (<t>specifically</t>, <t>JPype1</t> <t>0.5.7</t>) <t>on</t> <t>my</t> <t>Windows</t> <t>machine</t>, <t>and</t> <t>would</t> <t>like</t> <t>to</t> <t>install</t> <t>it</t> with <t>Christoph Gohlke's Window</t> <t>binaries</t>. (<t>Which</t>, <t>to</t> <t>my</t> <t>experience</t>, <t>alleviated</t> <t>much</t> <t>of</t> <t>the</t> <t>fuss</t> <t>for</t> <t>many</t> <t>other</t> <t>package</t> <t>installations</t>.)

<t>However</t>, <t>while</t> <t>Christoph</t> <t>used</t> <t>to</t> <t>provide</t> .<t>exe</t> <t>files</t> <t>in</t> <t>the</t> <t>past</t>, <t>recently</t> <t>it</t> <t>seems</t> <t>he's</t> <t>uploading</t> .<t>whl</t> <t>files</t> <t>instead</t>.

<t>http://www.lfd.uci.edu/~gohlke/pythonlibs/#jpype</t>

<t>But</t> <t>how</t> <t>do</t> <t>I</t> <t>install</t> .<t>whl</t> <t>files</t>?


  <t>Notes</t>:
  
  
  <t>I've</t> <t>found</t> <t>documents</t> <t>on</t> <t>wheel</t>, <t>but</t> <t>they</t> <t>don't</t> <t>seem</t> <t>so</t> <t>staightforward</t> <t>in</t> <t>explaining</t> <t>how</t> <t>to</t> <t>install</t> .<t>whl</t> <t>files</t>.
  <t>This</t> <t>question</t> <t>is</t> <t>a</t> <t>duplicate</t> <t>with</t> <t>this</t> <t>question</t>, <t>which</t> <t>wasn't</t> <t>directly</t> <t>answered</t>.
  

"
